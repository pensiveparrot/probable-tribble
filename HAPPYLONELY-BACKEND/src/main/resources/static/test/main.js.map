{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAIsC;;;;;;;;;;;;;ICJtCC,4DAAA,oBACqB;IADoCA,wDAAA,yBAAAG,uEAAAC,MAAA;MAAAJ,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAAAO,MAAA,CAAAG,QAAA,GAAAN,MAAA;IAAA,EAAoB;IACxDJ,0DAAA,EAAa;;;;IADuBA,wDAAA,UAAAa,MAAA,CAAAH,QAAA,CAAoB;;;;;;IAa3EV,4DAAA,UAAkE;IAC1DA,wDAAA,sBAAAc,uDAAA;MAAAd,2DAAA,CAAAe,GAAA;MAAA,MAAAC,MAAA,GAAAhB,2DAAA;MAAA,OAAYA,yDAAA,CAAAgB,MAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAChCjB,4DAAA,aAAqB;IACsBA,oDAAA,YAAK;IAAAA,0DAAA,EAAQ;IACtDA,4DAAA,gBAA0F;IAAlEA,wDAAA,2BAAAmB,6DAAAf,MAAA;MAAAJ,2DAAA,CAAAe,GAAA;MAAA,MAAAK,MAAA,GAAApB,2DAAA;MAAA,OAAaA,yDAAA,CAAAoB,MAAA,CAAAC,OAAA,CAAAC,WAAA,GAAAlB,MAAA,CAA2B;IAAA,EAAP;IAAzDJ,0DAAA,EAA0F;IAE5FA,4DAAA,aAAqB;IACgBA,oDAAA,aAAM;IAAAA,0DAAA,EAAQ;IACjDA,4DAAA,wBACiB;IADSA,wDAAA,2BAAAuB,qEAAAnB,MAAA;MAAAJ,2DAAA,CAAAe,GAAA;MAAA,MAAAS,MAAA,GAAAxB,2DAAA;MAAA,OAAaA,yDAAA,CAAAwB,MAAA,CAAAH,OAAA,CAAAI,KAAA,GAAArB,MAAA,CAAqB;IAAA,EAAP;IACpCJ,0DAAA,EAAgB;IAEnCA,4DAAA,cAAqB;IACgBA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACrDA,4DAAA,iBAAwE;IAAtDA,wDAAA,2BAAA0B,8DAAAtB,MAAA;MAAAJ,2DAAA,CAAAe,GAAA;MAAA,MAAAY,OAAA,GAAA3B,2DAAA;MAAA,OAAaA,yDAAA,CAAA2B,OAAA,CAAAN,OAAA,CAAAO,KAAA,GAAAxB,MAAA,CAAqB;IAAA,EAAP;IAA7CJ,0DAAA,EAAwE;IAE1EA,4DAAA,cAAqB;IAC0BA,oDAAA,yBAAiB;IAAAA,0DAAA,EAAQ;IACtEA,4DAAA,sBAC6E;IAD5CA,wDAAA,2BAAA6B,mEAAAzB,MAAA;MAAAJ,2DAAA,CAAAe,GAAA;MAAA,MAAAe,OAAA,GAAA9B,2DAAA;MAAA,OAAaA,yDAAA,CAAA8B,OAAA,CAAAT,OAAA,CAAAU,eAAA,GAAA3B,MAAA,CAA+B;IAAA,EAAP;IACOJ,0DAAA,EAAa;IAE5FA,4DAAA,cAAqB;IACmBA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,iBAAiF;IAA5DA,wDAAA,2BAAAgC,8DAAA5B,MAAA;MAAAJ,2DAAA,CAAAe,GAAA;MAAA,MAAAkB,OAAA,GAAAjC,2DAAA;MAAA,OAAaA,yDAAA,CAAAiC,OAAA,CAAAZ,OAAA,CAAAa,QAAA,GAAA9B,MAAA,CAAwB;IAAA,EAAP;IAAnDJ,0DAAA,EAAiF;IAEnFA,uDAAA,kBAA6G;IAC/GA,0DAAA,EAAO;;;;IArBqBA,uDAAA,GAAiC;IAAjCA,wDAAA,YAAAqC,MAAA,CAAAhB,OAAA,CAAAC,WAAA,CAAiC;IAI/BtB,uDAAA,GAA2B;IAA3BA,wDAAA,YAAAqC,MAAA,CAAAhB,OAAA,CAAAI,KAAA,CAA2B;IAKnCzB,uDAAA,GAA2B;IAA3BA,wDAAA,YAAAqC,MAAA,CAAAhB,OAAA,CAAAO,KAAA,CAA2B;IAIZ5B,uDAAA,GAAqC;IAArCA,wDAAA,YAAAqC,MAAA,CAAAhB,OAAA,CAAAU,eAAA,CAAqC,YAAAM,MAAA,CAAAC,sBAAA;IAKjDtC,uDAAA,GAA8B;IAA9BA,wDAAA,YAAAqC,MAAA,CAAAhB,OAAA,CAAAa,QAAA,CAA8B;IAErClC,uDAAA,EAAqB;IAArBA,wDAAA,UAAAqC,MAAA,CAAAE,WAAA,CAAqB;;;;;;IAIzCvC,4DAAA,aAAgF;IACvCA,wDAAA,mBAAAwC,sDAAA;MAAAxC,2DAAA,CAAAyC,IAAA;MAAA,MAAAC,OAAA,GAAA1C,2DAAA;MAAA,OAASA,yDAAA,CAAA0C,OAAA,CAAAC,qBAAA,EAAuB;IAAA,EAAC;IACtC3C,0DAAA,EAAS;;;;;;IAG7CA,4DAAA,UAAsD;IAC9CA,wDAAA,sBAAA4C,uDAAA;MAAA5C,2DAAA,CAAA6C,IAAA;MAAA,MAAAC,OAAA,GAAA9C,2DAAA;MAAA,OAAYA,yDAAA,CAAA8C,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAChC/C,4DAAA,aAAqB;IACsBA,oDAAA,YAAK;IAAAA,0DAAA,EAAQ;IACtDA,4DAAA,gBAA0F;IAAlEA,wDAAA,2BAAAgD,6DAAA5C,MAAA;MAAAJ,2DAAA,CAAA6C,IAAA;MAAA,MAAAI,OAAA,GAAAjD,2DAAA;MAAA,OAAaA,yDAAA,CAAAiD,OAAA,CAAA5B,OAAA,CAAAC,WAAA,GAAAlB,MAAA,CAA2B;IAAA,EAAP;IAAzDJ,0DAAA,EAA0F;IAE5FA,4DAAA,aAAqB;IACgBA,oDAAA,aAAM;IAAAA,0DAAA,EAAQ;IACjDA,4DAAA,wBACiB;IADSA,wDAAA,2BAAAkD,qEAAA9C,MAAA;MAAAJ,2DAAA,CAAA6C,IAAA;MAAA,MAAAM,OAAA,GAAAnD,2DAAA;MAAA,OAAaA,yDAAA,CAAAmD,OAAA,CAAA9B,OAAA,CAAAI,KAAA,GAAArB,MAAA,CAAqB;IAAA,EAAP;IACpCJ,0DAAA,EAAgB;IAEnCA,4DAAA,cAAqB;IACgBA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACrDA,4DAAA,iBAAwE;IAAtDA,wDAAA,2BAAAoD,8DAAAhD,MAAA;MAAAJ,2DAAA,CAAA6C,IAAA;MAAA,MAAAQ,OAAA,GAAArD,2DAAA;MAAA,OAAaA,yDAAA,CAAAqD,OAAA,CAAAhC,OAAA,CAAAO,KAAA,GAAAxB,MAAA,CAAqB;IAAA,EAAP;IAA7CJ,0DAAA,EAAwE;IAE1EA,4DAAA,cAAqB;IAC0BA,oDAAA,yBAAiB;IAAAA,0DAAA,EAAQ;IACtEA,4DAAA,sBAC6E;IAD5CA,wDAAA,2BAAAsD,mEAAAlD,MAAA;MAAAJ,2DAAA,CAAA6C,IAAA;MAAA,MAAAU,OAAA,GAAAvD,2DAAA;MAAA,OAAaA,yDAAA,CAAAuD,OAAA,CAAAlC,OAAA,CAAAU,eAAA,GAAA3B,MAAA,CAA+B;IAAA,EAAP;IACOJ,0DAAA,EAAa;IAE5FA,4DAAA,cAAqB;IACmBA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,iBAAiF;IAA5DA,wDAAA,2BAAAwD,8DAAApD,MAAA;MAAAJ,2DAAA,CAAA6C,IAAA;MAAA,MAAAY,OAAA,GAAAzD,2DAAA;MAAA,OAAaA,yDAAA,CAAAyD,OAAA,CAAApC,OAAA,CAAAa,QAAA,GAAA9B,MAAA,CAAwB;IAAA,EAAP;IAAnDJ,0DAAA,EAAiF;IAEnFA,uDAAA,kBAA8G;IAChHA,0DAAA,EAAO;;;;IArBqBA,uDAAA,GAAiC;IAAjCA,wDAAA,YAAA0D,MAAA,CAAArC,OAAA,CAAAC,WAAA,CAAiC;IAI/BtB,uDAAA,GAA2B;IAA3BA,wDAAA,YAAA0D,MAAA,CAAArC,OAAA,CAAAI,KAAA,CAA2B;IAKnCzB,uDAAA,GAA2B;IAA3BA,wDAAA,YAAA0D,MAAA,CAAArC,OAAA,CAAAO,KAAA,CAA2B;IAIZ5B,uDAAA,GAAqC;IAArCA,wDAAA,YAAA0D,MAAA,CAAArC,OAAA,CAAAU,eAAA,CAAqC,YAAA2B,MAAA,CAAApB,sBAAA;IAKjDtC,uDAAA,GAA8B;IAA9BA,wDAAA,YAAA0D,MAAA,CAAArC,OAAA,CAAAa,QAAA,CAA8B;;;ADzDrD,MAAOyB,cAAc;EAczBC,YAAoBC,cAA8B,EAAUC,WAAwB;IAAhE,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAbvE,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,YAAY,GAAY,KAAK;IAC7B,KAAAC,cAAc,GAAY,KAAK;IAC/B,KAAAvD,QAAQ,GAAc,EAAE;IACxB,KAAAwD,UAAU,GAAW,CAAC;IACtB,KAAA7C,OAAO,GAAQ;MAAE8C,EAAE,EAAE,EAAE;MAAE7C,WAAW,EAAE,EAAE;MAAEG,KAAK,EAAE,CAAC;MAAEG,KAAK,EAAE,EAAE;MAAEG,eAAe,EAAE,EAAE;MAAEG,QAAQ,EAAE;IAAE,CAAE;IAClG,KAAAkC,IAAI,GAAQ;MAAED,EAAE,EAAE,EAAE;MAAEE,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE;IAEnE,KAAAjC,sBAAsB,GAAG,CACvB;MAAEkC,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAS,CAAE,EACvC;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAU,CAAE,EACzC;MAAED,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAY,CAAE,CAC/C;EACuF;EAExF,IAAIlC,WAAWA,CAAA;IACb,OAAO,WAAW,IAAI,CAAClB,OAAO,CAACC,WAAW,EAAE;EAC9C;EAEMoD,gBAAgBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,oKAAA;MACpBD,KAAI,CAACX,YAAY,GAAG,IAAI;MACxBW,KAAI,CAACV,cAAc,GAAG,KAAK;MAC3B,IAAI;QACF,MAAMY,QAAQ,SAAS9E,oDAAc,CAAC4E,KAAI,CAACd,cAAc,CAACa,gBAAgB,CAACC,KAAI,CAACtD,OAAO,CAACC,WAAW,CAAC,CAAC;QACrGqD,KAAI,CAACT,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAIH,KAAI,CAACT,UAAU,KAAK,GAAG,EAAE;UAC3BS,KAAI,CAACtD,OAAO,GAAGwD,QAAQ,CAACE,IAAK;UAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,KAAI,CAACtD,OAAO,CAAC;SACvC,MACI;UACH,IAAIsD,KAAI,CAACjE,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BP,KAAI,CAACjE,QAAQ,CAACyE,GAAG,EAAE;UACrBR,KAAI,CAACZ,cAAc,GAAG,mCAAmC,GAAGY,KAAI,CAACtD,OAAO,CAACC,WAAW,GAAG,oBAAoB,GAAGqD,KAAI,CAACT,UAAU;UAC7HS,KAAI,CAACjE,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEZ,KAAI,CAACZ;UAAc,CAAE,CAAC;;QAE1FiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,KAAI,CAACT,UAAU,CAAC;OACzC,CAAC,OAAOsB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEA7C,qBAAqBA,CAAA;IACnB,IAAI,CAACsB,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACD,YAAY,GAAG,KAAK;EAC3B;EACMjB,aAAaA,CAAA;IAAA,IAAA0C,MAAA;IAAA,OAAAb,oKAAA;MACjB,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC0F,MAAI,CAAC5B,cAAc,CAAC6B,UAAU,CAACD,MAAI,CAACpE,OAAQ,CAAC,CAAC;QACzFoE,MAAI,CAACvB,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAIW,MAAI,CAACvB,UAAU,KAAK,GAAG,EAAE;UAC3BuB,MAAI,CAACpE,OAAO,GAAGwD,QAAQ,CAACE,IAAK;UAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEQ,MAAI,CAACpE,OAAQ,CAAC;SACxC,MACI;UACH,IAAIoE,MAAI,CAAC/E,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BO,MAAI,CAAC/E,QAAQ,CAACyE,GAAG,EAAE;UACrBM,MAAI,CAAC1B,cAAc,GAAG,kCAAkC,GAAG0B,MAAI,CAACpE,OAAO,CAACC,WAAW,GAAG,oBAAoB,GAAGmE,MAAI,CAACvB,UAAU;UAC5HuB,MAAI,CAAC/E,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEE,MAAI,CAAC1B;UAAc,CAAE,CAAC;;QAG1FiB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEQ,MAAI,CAACvB,UAAU,CAAC;OAC7C,CACD,OAAOsB,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEMvE,aAAaA,CAAA;IAAA,IAAA0E,MAAA;IAAA,OAAAf,oKAAA;MACjB,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC4F,MAAI,CAAC9B,cAAc,CAAC5C,aAAa,CAAC0E,MAAI,CAACtE,OAAQ,CAAC,CAAC;QAC5FsE,MAAI,CAACzB,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAIa,MAAI,CAACzB,UAAU,KAAK,GAAG,EAAE;UAC3ByB,MAAI,CAACtE,OAAO,GAAGwD,QAAQ,CAACE,IAAK;UAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEU,MAAI,CAACtE,OAAQ,CAAC;SACxC,MACI;UACH,IAAIsE,MAAI,CAACjF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BS,MAAI,CAACjF,QAAQ,CAACyE,GAAG,EAAE;UACrBQ,MAAI,CAAC5B,cAAc,GAAG,kCAAkC,GAAG4B,MAAI,CAACtE,OAAO,CAAC8C,EAAE,GAAG,oBAAoB,GAAGwB,MAAI,CAACzB,UAAU;UACnHyB,MAAI,CAACjF,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEI,MAAI,CAAC5B;UAAc,CAAE,CAAC;;OAE3F,CACD,OAAOyB,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEME,UAAUA,CAAA;IAAA,IAAAE,MAAA;IAAA,OAAAhB,oKAAA;MACd,IAAI;QACF,MAAMC,QAAQ,GAAQ9E,oDAAc,CAAC6F,MAAI,CAAC/B,cAAc,CAAC6B,UAAU,CAACE,MAAI,CAACvE,OAAQ,CAAC,CAAC;QACnFuE,MAAI,CAAC1B,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAIc,MAAI,CAAC1B,UAAU,KAAK,GAAG,EAAE;UAC3B0B,MAAI,CAACvE,OAAO,GAAGwD,QAAQ,CAACE,IAAK;UAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEW,MAAI,CAACvE,OAAQ,CAAC;SACxC,MACI;UACH,IAAIuE,MAAI,CAAClF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BU,MAAI,CAAClF,QAAQ,CAACyE,GAAG,EAAE;UACrBS,MAAI,CAAC7B,cAAc,GAAG,kCAAkC,GAAG6B,MAAI,CAACvE,OAAO,CAACC,WAAW,GAAG,oBAAoB,GAAGsE,MAAI,CAAC1B,UAAU;UAC5H0B,MAAI,CAAClF,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEK,MAAI,CAAC7B;UAAc,CAAE,CAAC;;OAE3F,CAAC,OAAOyB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEMK,UAAUA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAlB,oKAAA;MACd,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC+F,MAAI,CAAChC,WAAW,CAAC+B,UAAU,CAACC,MAAI,CAAC1B,IAAI,CAACD,EAAG,CAAC,CAAC;QACtFa,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;OACtB,CAAC,OAAOW,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEAO,UAAUA,CAAA;IACR,IAAI;MACF,MAAMlB,QAAQ,GAAQ9E,oDAAc,CAAC,IAAI,CAAC+D,WAAW,CAACiC,UAAU,CAAC,IAAI,CAAC3B,IAAK,CAAC,CAAC;MAC7E,IAAI,CAACF,UAAU,GAAGW,QAAQ,CAACC,MAAM;MACjC,IAAI,IAAI,CAACZ,UAAU,KAAK,GAAG,EAAE;QAC3B,IAAI,CAACE,IAAI,GAAGS,QAAQ,CAACE,IAAK;QAC1BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACb,IAAK,CAAC;OAClC,MACI;QACH,IAAI,IAAI,CAAC1D,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1B,IAAI,CAACxE,QAAQ,CAACyE,GAAG,EAAE;QACrB,IAAI,CAACpB,cAAc,GAAG,+BAA+B,GAAG,IAAI,CAACK,IAAI,CAACD,EAAE,GAAG,oBAAoB,GAAG,IAAI,CAACD,UAAU;QAC7G,IAAI,CAACxD,QAAQ,CAAC0E,IAAI,CAAC;UAAEC,QAAQ,EAAE,OAAO;UAAEC,OAAO,EAAE,OAAO;UAAEC,MAAM,EAAE,IAAI,CAACxB;QAAc,CAAE,CAAC;;MAE1FiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACf,UAAW,CAAC;KAC1C,CAAC,OAAOsB,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;EAGxB;EAEMQ,OAAOA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAArB,oKAAA;MACX,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAACkG,MAAI,CAACnC,WAAW,CAACkC,OAAO,CAACC,MAAI,CAAC7B,IAAK,CAAC,CAAC;QAChF6B,MAAI,CAAC/B,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAImB,MAAI,CAAC/B,UAAU,KAAK,GAAG,EAAE;UAC3B+B,MAAI,CAAC7B,IAAI,GAAGS,QAAQ,CAACE,IAAK;UAC1BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEgB,MAAI,CAAC7B,IAAK,CAAC;SAClC,MACI;UACH,IAAI6B,MAAI,CAACvF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1Be,MAAI,CAACvF,QAAQ,CAACyE,GAAG,EAAE;UACrBc,MAAI,CAAClC,cAAc,GAAG,8BAA8B,GAAGkC,MAAI,CAAC7B,IAAI,CAACD,EAAE,GAAG,oBAAoB,GAAG8B,MAAI,CAAC/B,UAAU;UAC5G+B,MAAI,CAACvF,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEU,MAAI,CAAClC;UAAc,CAAE,CAAC;;QACxFiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEgB,MAAI,CAAC/B,UAAW,CAAC;OAC5C,CAAC,OAAOsB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEMU,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAvB,oKAAA;MACb,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAACoG,MAAI,CAACrC,WAAW,CAACoC,SAAS,CAACC,MAAI,CAAC/B,IAAK,CAAC,CAAC;QAClF+B,MAAI,CAACjC,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAIqB,MAAI,CAACjC,UAAU,KAAK,GAAG,EAAE;UAC3BiC,MAAI,CAAC/B,IAAI,GAAGS,QAAQ,CAACE,IAAK;UAC1BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEkB,MAAI,CAAC/B,IAAK,CAAC;SAClC,MAAM;UACL,IAAI+B,MAAI,CAACzF,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BiB,MAAI,CAACzF,QAAQ,CAACyE,GAAG,EAAE;UACrBgB,MAAI,CAACpC,cAAc,GAAG,kCAAkC,GAAGoC,MAAI,CAAC9E,OAAO,CAACC,WAAW,GAAG,oBAAoB,GAAG6E,MAAI,CAACjC,UAAU;UAC5HiC,MAAI,CAACzF,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEY,MAAI,CAACpC;UAAc,CAAE,CAAC;;QAE1FiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEkB,MAAI,CAACjC,UAAW,CAAC;OAC1C,CAAC,OAAOsB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEMY,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAzB,oKAAA;MACjB,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAACsG,MAAI,CAACxC,cAAc,CAACuC,aAAa,CAACC,MAAI,CAAChF,OAAO,CAAC8C,EAAG,CAAC,CAAC;QAC/Fa,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;OACtB,CAAC,OAAOW,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAAC,QAAAc,CAAA;qBAtLU3C,cAAc,EAAA3D,+DAAA,CAAAwG,yEAAA,GAAAxG,+DAAA,CAAA0G,oEAAA;EAAA;EAAA,QAAAE,EAAA;UAAdjD,cAAc;IAAAkD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX3BnH,wDAAA,IAAAsH,oCAAA,wBACkC;QAElCtH,4DAAA,aAAqB;QAEXA,wDAAA,sBAAAuH,iDAAA;UAAA,OAAYH,GAAA,CAAA1C,gBAAA,EAAkB;QAAA,EAAC;QACnC1E,4DAAA,aAA0B;QACjBA,wDAAA,2BAAAwH,uDAAApH,MAAA;UAAA,OAAAgH,GAAA,CAAA/F,OAAA,CAAAC,WAAA,GAAAlB,MAAA;QAAA,EAAiC;QAAxCJ,0DAAA,EAA0G;QAC1GA,uDAAA,gBAA8G;QAChHA,0DAAA,EAAM;QAIVA,wDAAA,IAAAyH,6BAAA,kBA0BM,IAAAC,6BAAA,qBAAAC,6BAAA;QAkCR3H,0DAAA,EAAM;;;QAzEOA,wDAAA,SAAAoH,GAAA,CAAAlD,UAAA,QAAAkD,GAAA,CAAAlD,UAAA,SAA0C;QAOxClE,uDAAA,GAAiC;QAAjCA,wDAAA,YAAAoH,GAAA,CAAA/F,OAAA,CAAAC,WAAA,CAAiC;QAMxCtB,uDAAA,GAA0D;QAA1DA,wDAAA,SAAAoH,GAAA,CAAA/F,OAAA,CAAA8C,EAAA,IAAAiD,GAAA,CAAApD,YAAA,IAAAoD,GAAA,CAAAnD,cAAA,WAA0D;QA4B1DjE,uDAAA,EAAwD;QAAxDA,wDAAA,SAAAoH,GAAA,CAAAnD,cAAA,cAAAmD,GAAA,CAAApD,YAAA,WAAwD;QAKxDhE,uDAAA,EAA8C;QAA9CA,wDAAA,SAAAoH,GAAA,CAAAnD,cAAA,IAAAmD,GAAA,CAAApD,YAAA,WAA8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CC;AACJ;AACG;AACA;AACG;AACH;AACiB;AACG;AACM;AACA;AACvB;AACS;AACzB;AACmB;;;AAG5D,MAAMyE,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACpD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAER,kEAAcA;AAAA,CAAE,EAC5C;EAAEK,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAEP,4EAAiBA;AAAA,CAAE,EAClD;EAAEI,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEf,+DAAa;EAAEgB,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EACpE;EAAEG,IAAI,EAAE,KAAK;EAAEG,SAAS,EAAEhB,4DAAY;EAAEiB,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EAClE;EAAEG,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEd,+DAAa;EAAEe,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EACpE;EAAEG,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEb,+DAAa;EAAEc,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EACpE;EAAEG,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAElF,kEAAc;EAAEmF,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EACtE;EAAEG,IAAI,EAAE,YAAY;EAAEG,SAAS,EAAEZ,gFAAkB;EAAEa,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EAC/E;EAAEG,IAAI,EAAE,SAAS;EAAEG,SAAS,EAAEX,mFAAmB;EAAEY,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EAC7E;EAAEG,IAAI,EAAE,eAAe;EAAEG,SAAS,EAAEV,yFAAqB;EAAEW,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EACrF;EAAEG,IAAI,EAAE,YAAY;EAAEG,SAAS,EAAET,yFAAqB;EAAEU,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EAClF;EAAEG,IAAI,EAAE,QAAQ;EAAEG,SAAS,EAAEL,sEAAe;EAAEM,WAAW,EAAE,CAACP,mDAAS;AAAC,CAAE,EACxE;EAAEG,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAO,CAAE,CACpC;AAMK,MAAOI,gBAAgB;EAAA,QAAAzC,CAAA;qBAAhByC,gBAAgB;EAAA;EAAA,QAAAnC,EAAA;UAAhBmC;EAAgB;EAAA,QAAAC,EAAA;cAHjBpB,0DAAY,CAACqB,OAAO,CAACR,MAAM,EAAE;MAAES,OAAO,EAAE;IAAI,CAAE,CAAC,EAC/CtB,0DAAY;EAAA;;;uHAEXmB,gBAAgB;IAAAI,OAAA,GAAA3C,0DAAA;IAAA4C,OAAA,GAFjBxB,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;IEnCxB5H,uDAAA,iBAAyB;;;ADSnB,MAAOqJ,YAAY;EACvBzF,YAAmB0F,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAChEC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE;EAC7B;EAAC,QAAAnD,CAAA;qBAJU+C,YAAY,EAAArJ,+DAAA,CAAAwG,qEAAA,GAAAxG,+DAAA,CAAA0G,mDAAA;EAAA;EAAA,QAAAE,EAAA;UAAZyC,YAAY;IAAAxC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2C,sBAAAzC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVzBnH,wDAAA,IAAA6J,mCAAA,qBAEC;QACD7J,4DAAA,aAA0B;QACtBA,uDAAA,oBAA+B;QACnCA,0DAAA,EAAM;;;QALNA,2DAAA,IAAAoH,GAAA,CAAAoC,iBAAA,YAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDyD;AAEF;AACT;AACI;AACG;AACZ;AACE;AACM;AACJ;AACQ;AACR;AACI;AACV;AACY;AACI;AACC;AACS;AAChB;AACU;AACN;AACZ;AACqC;AACR;AACrB;AACI;AACV;AAC8B;AACM;AACA;AACvB;AACS;AAClB;AACJ;AACgB;AACb;AACC;AACF;;;AACxC,SAAU+B,WAAWA,CAAA;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC;AAmDM,MAAOC,SAAS;EAAA,QAAApF,CAAA;qBAAToF,SAAS;EAAA;EAAA,QAAA9E,EAAA;UAAT8E,SAAS;IAAAC,SAAA,GAFRtC,wDAAY;EAAA;EAAA,QAAAL,EAAA;cA9BtBe,qEAAa,EACbhB,iEAAgB,EAChBoC,uDAAW,EACXlB,uDAAW,EACXD,qDAAU,EAAEsB,yDAAY,EACxBpB,6DAAc,EACdC,yDAAY,EACZC,yDAAY,EACZC,6DAAc,EACdC,mDAAS,EAAEe,2DAAa,EACxBd,+DAAe,EACfK,uEAAmB,EACnBD,6DAAc,EACdE,qDAAU,EACVJ,wDAAW,EACXM,6DAAc,EACdD,0FAAuB,EACvBE,iEAAgB,EAChBC,uDAAW,EACXC,2DAAa,EACbV,mEAAgB,EAAEE,gEAAmB,EACrCU,0DAAS,CAACnC,OAAO,CAAC;MAChB2C,MAAM,EAAE;QACNL,WAAW,EAAEA,WAAW;QACxBM,cAAc,EAAE,CAAC,wBAAwB,CAAC,CAAG;;KAEhD,CAAC;EAAA;;;uHAMOH,SAAS;IAAAI,YAAA,GA/ClBzC,wDAAY,EACZxB,4DAAY,EACZC,+DAAa,EACbC,+DAAa,EACbpE,kEAAc,EACdqE,+DAAa,EACbC,gFAAkB,EAClBC,mFAAmB,EACnBE,yFAAqB,EACrBD,0FAAqB,EACrBE,mEAAc,EACdC,4EAAiB,EACjBE,sEAAe;IAAAW,OAAA,GAGfY,qEAAa,EACbhB,iEAAgB,EAChBoC,uDAAW,EACXlB,uDAAW,EACXD,qDAAU,EAAEsB,yDAAY,EACxBpB,6DAAc,EACdC,yDAAY,EACZC,yDAAY,EACZC,6DAAc,EACdC,mDAAS,EAAEe,2DAAa,EACxBd,+DAAe,EACfK,uEAAmB,EACnBD,6DAAc,EACdE,qDAAU,EACVJ,wDAAW,EACXM,6DAAc,EACdD,0FAAuB,EACvBE,iEAAgB,EAChBC,uDAAW,EACXC,2DAAa,EACbV,mEAAgB,EAAEE,gEAAmB,EAAAlE,0DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;IE1E7BxG,4DAAA,aAAqB;IACjBA,uDAAA,aAAiF;IACjFA,4DAAA,aAAwB;IAChBA,oDAAA,GAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,QAAG;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAI;;;;IAHbA,uDAAA,EAAyB;IAAzBA,wDAAA,QAAA+L,OAAA,CAAAC,YAAA,EAAAhM,2DAAA,CAAyB,QAAA+L,OAAA,CAAAG,GAAA;IAErClM,uDAAA,GAAgB;IAAhBA,+DAAA,CAAA+L,OAAA,CAAAK,KAAA,CAAgB;IACjBpM,uDAAA,GAAsB;IAAtBA,+DAAA,CAAA+L,OAAA,CAAAM,WAAA,CAAsB;;;;;IAMjCrM,4DAAA,aAAuD;IACnDA,uDAAA,aAAuD;IAC3DA,0DAAA,EAAM;;;;IADGA,uDAAA,EAA8B;IAA9BA,wDAAA,QAAAsM,OAAA,CAAAC,iBAAA,EAAAvM,2DAAA,CAA8B,QAAAsM,OAAA,CAAAJ,GAAA;;;ADV7C,MAAOrE,YAAY;EALzBjE,YAAA;IAUE,KAAA4I,MAAM,GAAU,CAAC;MACfC,eAAe,EACb,oBAAoB;MACtBF,iBAAiB,EACf,oBAAoB;MACtBL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,oBAAoB;MACrCF,iBAAiB,EAAE,oBAAoB;MACvCL,GAAG,EAAE,yBAAyB;MAC9BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,EACD;MACEK,eAAe,EAAE,qBAAqB;MACtCF,iBAAiB,EAAE,qBAAqB;MACxCL,GAAG,EAAE,0BAA0B;MAC/BE,KAAK,EAAE;KACR,CACA;;EAlHDM,QAAQA,CAAA,GAER;EAAC,QAAApG,CAAA;qBAHUuB,YAAY;EAAA;EAAA,QAAAjB,EAAA;UAAZiB,YAAY;IAAAhB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA0F,sBAAAxF,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzBnH,4DAAA,aAAqB;QACKA,oDAAA,kBAAW;QAAAA,0DAAA,EAAK;QAEtCA,4DAAA,oBACuF;QACnFA,wDAAA,IAAA4M,mCAAA,yBAQc,IAAAC,mCAAA;QAOlB7M,0DAAA,EAAa;;;QAjBDA,uDAAA,GAAgB;QAAhBA,wDAAA,UAAAoH,GAAA,CAAAoF,MAAA,CAAgB;;;;;;;ADwH/B;;;;;;;;;;;;;;;;AE3HsC;AAGqB;AAErD,MAAMjE,SAAS,GAAkBA,CAACwE,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGH,qDAAM,CAACpD,qEAAW,CAAC;EAEvC,IAAIuD,WAAW,CAACxD,QAAQ,EAAE,EAAE;IAC1B,OAAO,IAAI;GACZ,MAAM;IACL,OAAO,KAAK;;AAEhB,CAAC;;;;;;;;;;;;;;;;;ACb8D;;;;AAQzD,MAAOC,WAAW;EAItB9F,YAAoBuJ,IAAgB,EAAUJ,KAAa;IAAvC,KAAAI,IAAI,GAAJA,IAAI;IAAsB,KAAAJ,KAAK,GAALA,KAAK;IAFnD,KAAAK,OAAO,GAAG,IAAIF,6DAAW,CAAC,CAAE,8BAA+B,CAAC;IAC5D,KAAAG,OAAO,GAAG;MAAED,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEE,eAAe,EAAE;IAAI,CAAE;IAExD,IAAI,CAAC/D,MAAM,GAAGwD,KAAK;EACrB;EACAQ,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,4BAA4B,EAAE;MAAEL,eAAe,EAAE;IAAI,CAAE,CAAC;EAC1H;EACA7D,QAAQA,CAAA;IACN,OAAO,CAAC+B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAEvG,MAAM,GAAG,CAAC;EACzD;EAAC,QAAAoB,CAAA;qBAZUoD,WAAW,EAAA1J,sDAAA,CAAAwG,4DAAA,GAAAxG,sDAAA,CAAA0G,mDAAA;EAAA;EAAA,QAAAE,EAAA;WAAX8C,WAAW;IAAAoE,OAAA,EAAXpE,WAAW,CAAAqE,IAAA;IAAAC,UAAA,EAFV;EAAM;;;;;;;;;;;;;;;;;;;ACEd,MAAOC,YAAY;EAEvBrK,YAAoBuJ,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAe,eAAe,GAAW,EAAE;EADY;EAExCC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACjB,IAAI,CAACiB,IAAI,CAAO,WAAWX,MAAM,CAACC,QAAQ,CAACC,QAAQ,yBAAyB,EAAES,IAAI,EAAE;MAAEC,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACjJ;EACAgB,SAASA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACpB,IAAI,CAACiB,IAAI,CAAS,WAAWX,MAAM,CAACC,QAAQ,CAACC,QAAQ,2BAA2B,EAAEY,MAAM,EAAE;MAAEF,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACvJ;EAEAkB,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACrB,IAAI,CAACK,GAAG,CAAM,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,4BAA4B,EAAE;MAAEU,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EAC5I;EACAmB,kBAAkBA,CAACC,QAAgB;IACjC,OAAO,IAAI,CAACvB,IAAI,CAACK,GAAG,CAAU,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,sCAAsCe,QAAQ,EAAE,EAAE;MAAEL,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACpK;EAEAqB,aAAaA,CAACxK,EAAU;IACtB,OAAO,IAAI,CAACgJ,IAAI,CAACK,GAAG,CAAM,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,iCAAiCxJ,EAAE,EAAE,EAAE;MAAEkK,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACrJ;EACAsB,iBAAiBA,CAACC,OAAY;IAC5B,OAAO,IAAI,CAAC1B,IAAI,CAACiB,IAAI,CAAM,WAAWX,MAAM,CAACC,QAAQ,CAACC,QAAQ,mCAAmC,EAAEkB,OAAO,EAAE;MAAER,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EAC7J;EACAwB,UAAUA,CAACC,OAAY;IACrB,OAAO,IAAI,CAAC5B,IAAI,CAACiB,IAAI,CAAM,WAAWX,MAAM,CAACC,QAAQ,CAACC,QAAQ,4BAA4B,EAAEoB,OAAO,EAAE;MAAEV,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACtJ;EACA0B,kBAAkBA,CAAC7K,EAAU;IAC3B,OAAO,IAAI,CAACgJ,IAAI,CAACK,GAAG,CAAM,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,sCAAsCxJ,EAAE,EAAE,EAAE;MAAEkK,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EAC1J;EAAC,QAAAhH,CAAA;qBA7BU2H,YAAY,EAAAjO,sDAAA,CAAAwG,4DAAA;EAAA;EAAA,QAAAI,EAAA;WAAZqH,YAAY;IAAAH,OAAA,EAAZG,YAAY,CAAAF,IAAA;IAAAC,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;ACNyD;;;AAQvE,MAAOrH,WAAW;EAGpB/C,YAAoBuJ,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,IAAIF,6DAAW,CAAC,CAAE,8BAA+B,CAAC;IAC5D,KAAAG,OAAO,GAAG;MAAED,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEE,eAAe,EAAE;IAAI,CAAE;EAClB;EAExC2B,eAAeA,CAAA;IACX,OAAO,IAAI,CAAC9B,IAAI,CAACK,GAAG,CAAU,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,QAAQ,GAAG,0BAA0B,EAAE;MAAEU,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EAChK;EAEA4B,WAAWA,CAACC,MAAc;IACtB,OAAO,IAAI,CAAChC,IAAI,CAACiC,GAAG,CAAC,WAAW3B,MAAM,CAACC,QAAQ,CAACC,QAAQ,4BAA4B,EAAEwB,MAAM,EAAE,IAAI,CAAC9B,OAAO,CAAC;EAC/G;EACAgC,WAAWA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACnC,IAAI,CAACK,GAAG,CAAS,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,8BAA8B2B,MAAM,EAAE,EAAE,IAAI,CAACjC,OAAO,CAAC;EACzH;EACAkC,OAAOA,CAAA;IACH,OAAO,IAAI,CAACpC,IAAI,CAACK,GAAG,CAAS,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,QAAQ,GAAG,4BAA4B,EAAE;MAAEU,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAC3J;EACL;EACAkC,QAAQA,CAACpL,IAAY;IACjB,OAAO,IAAI,CAAC+I,IAAI,CAACiB,IAAI,CAAS,UAAU,GAAGX,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,QAAQ,GAAG,mBAAmB,EAAEvJ,IAAI,EAAE;MAAEiK,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CACzJ;EACL;EACAmC,MAAMA,CAACC,GAAQ;IACX,OAAO,IAAI,CAACvC,IAAI,CAACiB,IAAI,CAAM,UAAU,GAAGX,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,QAAQ,GAAG,gBAAgB,EAAE+B,GAAG,EAAE;MAAErB,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAClJ;EACL;EACAqC,SAASA,CAACC,IAAU,EAAEC,OAAe,EAAEC,SAAiB;IACpD,MAAMC,MAAM,GAAG,WAAWtC,MAAM,CAACC,QAAQ,CAACC,QAAQ,yBAAyB;IAE3E,MAAMqC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;IAC7BI,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEL,OAAO,CAAC;IACnCG,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEJ,SAAS,CAAC;IAEvC,OAAO,IAAI,CAAC3C,IAAI,CAACiB,IAAI,CAAS2B,MAAM,EAAEC,QAAQ,EAAE;MAC5C3B,OAAO,EAAE,UAAU;MACnB8B,YAAY,EAAE,MAAgB;MAC9B7C,eAAe,EAAE;KACpB,CAAC;EACN;EACAzH,UAAUA,CAACyJ,MAAc;IACrB,OAAO,IAAI,CAACnC,IAAI,CAACiD,MAAM,CAAC,WAAW3C,MAAM,CAACC,QAAQ,CAACC,QAAQ,6BAA6B2B,MAAM,EAAE,EAAE,IAAI,CAACjC,OAAO,CAAC;EACnH;EAEAtH,UAAUA,CAAC3B,IAAY;IACnB,OAAO,IAAI,CAAC+I,IAAI,CAACiC,GAAG,CAAC,WAAW3B,MAAM,CAACC,QAAQ,CAACC,QAAQ,2BAA2B,EAAEvJ,IAAI,EAAE,IAAI,CAACiJ,OAAO,CAAC;EAC5G;EAEArH,OAAOA,CAACsJ,MAAc;IAClB,OAAO,IAAI,CAACnC,IAAI,CAACiC,GAAG,CAAC,WAAW3B,MAAM,CAACC,QAAQ,CAACC,QAAQ,0BAA0B2B,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAACjC,OAAO,CAAC;EACnH;EAEAnH,SAASA,CAACoJ,MAAc;IACpB,OAAO,IAAI,CAACnC,IAAI,CAACiC,GAAG,CAAC,WAAW3B,MAAM,CAACC,QAAQ,CAACC,QAAQ,4BAA4B2B,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAACjC,OAAO,CAAC;EACrH;EAEAgD,UAAUA,CAACf,MAAc,EAAEgB,OAAe;IACtC,OAAO,IAAI,CAACnD,IAAI,CAACiC,GAAG,CAAC,WAAW3B,MAAM,CAACC,QAAQ,CAACC,QAAQ,6BAA6B2B,MAAM,IAAIgB,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,CAACjD,OAAO,CAAC;EACjI;EAAC,QAAA/G,CAAA;qBA3DQK,WAAW,EAAA3G,sDAAA,CAAAwG,4DAAA;EAAA;EAAA,QAAAI,EAAA;WAAXD,WAAW;IAAAmH,OAAA,EAAXnH,WAAW,CAAAoH,IAAA;IAAAC,UAAA,EAFR;EAAM;;;;;;;;;;;;;;;ACNhB,MAAOuC,IAAI;EACN,OAAOC,QAAQA,CAACC,CAAS;IAC5BC,UAAU,CAAC;MACP1L,OAAO,CAACC,GAAG,CAACwL,CAAC,CAAC;IAClB,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC;EAChB;;;;;;;;;;;;;;;;;;;;;;ACDkC;;;;;;;;;;AAOhC,MAAOjI,eAAe;EAW1B5E,YAAoBqJ,WAAwB,EAAU1D,MAAc;IAAhD,KAAA0D,WAAW,GAAXA,WAAW;IAAuB,KAAA1D,MAAM,GAANA,MAAM;IAV5D,KAAA6C,KAAK,GAAG,aAAa;IACrB,KAAAuE,KAAK,GAAe,CAClB;MAAEC,IAAI,EAAE,YAAY;MAAEC,UAAU,EAAE;IAAM,CAAE,EAC1C;MAAED,IAAI,EAAE,gBAAgB;MAAEC,UAAU,EAAE;IAAS,CAAE,EACjD;MAAED,IAAI,EAAE,oBAAoB;MAAEC,UAAU,EAAE;IAAM,CAAE,EAClD;MAAED,IAAI,EAAE,cAAc;MAAEC,UAAU,EAAE;IAAK,CAAE,EAC3C;MAAED,IAAI,EAAE,YAAY;MAAEC,UAAU,EAAE;IAAM,CAAE,EAC1C;MAAED,IAAI,EAAE,eAAe;MAAEC,UAAU,EAAE;IAAY,CAAE,CACpD;EAEuE;EAElEnE,QAAQA,CAAA;IAAA,IAAA/H,KAAA;IAAA,OAAAC,oKAAA;MACZ,MAAMD,KAAI,CAAC4I,WAAW,EAAE;IAAC;EAC3B;EAEMA,WAAWA,CAAA;IAAA,IAAA9H,MAAA;IAAA,OAAAb,oKAAA;MACf,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC0F,MAAI,CAACwH,WAAW,CAACM,WAAW,EAAE,CAAC;QAC1EvI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrB,IAAIA,QAAQ,IAAI,CAAC,EAAE;UACjBY,MAAI,CAACkL,KAAK,GAAG,CACX;YAAEC,IAAI,EAAE,YAAY;YAAEC,UAAU,EAAE;UAAM,CAAE,EAC1C;YAAED,IAAI,EAAE,gBAAgB;YAAEC,UAAU,EAAE;UAAS,CAAE,EACjD;YAAED,IAAI,EAAE,oBAAoB;YAAEC,UAAU,EAAE;UAAM,CAAE,EAClD;YAAED,IAAI,EAAE,cAAc;YAAEC,UAAU,EAAE;UAAK,CAAE,EAC3C;YAAED,IAAI,EAAE,YAAY;YAAEC,UAAU,EAAE;UAAM,CAAE,EAC1C;YAAED,IAAI,EAAE,eAAe;YAAEC,UAAU,EAAE;UAAY,CAAE,EACnD;YAAED,IAAI,EAAE,YAAY;YAAEC,UAAU,EAAE;UAAO,CAAE,CAC5C;;OAEJ,CACD,OAAOrL,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EAEH;EAAC,QAAAc,CAAA;qBArCUkC,eAAe,EAAAxI,+DAAA,CAAAwG,qEAAA,GAAAxG,+DAAA,CAAA0G,mDAAA;EAAA;EAAA,QAAAE,EAAA;UAAf4B,eAAe;IAAA3B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA6J,yBAAA3J,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX5BnH,4DAAA,aAA8B;QAC1BA,uDAAA,gBAAiH;QACrHA,0DAAA,EAAM;;;QADsBA,uDAAA,EAA+E;QAA/EA,wDAAA,CAAAA,6DAAA,IAAAiR,GAAA,EAA+E;QAA/FjR,wDAAA,UAAAoH,GAAA,CAAAuJ,KAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;ACCgB;AAGH;AACO;;;AAKzC,MAAOU,WAAW;EAIpBzN,YAAoBuJ,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAmE,cAAc,GAAG,IAAIJ,yCAAO,EAAW;IAG3C,IAAI,CAACK,6BAA6B,EAAE;EACxC;EAEAA,6BAA6BA,CAAA;IACzB,MAAMC,KAAK,GAAGhG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI+F,KAAK,IAAI,IAAI,EAAE;MACf,IAAI,CAACC,WAAW,GAAG,IAAIL,kDAAM,CAAC;QAC1BM,gBAAgB,EAAEA,CAAA,KAAM,IAAIP,0CAAM,CAAC,WAAW1D,MAAM,CAACC,QAAQ,CAACC,QAAQ,yBAAyB6D,KAAK,EAAE,CAAC;QACvGG,cAAc,EAAE,IAAI;QACpBC,SAAS,EAAGC,OAAO,IAAI;UACnB7M,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE4M,OAAO,CAAC;UAClC,IAAI,CAACJ,WAAW,EAAEK,SAAS,CAAC,iBAAiB,EAAGC,aAAgC,IAAI;YAChF,MAAMC,OAAO,GAAYC,IAAI,CAACC,KAAK,CAACH,aAAa,CAAChN,IAAI,CAAC;YACvD,IAAIiN,OAAO,EAAE;cACT,IAAI,CAACV,cAAc,CAACa,IAAI,CAACH,OAAO,CAAC;;UAEzC,CAAC,CAAC;QACN,CAAC;QACDI,YAAY,EAAG5M,KAAK,IAAI;UACpBR,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACxC;OACH,CAAC;MAEF,IAAI,CAACiM,WAAW,CAACY,QAAQ,EAAE;;EAEnC;EAEAC,oBAAoBA,CAAA;IAChB,OAAO,IAAI,CAACnF,IAAI,CAACK,GAAG,CAAU,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,qCAAqC,EAAE;MAAEL,eAAe,EAAE;IAAI,CAAE,CAAC;EACtI;EAEAiF,UAAUA,CAACC,OAAkC;IACzC,OAAO,IAAI,CAACrF,IAAI,CAACiB,IAAI,CAAS,WAAWX,MAAM,CAACC,QAAQ,CAACC,QAAQ,2BAA2B,EAAE6E,OAAO,EAAE;MAAElF,eAAe,EAAE;IAAI,CAAE,CAAC;EACrI;EACAmF,uBAAuBA,CAAA;IACnB,OAAO,IAAI,CAACnB,cAAc,CAACoB,YAAY,EAAE;EAC7C;EAEA;EACAC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACxF,IAAI,CAACK,GAAG,CAAY,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,yBAAyB,EAAE;MAAEL,eAAe,EAAE;IAAI,CAAE,CAAC;EAC5H;EAEA;EACAsF,WAAWA,CAACZ,OAAgB;IACxB,IAAI,IAAI,CAACP,WAAW,IAAI,IAAI,CAACA,WAAW,CAACoB,SAAS,EAAE;MAChD,IAAI,CAACpB,WAAW,CAACqB,OAAO,CAAC;QACrBC,WAAW,EAAE,gBAAgB;QAC7BhO,IAAI,EAAEkN,IAAI,CAACe,SAAS,CAAChB,OAAO;OAC/B,CAAC;;EAEV;EAEAiB,cAAcA,CAAA;IACV,OAAO,IAAI,CAAC9F,IAAI,CAACK,GAAG,CAAS,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,kCAAkC,EAAE;MAAEL,eAAe,EAAE;IAAI,CAAE,CAAC;EAClI;EAAC,QAAAhH,CAAA;qBA5DQ+K,WAAW,EAAArR,sDAAA,CAAAwG,4DAAA;EAAA;EAAA,QAAAI,EAAA;WAAXyK,WAAW;IAAAvD,OAAA,EAAXuD,WAAW,CAAAtD,IAAA;IAAAC,UAAA,EAFR;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH2D;AACjD;;;;;;;;;;;;;;;ICEZhO,4DAAA,cAAuE;IAC3DA,oDAAA,GAA6B;IAAAA,0DAAA,EAAS;IAAAA,oDAAA,SAAE;IAAAA,uDAAA,eACQ;IAC5DA,0DAAA,EAAM;;;;;IAFMA,uDAAA,GAA6B;IAA7BA,+DAAA,CAAAuT,UAAA,CAAAC,MAAA,CAAAnP,QAAA,CAA6B;IACjCrE,uDAAA,GAA4C;IAA5CA,wDAAA,cAAAyT,MAAA,CAAAC,aAAA,CAAAH,UAAA,CAAAI,OAAA,GAAA3T,4DAAA,CAA4C;;;;;IAEpDA,4DAAA,cAAsE;IAC1DA,oDAAA,GAA6B;IAAAA,0DAAA,EAAS;IAAAA,oDAAA,SAC9C;IAAAA,uDAAA,cAAsD;IAC1DA,0DAAA,EAAM;;;;IAFMA,uDAAA,GAA6B;IAA7BA,+DAAA,CAAAuT,UAAA,CAAAC,MAAA,CAAAnP,QAAA,CAA6B;IAChCrE,uDAAA,GAA0B;IAA1BA,wDAAA,QAAAuT,UAAA,kBAAAA,UAAA,CAAAI,OAAA,EAAA3T,2DAAA,CAA0B;;;;;;IAVvCA,4DAAA,cAA2D;IACvBA,oDAAA,GAAiD;;IAAAA,0DAAA,EAAO;IACxFA,4DAAA,cAC8E;IADvCA,wDAAA,mBAAA6T,kDAAA;MAAA,MAAAC,WAAA,GAAA9T,2DAAA,CAAA+T,IAAA;MAAA,MAAAR,UAAA,GAAAO,WAAA,CAAAE,SAAA;MAAA,MAAAlS,OAAA,GAAA9B,2DAAA;MAAA,OAASA,yDAAA,CAAA8B,OAAA,CAAAmS,eAAA,CAAAV,UAAA,CAAAC,MAAA,CAA+B;IAAA,EAAC;IAAhFxT,0DAAA,EAC8E;IAC9EA,wDAAA,IAAAkU,kCAAA,kBAGM,IAAAC,kCAAA;IAKVnU,0DAAA,EAAM;;;;;IAX8BA,uDAAA,GAAiD;IAAjDA,+DAAA,CAAAA,yDAAA,OAAAuT,UAAA,CAAAc,SAAA,sBAAiD;IAEvDrU,uDAAA,GAAmD;IAAnDA,oEAAA,YAAAuT,UAAA,CAAAC,MAAA,CAAAnP,QAAA,qBAAmD;IADxErE,wDAAA,QAAAuT,UAAA,CAAAC,MAAA,CAAAjP,UAAA,EAAAvE,2DAAA,CAAiC;IAERA,uDAAA,EAAuC;IAAvCA,wDAAA,UAAAqC,MAAA,CAAAkS,eAAA,CAAAhB,UAAA,CAAAI,OAAA,EAAuC;IAIvC3T,uDAAA,EAAsC;IAAtCA,wDAAA,SAAAqC,MAAA,CAAAkS,eAAA,CAAAhB,UAAA,CAAAI,OAAA,EAAsC;;;;;;IAQpF3T,4DAAA,cAA+E;IAAhDA,wDAAA,mBAAAwU,kDAAA;MAAAxU,2DAAA,CAAAyC,IAAA;MAAA,MAAAC,OAAA,GAAA1C,2DAAA;MAAA,OAASA,yDAAA,CAAA0C,OAAA,CAAA+R,UAAA,EAAY;IAAA,EAAC;IACjDzU,uDAAA,YAAqC;IACzCA,0DAAA,EAAM;;;;;;IAmBUA,4DAAA,cAA0B;IACIA,oDAAA,iBAAU;IAAAA,0DAAA,EAAO;IAC3CA,4DAAA,iBAAgE;IAAxDA,wDAAA,mBAAA0U,oEAAA;MAAA1U,2DAAA,CAAA2U,IAAA;MAAA,MAAA1R,OAAA,GAAAjD,2DAAA;MAAA,OAASA,yDAAA,CAAAiD,OAAA,CAAA2R,aAAA,EAAe;IAAA,EAAC;IAA+B5U,uDAAA,YAChC;IAAAA,0DAAA,EAAS;IACzCA,4DAAA,iBAA6D;IAArDA,wDAAA,mBAAA6U,oEAAA;MAAA7U,2DAAA,CAAA2U,IAAA;MAAA,MAAAtR,OAAA,GAAArD,2DAAA;MAAA,OAASA,yDAAA,CAAAqD,OAAA,CAAAyR,UAAA,EAAY;IAAA,EAAC;IAA+B9U,uDAAA,YAC7B;IAAAA,0DAAA,EAAS;;;;;;IATzDA,4DAAA,UAAqC;IACvBA,wDAAA,2BAAA+U,gEAAA3U,MAAA;MAAAJ,2DAAA,CAAAgV,IAAA;MAAA,MAAAzR,OAAA,GAAAvD,2DAAA;MAAA,OAAAA,yDAAA,CAAAuD,OAAA,CAAA0R,YAAA,GAAA7U,MAAA;IAAA,EAA0B;IAEhCJ,wDAAA,IAAAkV,2CAAA,0BAQc;IACdlV,4DAAA,cAAkB;IAEWA,oDAAA,gBAAS;IAAAA,0DAAA,EAAQ;IACtCA,4DAAA,gBAAoD;IAAtBA,wDAAA,2BAAAmV,6DAAA/U,MAAA;MAAAJ,2DAAA,CAAAgV,IAAA;MAAA,MAAAI,OAAA,GAAApV,2DAAA;MAAA,OAAAA,yDAAA,CAAAoV,OAAA,CAAAvF,OAAA,GAAAzP,MAAA;IAAA,EAAqB;IAAnDJ,0DAAA,EAAoD;IAExDA,4DAAA,cAAqB;IACMA,oDAAA,mBAAW;IAAAA,0DAAA,EAAQ;IAC1CA,4DAAA,iBAAsD;IAAxBA,wDAAA,2BAAAqV,8DAAAjV,MAAA;MAAAJ,2DAAA,CAAAgV,IAAA;MAAA,MAAAM,OAAA,GAAAtV,2DAAA;MAAA,OAAAA,yDAAA,CAAAsV,OAAA,CAAAxF,SAAA,GAAA1P,MAAA;IAAA,EAAuB;IAArDJ,0DAAA,EAAsD;IAE1DA,4DAAA,eAAqB;IACMA,oDAAA,oBAAY;IAAAA,0DAAA,EAAQ;IAC3CA,4DAAA,qBAAgE;IAAlCA,wDAAA,oBAAAuV,uDAAAnV,MAAA;MAAAJ,2DAAA,CAAAgV,IAAA;MAAA,MAAAQ,OAAA,GAAAxV,2DAAA;MAAA,OAAUA,yDAAA,CAAAwV,OAAA,CAAAC,cAAA,CAAArV,MAAA,CAAsB;IAAA,EAAC;IAA/DJ,0DAAA,EAAgE;IAEpEA,4DAAA,eAAqB;IAC4BA,wDAAA,mBAAA0V,uDAAA;MAAA1V,2DAAA,CAAAgV,IAAA;MAAA,MAAAW,OAAA,GAAA3V,2DAAA;MAAA,OAASA,yDAAA,CAAA2V,OAAA,CAAAC,eAAA,EAAiB;IAAA,EAAC;IAAC5V,0DAAA,EAAS;;;;IA1BxEA,wDAAA,eAAA6V,SAAA,CAAU;IACtB7V,uDAAA,EAA0B;IAA1BA,wDAAA,YAAAO,MAAA,CAAA0U,YAAA,CAA0B;IAcMjV,uDAAA,GAAqB;IAArBA,wDAAA,YAAAO,MAAA,CAAAsP,OAAA,CAAqB;IAIrB7P,uDAAA,GAAuB;IAAvBA,wDAAA,YAAAO,MAAA,CAAAuP,SAAA,CAAuB;;;;;IAsBjE9P,oDAAA,GACJ;;;;IADIA,gEAAA,MAAA+V,MAAA,CAAAC,YAAA,kBAAAD,MAAA,CAAAC,YAAA,CAAA3R,QAAA,MACJ;;;ADtDF,MAAOyD,aAAa;EASxBmM,eAAeA,CAAC7P,IAAY;IAC1B,IAAI,CAAC4R,YAAY,GAAG5R,IAAI;IACxB,IAAI,CAAC6R,qBAAqB,GAAG,IAAI;EACnC;EACAC,gBAAgBA,CAAA;IACd,IAAI,CAACF,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,qBAAqB,GAAG,KAAK;EACpC;EASArS,YAAoBuS,WAAwB,EAAU/R,IAAiB,EAAUgS,aAA4B,EAAUC,GAAsB,CAAC;EAAA;IAA1H,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAA/R,IAAI,GAAJA,IAAI;IAAuB,KAAAgS,aAAa,GAAbA,aAAa;IAAyB,KAAAC,GAAG,GAAHA,GAAG;IAxB1H,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,iBAAiB,GAAW,EAAE;IAE9B,KAAAP,YAAY,GAAkB,IAAI;IAClC,KAAAC,qBAAqB,GAAY,KAAK;IAEtC,KAAAO,uBAAuB,GAAY,KAAK;IAUxC,KAAAC,MAAM,GAAW;MACftS,EAAE,EAAE,EAAE;MACNE,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdmS,SAAS,EAAE;KACZ;IAiBD,KAAAzB,YAAY,GAAY,KAAK,CAAC,CAAC;IAC/B,KAAA0B,iBAAiB,GAAY,KAAK,CAAC,CAAC;IAyBpC,KAAA9G,OAAO,GAAW,EAAE;IACpB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAA8G,YAAY,GAAgB,IAAI;IAChC,KAAAC,kBAAkB,GAAkB,IAAI;IACxC,KAAAC,gBAAgB,GAAG,KAAK;IA3CtB,MAAMC,QAAQ,GAAGtJ,MAAM,CAACC,QAAQ,CAACqJ,QAAQ;IACzC,MAAMC,IAAI,GAAGvJ,MAAM,CAACC,QAAQ,CAACC,QAAQ;IACrC,MAAMsJ,IAAI,GAAG,MAAM,CAAC,CAAC;IACrB,IAAI,CAACC,cAAc,GAAG,GAAGH,QAAQ,KAAKC,IAAI,IAAIC,IAAI,EAAE;IACpD,IAAI,CAACb,aAAa,CAACe,MAAM,GAAG,IAAI,CAAC,CAAC;IAClC;IACA,IAAI,CAAChB,WAAW,CAAC1D,uBAAuB,EAAE,CAACX,SAAS,CAAEE,OAAgB,IAAI;MACxE;MACA,IAAI,CAAC,IAAI,CAACsE,QAAQ,CAACc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChD,SAAS,KAAKrC,OAAO,CAACqC,SAAS,IAAIgD,CAAC,CAAC1D,OAAO,KAAK3B,OAAO,CAAC2B,OAAO,CAAC,EAAE;QAChG,IAAI,CAAC2C,QAAQ,CAAClR,IAAI,CAAC4M,OAAO,CAAC;;IAE/B,CAAC,CAAC;EACJ;EAIAyC,UAAUA,CAAA;IACR,IAAI,CAACQ,YAAY,GAAG,IAAI;IACxB,IAAI,CAAC0B,iBAAiB,GAAG,KAAK;EAChC;EAGA/B,aAAaA,CAAA;IACX,IAAI,CAACK,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC0B,iBAAiB,GAAG,IAAI;EAC/B;EAEA7B,UAAUA,CAAA;IACR,IAAI,CAACG,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC0B,iBAAiB,GAAG,KAAK;EAChC;EACMjK,QAAQA,CAAA;IAAA,IAAA/H,KAAA;IAAA,OAAAC,oKAAA;MACZ,MAAMD,KAAI,CAAC2S,WAAW,EAAE,CAAC,CAAE;MAC3BhE,oDAAI,CAACiE,YAAY,EAAE;IAAC;EACtB;EAEAC,kBAAkBA,CAAA;IAChB,IAAI,CAACC,cAAc,EAAE;EACvB;EAMA/D,aAAaA,CAAC1B,OAAe;IAC3B,MAAM0F,cAAc,GAAG,0BAA0B;IACjD,MAAMC,SAAS,GAAG,gBAAgB;IAClC,MAAMC,YAAY,GAAG,kBAAkB;IACvC,MAAMC,cAAc,GAAG,KAAK;IAC5B,MAAMC,gBAAgB,GAAG,mBAAmB;IAC5C,MAAMC,kBAAkB,GAAG,iBAAiB;IAE5C;IACA,IAAIC,gBAAgB,GAAGhG,OAAO,CAC3BiG,OAAO,CAACH,gBAAgB,EAAE,aAAa,CAAC,CACxCG,OAAO,CAACF,kBAAkB,EAAE,aAAa,CAAC;IAE7C;IACA,MAAMG,qBAAqB,GAAG,0BAA0B;IACxD,MAAMC,uBAAuB,GAAG,wBAAwB;IACxDH,gBAAgB,GAAGA,gBAAgB,CAChCC,OAAO,CAACC,qBAAqB,EAAE,aAAa,CAAC,CAC7CD,OAAO,CAACE,uBAAuB,EAAE,aAAa,CAAC;IAElD;IACA,OAAOH,gBAAgB,CACpBC,OAAO,CAACP,cAAc,EAAE,CAACU,MAAM,EAAEC,QAAQ,EAAEC,IAAI,KAAI;MAClD,MAAMC,eAAe,GAAGjF,oDAAI,CAACkF,SAAS,CAACH,QAAQ,EAAEC,IAAI,CAAC,CAAC7T,KAAK;MAC5D,OAAO,0BAA0B4T,QAAQ,KAAKE,eAAe,eAAe;IAC9E,CAAC,CAAC,CACDN,OAAO,CAACN,SAAS,EAAE,qBAAqB,CAAC,CACzCM,OAAO,CAACL,YAAY,EAAE,aAAa,CAAC,CACpCK,OAAO,CAACJ,cAAc,EAAE,OAAO,CAAC;EACrC;EACApC,cAAcA,CAACgD,KAAU;IACvB,IAAI,CAAC7B,YAAY,GAAG6B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EACAC,gBAAgBA,CAAC/I,OAAe,EAAEC,SAAiB;IACjD,MAAM+I,QAAQ,GAAG,GAAGhJ,OAAO,IAAIC,SAAS,MAAM;IAC9C,MAAMgJ,eAAe,GAAGC,kBAAkB,CAACF,QAAQ,CAAC;IACpD,MAAM3B,cAAc,GAAG,GAAGzJ,MAAM,CAACC,QAAQ,CAACqJ,QAAQ,KAAKtJ,MAAM,CAACC,QAAQ,CAACC,QAAQ,OAAO;IACtF,OAAO,GAAGuJ,cAAc,YAAY4B,eAAe,EAAE;EACvD;EACAlD,eAAeA,CAAA;IAAA,IAAAnQ,MAAA;IACb,IAAI,IAAI,CAACoK,OAAO,IAAI,IAAI,CAACA,OAAO,CAACmJ,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAAClJ,SAAS,IAAI,IAAI,CAACA,SAAS,CAACkJ,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAACpC,YAAY,EAAE;MACrH,IAAI,CAACxS,IAAI,CAACuL,SAAS,CAAC,IAAI,CAACiH,YAAY,EAAE,IAAI,CAAC/G,OAAO,EAAE,IAAI,CAACC,SAAS,CAAC,CAACgC,SAAS;QAAA,IAAAmH,IAAA,GAAArU,oKAAA,CAAC,WAAMC,QAAQ,EAAG;UAC9FG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAAC;UAE3C,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;YAC3BE,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;YACrCQ,MAAI,CAACwP,YAAY,GAAG,KAAK,CAAC,CAAC;YAE3BxP,MAAI,CAAC4Q,GAAG,CAAC6C,aAAa,EAAE,CAAC,CAAC;YAE1B;YACA,MAAMC,WAAW,GAAG1T,MAAI,CAACmT,gBAAgB,CAACnT,MAAI,CAACoK,OAAO,EAAEpK,MAAI,CAACqK,SAAS,CAAC;YACvE;YACArK,MAAI,CAAC8Q,iBAAiB,GAAG4C,WAAW;YACpC1T,MAAI,CAACmN,WAAW,EAAE;WACnB,MAAM;YACL5N,OAAO,CAACQ,KAAK,CAAC,4CAA4C,EAAEX,QAAQ,CAACC,MAAM,CAAC;;QAEhF,CAAC;QAAA,iBAAAsU,EAAA;UAAA,OAAAH,IAAA,CAAAI,KAAA,OAAAC,SAAA;QAAA;MAAA,KAAE9T,KAAK,IAAG;QACTR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;KACH,MAAM;MACLR,OAAO,CAACuU,IAAI,CAAC,sCAAsC,CAAC;;EAExD;EACAhF,eAAeA,CAACiF,GAAW;IACzB,MAAMtC,cAAc,GAAG,GAAGzJ,MAAM,CAACC,QAAQ,CAACqJ,QAAQ,KAAKtJ,MAAM,CAACC,QAAQ,CAACC,QAAQ,OAAO;IACtF,MAAM8L,YAAY,GAAGD,GAAG,CAACE,UAAU,CAAC,GAAGxC,cAAc,WAAW,CAAC;IACjE,MAAMyC,eAAe,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;IAClF,MAAMC,YAAY,GAAGJ,GAAG,CAACK,KAAK,CAACL,GAAG,CAACM,WAAW,CAAC,GAAG,CAAC,CAAC;IACpD,MAAMC,gBAAgB,GAAGJ,eAAe,CAACK,QAAQ,CAACJ,YAAY,CAAC;IAC/D,OAAOH,YAAY,IAAIM,gBAAgB;EACzC;EACQtC,cAAcA,CAAA;IACpB,IAAI;MACF,IAAI,CAACwC,iBAAiB,CAACC,aAAa,CAACC,SAAS,GAAG,IAAI,CAACF,iBAAiB,CAACC,aAAa,CAACE,YAAY;KACnG,CAAC,OAAOC,GAAG,EAAE;EAChB;EAEQ/C,WAAWA,CAAA;IACjB,OAAO,IAAIgD,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAI,CAACrE,WAAW,CAAClD,cAAc,EAAE,CAACnB,SAAS,CAAE2I,IAAY,IAAI;QAC3D,IAAIA,IAAI,KAAK,IAAI,EAAE;UACjB,IAAI,CAAChE,MAAM,GAAG;YACZtS,EAAE,EAAEsW,IAAI,CAACtW,EAAE;YACXE,QAAQ,EAAEoW,IAAI,CAACpW,QAAQ;YACvBC,SAAS,EAAEmW,IAAI,CAACnW,SAAS;YACzBC,UAAU,EAAEkW,IAAI,CAAClW,UAAU;YAC3BmS,SAAS,EAAE+D,IAAI,CAAC/D;WACjB;UACD1R,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UACpBD,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGgN,IAAI,CAACe,SAAS,CAACyH,IAAI,CAAC,CAAC;UAC5CF,OAAO,CAAC,IAAI,CAAC9D,MAAM,CAAC;SACrB,MAAM;UACL+D,MAAM,CAAC,OAAO,CAAC;;MAEnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACM5H,WAAWA,CAAA;IAAA,IAAAjN,MAAA;IAAA,OAAAf,oKAAA;MACf,IAAIe,MAAI,CAAC4Q,iBAAiB,CAACyC,IAAI,EAAE,EAAE;QACjC,IAAIrT,MAAI,CAAC8Q,MAAM,IAAI9Q,MAAI,CAAC8Q,MAAM,CAACpS,QAAQ,EAAE;UACvC,IAAIsB,MAAI,CAAC4Q,iBAAiB,CAAC0B,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACyB,UAAU,CAAC,UAAU,CAAC,EAAE;YACnE,IAAIgB,UAAU,GAAG,IAAIC,GAAG,EAAkB;YAC1C,IAAIC,OAAO,GAAG,EAAE;YAChB,IAAIjV,MAAI,CAAC4Q,iBAAiB,CAACyD,QAAQ,CAAC,KAAK,CAAC,EAAE;cAC1CY,OAAO,GAAGjV,MAAI,CAAC4Q,iBAAiB,CAACsE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;aAC/C,MACI;cACHD,OAAO,GAAGjV,MAAI,CAAC4Q,iBAAiB,CAACsE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;;YAEhD,MAAMC,KAAK,GAAGF,OAAO;YACrB,IAAIE,KAAK,CAAC5V,MAAM,KAAK,CAAC,EAAE;cACtBwV,UAAU,CAACK,GAAG,CAAC,QAAQ,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;cAClCJ,UAAU,CAACK,GAAG,CAAC,SAAS,EAAEpV,MAAI,CAAC4Q,iBAAiB,CAACsE,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3E,MAAM,IAAIA,KAAK,CAAC5V,MAAM,KAAK,CAAC,EAAE;cAC7BwV,UAAU,CAACK,GAAG,CAAC,SAAS,EAAEpV,MAAI,CAAC4Q,iBAAiB,CAACsE,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC1E,IAAInV,MAAI,CAAC8Q,MAAM,CAACC,SAAS,EAAE;gBACzBgE,UAAU,CAACK,GAAG,CAAC,QAAQ,EAAEpV,MAAI,CAAC8Q,MAAM,CAACC,SAAS,CAAC;eAChD,MAAM;gBACL,MAAM,IAAIsE,KAAK,CAAC,6FAA6F,CAAC;;aAEjH,MAAM;cACL,MAAM,IAAIA,KAAK,CAAC,+EAA+E,CAAC;;YAGlG,MAAMxI,OAAO,GAAG;cACd,SAAS,EAAEkI,UAAU,CAAClN,GAAG,CAAC,SAAS,CAAE;cACrC,QAAQ,EAAEkN,UAAU,CAAClN,GAAG,CAAC,QAAQ;aAClC;YAED7H,MAAI,CAACwQ,WAAW,CAAC5D,UAAU,CAACC,OAAO,CAAC,CAACV,SAAS,CAAC;cAC7CK,IAAI,EAAGtN,QAAa,IAAI;gBACtBG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAAC;gBAC1Cc,MAAI,CAAC4Q,iBAAiB,GAAG1R,QAAQ;cACnC,CAAC;cACDW,KAAK,EAAGA,KAAU,IAAI;gBACpBR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;cAC9C;aACD,CAAC;WAEH,MAAM,IAAIG,MAAI,CAAC4O,eAAe,CAAC5O,MAAI,CAAC4Q,iBAAiB,CAAC,EAAE;YACvD,MAAM0E,UAAU,GAAY;cAC1BtH,OAAO,EAAEhO,MAAI,CAAC4Q,iBAAiB;cAC/B/C,MAAM,EAAE7N,MAAI,CAAC8Q,MAAM;cACnBpC,SAAS,EAAE,IAAI6G,IAAI;aACpB;YACDvV,MAAI,CAACwQ,WAAW,CAACvD,WAAW,CAACqI,UAAU,CAAC;YACxCjW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEgN,IAAI,CAACe,SAAS,CAACiI,UAAU,CAAC,CAAC;WACvD,MAAM;YACL,MAAMA,UAAU,GAAY;cAC1BtH,OAAO,EAAEhO,MAAI,CAAC4Q,iBAAiB;cAC/B/C,MAAM,EAAE7N,MAAI,CAAC8Q,MAAM;cACnBpC,SAAS,EAAE,IAAI6G,IAAI;aACpB;YACDvV,MAAI,CAACwQ,WAAW,CAACvD,WAAW,CAACqI,UAAU,CAAC;YACxCjW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEgN,IAAI,CAACe,SAAS,CAACiI,UAAU,CAAC,CAAC;;UAExDtV,MAAI,CAAC4Q,iBAAiB,GAAG,EAAE;UAC3B5Q,MAAI,CAAC0Q,GAAG,CAAC6C,aAAa,EAAE;SACzB,MAAM;UACLlU,OAAO,CAACQ,KAAK,CAAC,gCAAgC,CAAC;;;IAElD;EACH;EAAC,QAAAc,CAAA;qBA3OUwB,aAAa,EAAA9H,+DAAA,CAAAwG,sDAAA,GAAAxG,+DAAA,CAAA0G,oEAAA,GAAA1G,+DAAA,CAAAmb,sDAAA,GAAAnb,+DAAA,CAAAA,4DAAA;EAAA;EAAA,QAAA4G,EAAA;UAAbkB,aAAa;IAAAjB,SAAA;IAAAyU,SAAA,WAAAC,oBAAApU,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;QC1B1BnH,uDAAA,cAAyG;QACzGA,4DAAA,aAA4B;QAEpBA,qEAAA,GAAc;QACVA,4DAAA,aAA8B;QAC1BA,wDAAA,IAAAyb,4BAAA,iBAYM;QACVzb,0DAAA,EAAM;QACVA,mEAAA,EAAe;QACnBA,0DAAA,EAAM;QACNA,wDAAA,IAAA2b,4BAAA,iBAEM;QAGN3b,4DAAA,aAA2B;QACqBA,wDAAA,2BAAA4b,yDAAAxb,MAAA;UAAA,OAAAgH,GAAA,CAAAmP,iBAAA,GAAAnW,MAAA;QAAA,EAA+B,2BAAAyb,yDAAA;UAAA,OACtDzU,GAAA,CAAAwL,WAAA,EAAa;QAAA,EADyC;QACvC5S,0DAAA,EAAW;QAC/CA,uDAAA,2BAC4C;QAG5CA,4DAAA,kBAA4F;QAAvBA,wDAAA,mBAAA8b,gDAAA;UAAA,OAAS1U,GAAA,CAAAqN,UAAA,EAAY;QAAA,EAAC;QACvFzU,uDAAA,aAA4B;QAChCA,0DAAA,EAAS;QAGTA,wDAAA,KAAA+b,6BAAA,mBA8BM;QAGN/b,4DAAA,kBAAyF;QAAxBA,wDAAA,mBAAAgc,gDAAA;UAAA,OAAS5U,GAAA,CAAAwL,WAAA,EAAa;QAAA,EAAC;QACpF5S,uDAAA,aAA0B;QAC9BA,0DAAA,EAAS;QAIbA,4DAAA,oBAA4E;QAAlEA,wDAAA,2BAAAic,0DAAA7b,MAAA;UAAA,OAAAgH,GAAA,CAAA6O,qBAAA,GAAA7V,MAAA;QAAA,EAAmC,oBAAA8b,mDAAA;UAAA,OAAW9U,GAAA,CAAA8O,gBAAA,EAAkB;QAAA,EAA7B;QACzClW,wDAAA,KAAAmc,qCAAA,0BAEc;QACdnc,4DAAA,eAA4B;QACxBA,uDAAA,eACiC;QACjCA,4DAAA,SAAG;QAAAA,oDAAA,IAA6B;QAAAA,0DAAA,EAAI;;;QA/EPA,uDAAA,GAAW;QAAXA,wDAAA,YAAAoH,GAAA,CAAAkP,QAAA,CAAW;QAgB1CtW,uDAAA,EAAuB;QAAvBA,wDAAA,SAAAoH,GAAA,CAAAuP,iBAAA,CAAuB;QAMmB3W,uDAAA,GAA+B;QAA/BA,wDAAA,YAAAoH,GAAA,CAAAmP,iBAAA,CAA+B;QAGvEvW,uDAAA,EAAwB;QAAxBA,yDAAA,mBAAwB;QAQtBA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoH,GAAA,CAAA6N,YAAA,CAAkB;QAuClBjV,uDAAA,GAAmC;QAAnCA,wDAAA,YAAAoH,GAAA,CAAA6O,qBAAA,CAAmC;QAKCjW,uDAAA,GAAkD;QAAlDA,oEAAA,YAAAoH,GAAA,CAAA4O,YAAA,kBAAA5O,GAAA,CAAA4O,YAAA,CAAA3R,QAAA,qBAAkD;QAAnFrE,wDAAA,QAAAoH,GAAA,CAAA4O,YAAA,kBAAA5O,GAAA,CAAA4O,YAAA,CAAAzR,UAAA,EAAAvE,2DAAA,CAAgC;QAElCA,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAoH,GAAA,CAAA4O,YAAA,kBAAA5O,GAAA,CAAA4O,YAAA,CAAA1R,SAAA,CAA6B;;;;;;iBDvE9B,CACV+O,6DAAO,CAAC,WAAW,EAAE,CACnBrG,2DAAK,CAAC,IAAI,EAAEmG,2DAAK,CAAC;QAAEkJ,OAAO,EAAE;MAAC,CAAE,CAAC,CAAC,EAClCjJ,gEAAU,CAAC,QAAQ,EAAE,CACnBD,2DAAK,CAAC;QAAEkJ,OAAO,EAAE;MAAC,CAAE,CAAC,EACrBnJ,6DAAO,CAAC,GAAG,CAAC,CACb,CAAC,EACFE,gEAAU,CAAC,QAAQ,EAAE,CACnBF,6DAAO,CAAC,GAAG,EAAEC,2DAAK,CAAC;QAAEkJ,OAAO,EAAE;MAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CACH,CAAC;IACH;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBmC;AACK;;;;;;;;;AAOrC,MAAOhU,cAAc;EAOzBzE,YAAoBuJ,IAAgB,EAAU5D,MAAc;IAAxC,KAAA4D,IAAI,GAAJA,IAAI;IAAsB,KAAA5D,MAAM,GAANA,MAAM;IAJpD,KAAA+S,cAAc,GAAW,CAAC;IAE1B,KAAAC,IAAI,GAAc,EAAE;EAE4C;EAC1DC,KAAKA,CAAA;IAAA,IAAA7X,KAAA;IAAA,OAAAC,oKAAA;MACT,MAAM4U,GAAG,GAAG,WAAW/L,MAAM,CAACC,QAAQ,CAACC,QAAQ,aAAa;MAC5D,MAAM8O,YAAY,GAAiB;QACjCpY,QAAQ,EAAEM,KAAI,CAACN,QAAQ;QACvBqY,QAAQ,EAAE/X,KAAI,CAAC+X,QAAQ;QACvBlL,KAAK,EAAE;OACR;MACD,IAAI;QACF,MAAM3M,QAAQ,SAAc9E,oDAAc,CAAC4E,KAAI,CAACwI,IAAI,CAACiB,IAAI,CAACoL,GAAG,EAAEiD,YAAY,CAAC,CAAC;QAC7E,IAAI5X,QAAQ,CAAC2M,KAAK,EAAE;UAClBhG,YAAY,CAACmR,OAAO,CAAC,OAAO,EAAE9X,QAAQ,CAAC2M,KAAK,CAAC;UAC7C7M,KAAI,CAAC2X,cAAc,GAAG,CAAC;UACvB3X,KAAI,CAAC4X,IAAI,GAAG,CAAC;YAAElX,QAAQ,EAAE,SAAS;YAAEC,OAAO,EAAE,iBAAiB;YAAEC,MAAM,EAAE;UAAmB,CAAE,CAAC;UAC9FZ,KAAI,CAAC4E,MAAM,CAACqT,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;SAC/B,MACI;UACHjY,KAAI,CAAC2X,cAAc,EAAE;UACrB,QAAQ3X,KAAI,CAAC2X,cAAc;YACzB,KAAK,CAAC;cACJ3X,KAAI,CAACkY,kBAAkB,GAAG,IAAI3B,IAAI,EAAE;cACpCvW,KAAI,CAAC4X,IAAI,GAAG,CAAC;gBAAElX,QAAQ,EAAE,OAAO;gBAAEC,OAAO,EAAE,eAAe;gBAAEC,MAAM,EAAE;cAAiC,CAAE,CAAC;cACxG;YACF,KAAK,EAAE;cACLgL,mDAAI,CAACC,QAAQ,CAAC,GAAG,CAAC;cAClB7L,KAAI,CAAC4X,IAAI,GAAG,CAAC;gBAAElX,QAAQ,EAAE,OAAO;gBAAEC,OAAO,EAAE,eAAe;gBAAEC,MAAM,EAAE;cAA8D,CAAE,CAAC;cACrI;YACF;cACE,MAAMuX,qBAAqB,GAAG,EAAE,GAAGnY,KAAI,CAAC2X,cAAc;cACtD,MAAM5b,QAAQ,GAAG,CAAC,WAAW,GAAGoc,qBAAqB,GAAG,mEAAmE,EAAEC,QAAQ,EAAE;cACvIpY,KAAI,CAAC4X,IAAI,GAAG,CAAC;gBAAElX,QAAQ,EAAE,OAAO;gBAAEC,OAAO,EAAE,eAAe;gBAAEC,MAAM,EAAE7E;cAAQ,CAAE,CAAC;cAC/E;;;OAIP,CAAC,OAAO8E,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAAC,QAAAc,CAAA;qBA7CU+B,cAAc,EAAArI,+DAAA,CAAAwG,4DAAA,GAAAxG,+DAAA,CAAA0G,mDAAA;EAAA;EAAA,QAAAE,EAAA;UAAdyB,cAAc;IAAAxB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA+V,wBAAA7V,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb3BnH,4DAAA,aAAqD;QAEjCA,wDAAA,yBAAAid,0DAAA7c,MAAA;UAAA,OAAAgH,GAAA,CAAAmV,IAAA,GAAAnc,MAAA;QAAA,EAAgB;QAAwBJ,0DAAA,EAAa;QACjEA,4DAAA,gBAA0C;QAChCA,wDAAA,sBAAAkd,iDAAA;UAAA,OAAY9V,GAAA,CAAAoV,KAAA,EAAO;QAAA,EAAC;QACtBxc,4DAAA,aAAqB;QACyBA,oDAAA,eAAQ;QAAAA,0DAAA,EAAQ;QAC1DA,4DAAA,aAA2B;QACvBA,uDAAA,WAA0B;QAC1BA,4DAAA,gBACyD;QADpCA,wDAAA,2BAAAmd,wDAAA/c,MAAA;UAAA,OAAAgH,GAAA,CAAA/C,QAAA,GAAAjE,MAAA;QAAA,EAAsB;QAA3CJ,0DAAA,EACyD;QAGjEA,4DAAA,cAAqB;QACyBA,oDAAA,gBAAQ;QAAAA,0DAAA,EAAQ;QAC1DA,4DAAA,cAA2B;QACvBA,uDAAA,aAA0B;QAC1BA,4DAAA,iBACyD;QADpCA,wDAAA,2BAAAod,wDAAAhd,MAAA;UAAA,OAAAgH,GAAA,CAAAsV,QAAA,GAAAtc,MAAA;QAAA,EAAsB;QAA3CJ,0DAAA,EACyD;QAGjEA,4DAAA,eAA0B;QACtBA,uDAAA,oBAA+E;QAEnFA,0DAAA,EAAM;QACNA,4DAAA,eAA2B;QACvBA,oDAAA,yBAAgB;QAAAA,4DAAA,aAA0B;QAAAA,oDAAA,qBAAa;QAAAA,0DAAA,EAAI;;;QAxB3DA,uDAAA,GAAgB;QAAhBA,wDAAA,UAAAoH,GAAA,CAAAmV,IAAA,CAAgB;QAOSvc,uDAAA,GAAsB;QAAtBA,wDAAA,YAAAoH,GAAA,CAAA/C,QAAA,CAAsB;QAQtBrE,uDAAA,GAAsB;QAAtBA,wDAAA,YAAAoH,GAAA,CAAAsV,QAAA,CAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBC;AAK9B;AACK;;;;;;;;;;;;;ICInB1c,uDAAA,oBAC8F;;;;;IAS9FA,uDAAA,oBAEsC;;;;;IAStCA,uDAAA,oBAEsC;;;;;;IA9B9CA,4DAAA,cAA+E;IAA9CA,wDAAA,sBAAAsd,kEAAA;MAAAtd,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAYA,yDAAA,CAAAO,MAAA,CAAAgd,QAAA,EAAU;IAAA,EAAC;IACpDvd,4DAAA,aAAqB;IACsBA,oDAAA,YAAK;IAAAA,0DAAA,EAAQ;IACpDA,4DAAA,aAA2B;IACvBA,uDAAA,WAA8B;IAElCA,0DAAA,EAAM;IACNA,wDAAA,IAAAwd,oDAAA,wBAC8F;IAClGxd,0DAAA,EAAM;IACNA,4DAAA,aAAqB;IACyBA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IAC1DA,4DAAA,cAA2B;IACvBA,uDAAA,aAA0B;IAG9BA,0DAAA,EAAM;IACNA,wDAAA,KAAAyd,qDAAA,wBAEsC;IAC1Czd,0DAAA,EAAM;IACNA,4DAAA,cAAqB;IACyBA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IAC1DA,4DAAA,cAA2B;IACvBA,uDAAA,aAA0B;IAG9BA,0DAAA,EAAM;IACNA,wDAAA,KAAA0d,qDAAA,wBAEsC;IAC1C1d,0DAAA,EAAM;IACNA,4DAAA,eAA0B;IACtBA,uDAAA,oBACuC;IAC3CA,0DAAA,EAAM;IACNA,4DAAA,eAAwB;IACpBA,oDAAA,6BAAoB;IAAAA,4DAAA,aAAuB;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAI;;;;;;;IArC3DA,wDAAA,cAAAa,MAAA,CAAA8c,YAAA,CAA0B;IAQnB3d,uDAAA,GAAqD;IAArDA,wDAAA,UAAA4d,OAAA,GAAA/c,MAAA,CAAA8c,YAAA,CAAAnQ,GAAA,4BAAAoQ,OAAA,CAAAC,MAAA,kBAAAD,OAAA,CAAAC,MAAA,aAAqD;IAUrD7d,uDAAA,GAAwD;IAAxDA,wDAAA,UAAA8d,OAAA,GAAAjd,MAAA,CAAA8c,YAAA,CAAAnQ,GAAA,+BAAAsQ,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,aAAwD;IAWxD7d,uDAAA,GAAwD;IAAxDA,wDAAA,UAAA+d,OAAA,GAAAld,MAAA,CAAA8c,YAAA,CAAAnQ,GAAA,+BAAAuQ,OAAA,CAAAF,MAAA,kBAAAE,OAAA,CAAAF,MAAA,aAAwD;IAIpB7d,uDAAA,GAAiC;IAAjCA,wDAAA,aAAAa,MAAA,CAAA8c,YAAA,CAAAK,OAAA,CAAiC;;;ADvB5F,MAAO1V,iBAAiB;EAS5B1E,YAAoBqa,WAAwB,EAAU9Q,IAAgB,EAAU5D,MAAc;IAA1E,KAAA0U,WAAW,GAAXA,WAAW;IAAuB,KAAA9Q,IAAI,GAAJA,IAAI;IAAsB,KAAA5D,MAAM,GAANA,MAAM;IAHtF,KAAA+S,cAAc,GAAW,CAAC;IAC1B,KAAAC,IAAI,GAAc,EAAE;EAIpB;EAEA7P,QAAQA,CAAA;IACN,IAAI,CAACiR,YAAY,GAAG,IAAI,CAACM,WAAW,CAACC,KAAK,CAAC;MACzCC,KAAK,EAAE,CAAC,EAAE,EAAEd,sDAAU,CAACe,QAAQ,CAAC;MAChC/Z,QAAQ,EAAE,CAAC,EAAE,EAAEgZ,sDAAU,CAACe,QAAQ,CAAC;MACnC1B,QAAQ,EAAE,CAAC,EAAE,EAAEW,sDAAU,CAACe,QAAQ;KACnC,CAAC;EACJ;EAEMb,QAAQA,CAAA;IAAA,IAAA5Y,KAAA;IAAA,OAAAC,oKAAA;MACZ,IAAID,KAAI,CAACgZ,YAAY,CAACU,KAAK,EAAE;QAC3B,MAAM7E,GAAG,GAAG,WAAW/L,MAAM,CAACC,QAAQ,CAACC,QAAQ,gBAAgB;QAC/D,MAAM2Q,eAAe,GAAoB;UACvCja,QAAQ,EAAEM,KAAI,CAACgZ,YAAY,CAACnQ,GAAG,CAAC,UAAU,CAAC,EAAE/I,KAAK;UAClDiY,QAAQ,EAAE/X,KAAI,CAACgZ,YAAY,CAACnQ,GAAG,CAAC,UAAU,CAAC,EAAE/I,KAAK;UAClD0Z,KAAK,EAAExZ,KAAI,CAACgZ,YAAY,CAACnQ,GAAG,CAAC,OAAO,CAAC,EAAE/I;SACxC;QACD,IAAI;UACF,MAAMI,QAAQ,SAAc9E,oDAAc,CAAC4E,KAAI,CAACwI,IAAI,CAACiB,IAAI,CAACoL,GAAG,EAAE8E,eAAe,CAAC,CAAC;UAChF,IAAIzZ,QAAQ,CAACV,EAAE,EAAE;YACfQ,KAAI,CAAC2X,cAAc,GAAG,CAAC;YACvB3X,KAAI,CAAC4X,IAAI,GAAG,CAAC;cAAElX,QAAQ,EAAE,SAAS;cAAEC,OAAO,EAAE,iBAAiB;cAAEC,MAAM,EAAE;YAAyC,CAAE,CAAC;YACpHgL,mDAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;YAChB7L,KAAI,CAAC4E,MAAM,CAACqT,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;WAChC,MACI;YACHjY,KAAI,CAAC2X,cAAc,EAAE;YACrB,QAAQ3X,KAAI,CAAC2X,cAAc;cACzB,KAAK,CAAC;gBACJ3X,KAAI,CAACkY,kBAAkB,GAAG,IAAI3B,IAAI,EAAE;gBACpCvW,KAAI,CAAC4X,IAAI,GAAG,CAAC;kBAAElX,QAAQ,EAAE,OAAO;kBAAEC,OAAO,EAAE,eAAe;kBAAEC,MAAM,EAAE;gBAAwC,CAAE,CAAC;gBAC/G;cACF,KAAK,EAAE;gBACLgL,mDAAI,CAACC,QAAQ,CAAC,GAAG,CAAC;gBAClB7L,KAAI,CAAC4X,IAAI,GAAG,CAAC;kBAAElX,QAAQ,EAAE,OAAO;kBAAEC,OAAO,EAAE,eAAe;kBAAEC,MAAM,EAAE;gBAAqE,CAAE,CAAC;gBAC5I;cACF;gBACE,MAAMuX,qBAAqB,GAAG,EAAE,GAAGnY,KAAI,CAAC2X,cAAc;gBACtD,MAAM5b,QAAQ,GAAG,CAAC,WAAW,GAAGoc,qBAAqB,GAAG,oEAAoE,EAAEC,QAAQ,EAAE;gBACxIpY,KAAI,CAAC4X,IAAI,GAAG,CAAC;kBAAElX,QAAQ,EAAE,OAAO;kBAAEC,OAAO,EAAE,eAAe;kBAAEC,MAAM,EAAE7E;gBAAQ,CAAE,CAAC;gBAC/E;;;SAIP,CAAC,OAAO8E,KAAK,EAAE;UACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;;IAEvB;EACH;EAAC,QAAAc,CAAA;qBA5DUgC,iBAAiB,EAAAtI,+DAAA,CAAAwG,uDAAA,GAAAxG,+DAAA,CAAA0G,4DAAA,GAAA1G,+DAAA,CAAAmb,mDAAA;EAAA;EAAA,QAAAvU,EAAA;UAAjB0B,iBAAiB;IAAAzB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAuX,2BAAArX,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCd9BnH,4DAAA,aAAwD;QAG5CA,wDAAA,IAAAye,wCAAA,0BAyCc;QAClBze,0DAAA,EAAS;;;;;;;;;;;;;;;;;;;;;;;;ACrCX,MAAOyG,cAAc;EAEzB7C,YAAoBuJ,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EACxC/G,aAAaA,CAACjC,EAAU;IACtB,OAAO,IAAI,CAACgJ,IAAI,CAACiD,MAAM,CAAC,WAAW3C,MAAM,CAACC,QAAQ,CAACC,QAAQ,oCAAoCxJ,EAAE,EAAE,EAAE;MAAEkK,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACtJ;EAEAoR,cAAcA,CAACva,EAAU;IACvB,OAAO,IAAI,CAACgJ,IAAI,CAACK,GAAG,CAAU,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,qCAAqCxJ,EAAE,EAAE,CAAC;EAC7G;EAEAwa,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACxR,IAAI,CAACK,GAAG,CAAY,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,mCAAmC,CAAC;EACzG;EAEA1M,aAAaA,CAACI,OAAgB;IAC5B,OAAO,IAAI,CAAC8L,IAAI,CAACiC,GAAG,CAAU,WAAW3B,MAAM,CAACC,QAAQ,CAACC,QAAQ,kCAAkC,EAAEtM,OAAO,EAAE;MAAEgN,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EAC/J;EAEA5I,gBAAgBA,CAACpD,WAAmB;IAClC,OAAO,IAAI,CAAC6L,IAAI,CAACK,GAAG,CAAU,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,uCAAuCrM,WAAW,EAAE,EAAE;MAAE+M,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EACxK;EAEA5H,UAAUA,CAACrE,OAAgB;IACzB,OAAO,IAAI,CAAC8L,IAAI,CAACiB,IAAI,CAAU,WAAWX,MAAM,CAACC,QAAQ,CAACC,QAAQ,+BAA+B,EAAEtM,OAAO,EAAE;MAAEgN,OAAO,EAAE,UAAU;MAAEf,eAAe,EAAE;IAAI,CAAE,CAAC;EAC7J;EAAC,QAAAhH,CAAA;qBAzBUG,cAAc,EAAAzG,sDAAA,CAAAwG,4DAAA;EAAA;EAAA,QAAAI,EAAA;WAAdH,cAAc;IAAAqH,OAAA,EAAdrH,cAAc,CAAAsH,IAAA;IAAAC,UAAA,EAFb;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHkB;;;;;;;;;;;;;;;;;ICI1BhO,4DAAA,aAA0B;IAElBA,uDAAA,aAAiF;IACjFA,4DAAA,gBAA+D;IAAlCA,wDAAA,mBAAA4e,6DAAA;MAAA,MAAA9K,WAAA,GAAA9T,2DAAA,CAAA6e,GAAA;MAAA,MAAAC,UAAA,GAAAhL,WAAA,CAAAE,SAAA;MAAA,MAAA+K,MAAA,GAAA/e,2DAAA;MAAA,OAASA,yDAAA,CAAA+e,MAAA,CAAAC,cAAA,CAAAF,UAAA,CAAuB;IAAA,EAAC;IAC1D9e,uDAAA,WAC2F;IAC/FA,0DAAA,EAAS;IAEbA,4DAAA,aAA6B;IACAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAK;IACvDA,4DAAA,cAA4B;IACxBA,uDAAA,mBAAmF;IACvFA,0DAAA,EAAM;IACNA,4DAAA,cAA0B;IAAAA,oDAAA,IAAyB;IAAAA,0DAAA,EAAK;IACxDA,uDAAA,iBAAmG;IACnGA,4DAAA,eAA6B;IAErBA,wDAAA,mBAAAif,gEAAA;MAAA,MAAAnL,WAAA,GAAA9T,2DAAA,CAAA6e,GAAA;MAAA,MAAAC,UAAA,GAAAhL,WAAA,CAAAE,SAAA;MAAA,MAAAzT,MAAA,GAAAP,2DAAA;MAAA,OAASA,yDAAA,CAAAO,MAAA,CAAA2e,OAAA,CAAAJ,UAAA,CAAA5c,QAAA,CAAyB;IAAA,EAAC;IACYlC,0DAAA,EAAW;;;;;IAhB7DA,uDAAA,GAAyB;IAAzBA,mEAAA,QAAA8e,UAAA,CAAAld,KAAA,EAAA5B,2DAAA,CAAyB;IAACA,wDAAA,QAAA8e,UAAA,CAAAxd,WAAA,CAA2B;IAGlDtB,uDAAA,GAAkF;IAAlFA,wDAAA,YAAAA,6DAAA,KAAAiR,GAAA,GAAA6N,UAAA,CAAAO,UAAA,EAAAP,UAAA,CAAAO,UAAA,EAAkF;IAIjErf,uDAAA,GAAyB;IAAzBA,+DAAA,CAAA8e,UAAA,CAAAxd,WAAA,CAAyB;IAEpCtB,uDAAA,GAA0B;IAA1BA,wDAAA,YAAA8e,UAAA,CAAAQ,MAAA,CAA0B;IAEdtf,uDAAA,GAAyB;IAAzBA,+DAAA,OAAA8e,UAAA,CAAArd,KAAA,CAAyB;IAC5CzB,uDAAA,EAAiC;IAAjCA,wDAAA,UAAA8e,UAAA,CAAA/c,eAAA,CAAiC,aAAAlB,MAAA,CAAA0e,WAAA,CAAAT,UAAA,CAAA/c,eAAA;IAE1B/B,uDAAA,GAAiD;IAAjDA,wDAAA,aAAAa,MAAA,CAAA2e,WAAA,CAAAV,UAAA,CAAA/c,eAAA,EAAiD;;;ADb7E,MAAOgG,aAAa;EAIxBnE,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAHlC,KAAA4b,QAAQ,GAAc,EAAE;IACxB,KAAApe,OAAO,GAAQ;MAAE8C,EAAE,EAAE,EAAE;MAAE7C,WAAW,EAAE,EAAE;MAAEG,KAAK,EAAE,CAAC;MAAEG,KAAK,EAAE,EAAE;MAAEG,eAAe,EAAE,EAAE;MAAEG,QAAQ,EAAE,EAAE;MAAEmd,UAAU,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAC,CAAE;IAmDhI,KAAAI,iBAAiB,GAAU,CACzB;MAAEC,UAAU,EAAE,QAAQ;MAAEC,UAAU,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAC,CAAE,EACrD;MAAEF,UAAU,EAAE,OAAO;MAAEC,UAAU,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAC,CAAE,EACpD;MAAEF,UAAU,EAAE,OAAO;MAAEC,UAAU,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAC,CAAE,CACrD;EArDqD;EAEhDnT,QAAQA,CAAA;IAAA,IAAA/H,KAAA;IAAA,OAAAC,oKAAA;MACZ,MAAMD,KAAI,CAACmb,eAAe,EAAE;IAAC;EAC/B;EAEMA,eAAeA,CAAA;IAAA,IAAAra,MAAA;IAAA,OAAAb,oKAAA;MACnB,IAAI;QACF,IAAIvD,OAAgB;QACpB,MAAMwD,QAAQ,SAAc9E,oDAAc,CAAC0F,MAAI,CAAC5B,cAAc,CAAC8a,cAAc,EAAE,CAAC;QAChF,IAAI9Z,QAAQ,IAAIA,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;UACnCL,QAAQ,CAACkb,OAAO,CAAEC,UAAe,IAAI;YACnC3e,OAAO,CAAC8C,EAAE,GAAG6b,UAAU,CAAC7b,EAAG;YAC3B9C,OAAO,CAACC,WAAW,GAAG0e,UAAU,CAAC1e,WAAY;YAC7CD,OAAO,CAACI,KAAK,GAAGue,UAAU,CAACve,KAAM;YACjCJ,OAAO,CAACU,eAAe,GAAGie,UAAU,CAACje,eAAgB;YACrDV,OAAO,CAACO,KAAK,GAAGoe,UAAU,CAACpe,KAAM;YACjCP,OAAO,CAACa,QAAQ,GAAG8d,UAAU,CAAC9d,QAAS;YACvCb,OAAO,CAACge,UAAU,GAAGW,UAAU,CAACX,UAAW;YAC3Che,OAAO,CAACie,MAAM,GAAGU,UAAU,CAACV,MAAO;YACnC7Z,MAAI,CAACga,QAAQ,CAACra,IAAI,CAAC/D,OAAO,CAAC;UAC7B,CAAC,CAAC;UACF2D,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEQ,MAAI,CAACga,QAAQ,CAAC;;OAE3C,CAAC,OAAOja,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EAEH;EAEMya,WAAWA,CAAA;IAAA,IAAAta,MAAA;IAAA,OAAAf,oKAAA;MACf,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC4F,MAAI,CAAC9B,cAAc,CAAC6a,cAAc,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI7Z,QAAQ,IAAIA,QAAQ,CAACV,EAAE,GAAG,CAAC,EAAE;UAC/BwB,MAAI,CAACtE,OAAO,CAAC8C,EAAE,GAAGU,QAAQ,CAACV,EAAG;UAC9BwB,MAAI,CAACtE,OAAO,CAACC,WAAW,GAAGuD,QAAQ,CAACvD,WAAY;UAChDqE,MAAI,CAACtE,OAAO,CAACI,KAAK,GAAGoD,QAAQ,CAACpD,KAAK;UACnCkE,MAAI,CAACtE,OAAO,CAACU,eAAe,GAAG8C,QAAQ,CAAC9C,eAAe;UACvD4D,MAAI,CAACtE,OAAO,CAACO,KAAK,GAAGiD,QAAQ,CAACjD,KAAK;UACnC+D,MAAI,CAACtE,OAAO,CAACa,QAAQ,GAAG2C,QAAQ,CAAC3C,QAAQ;UACzCyD,MAAI,CAACtE,OAAO,CAACge,UAAU,GAAG,KAAK;UAC/B1Z,MAAI,CAACtE,OAAO,CAACie,MAAM,GAAGY,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UACzDpb,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEgN,IAAI,CAACe,SAAS,CAACrN,MAAI,CAACtE,OAAQ,CAAC,CAAC;;OAE1D,CAAC,OAAOmE,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAQA+Z,WAAWA,CAACza,MAAc;IACxB,QAAQA,MAAM;MACZ,KAAK,UAAU;QACb,OAAO,SAAS;MAClB,KAAK,WAAW;QACd,OAAO,SAAS;MAClB,KAAK,cAAc;QACjB,OAAO,QAAQ;MACjB;QACE,OAAO,QAAQ;;EAErB;EAEA0a,WAAWA,CAAC1a,MAAc;IACxB,OAAOA,MAAM,KAAK,cAAc;EAClC;EAEAoa,OAAOA,CAACmB,WAAmB;IACzB,IAAIA,WAAW,IAAI,EAAE,EACnB5S,MAAM,CAAC6S,IAAI,CAACD,WAAW,EAAE,OAAO,CAAC;EACrC;EAEArB,cAAcA,CAAC3d,OAAgB;IAC7BA,OAAO,CAACge,UAAU,GAAG,CAAChe,OAAO,CAACge,UAAU;EAC1C;EAAC,QAAA/Y,CAAA;qBAnFUyB,aAAa,EAAA/H,+DAAA,CAAAwG,oEAAA;EAAA;EAAA,QAAAI,EAAA;UAAbmB,aAAa;IAAAlB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAsZ,uBAAApZ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1BnH,4DAAA,aAA0B;QACAA,oDAAA,wBAAiB;QAAAA,0DAAA,EAAK;QAE5CA,4DAAA,oBAC4C;QACxCA,wDAAA,IAAAwgB,oCAAA,2BAuBc;QAClBxgB,0DAAA,EAAa;;;QA1BDA,uDAAA,GAAkB;QAAlBA,wDAAA,UAAAoH,GAAA,CAAAqY,QAAA,CAAkB,0EAAArY,GAAA,CAAAsY,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEI;;;;;;;;;;;AAOhC,MAAOvX,qBAAqB;EAIhCvE,YAAoB6c,YAA0B,EAAU3c,WAAwB,EAAUyF,MAAc;IAApF,KAAAkX,YAAY,GAAZA,YAAY;IAAwB,KAAA3c,WAAW,GAAXA,WAAW;IAAuB,KAAAyF,MAAM,GAANA,MAAM;IAHhG,KAAAmX,SAAS,GAAW;MAAEvc,EAAE,EAAE,EAAE;MAAEwP,OAAO,EAAE,EAAE;MAAEH,MAAM,EAAE;QAAErP,EAAE,EAAE,EAAE;QAAEE,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAE,CAAE;MAAE8P,SAAS,EAAE,IAAI6G,IAAI,EAAE;MAAE9O,KAAK,EAAE,EAAE;MAAEuU,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAE;IACvK,KAAAC,UAAU,GAAa,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;EAI5E;EAEMtD,QAAQA,CAAA;IAAA,IAAA5Y,KAAA;IAAA,OAAAC,oKAAA;MACZ,IAAI;QACF,MAAMD,KAAI,CAAC2S,WAAW,EAAY,CAAC,CAAC;QACpC;QACAtS,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEgN,IAAI,CAACe,SAAS,CAACrO,KAAI,CAAC+b,SAAS,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM7b,QAAQ,SAAS9E,oDAAc,CAAC4E,KAAI,CAAC8b,YAAY,CAACnS,SAAS,CAAC3J,KAAI,CAAC+b,SAAS,CAAC,CAAC;QAClF1b,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrBF,KAAI,CAAC8b,YAAY,CAACvS,eAAe,GAAGrJ,QAAQ,CAACE,IAAI,CAACZ,EAAE;QACpDQ,KAAI,CAAC4E,MAAM,CAACqT,QAAQ,CAAC,CAAC,SAAS,EAAEjY,KAAI,CAAC8b,YAAY,CAACvS,eAAe,CAAC,CAAC;OACrE,CAAC,OAAO1I,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEM8R,WAAWA,CAAA;IAAA,IAAA7R,MAAA;IAAA,OAAAb,oKAAA;MACf,IAAI;QACF,MAAMC,QAAQ,SAAS9E,oDAAc,CAAC0F,MAAI,CAAC3B,WAAW,CAACyL,OAAO,EAAE,CAAC;QACjE9J,MAAI,CAACib,SAAS,CAAClN,MAAM,GAAG;UACtBrP,EAAE,EAAEU,QAAQ,CAACE,IAAI,CAACZ,EAAE;UACpBE,QAAQ,EAAEQ,QAAQ,CAACE,IAAI,CAACV,QAAQ;UAChCC,SAAS,EAAEO,QAAQ,CAACE,IAAI,CAACT,SAAS;UAClCC,UAAU,EAAEM,QAAQ,CAACE,IAAI,CAACR;SAC3B;OACF,CAAC,OAAOiB,KAAK,EAAE;QAAER,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;MACtC,OAAOC,MAAI,CAACib,SAAS,CAAClN,MAAO;IAAC;EAChC;EAAC,QAAAlN,CAAA;qBAjCU6B,qBAAqB,EAAAnI,+DAAA,CAAAwG,uEAAA,GAAAxG,+DAAA,CAAA0G,oEAAA,GAAA1G,+DAAA,CAAAmb,mDAAA;EAAA;EAAA,QAAAvU,EAAA;UAArBuB,qBAAqB;IAAAtB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA6Z,+BAAA3Z,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCblCnH,4DAAA,aAAmC;QAErBA,wDAAA,sBAAA+gB,wDAAA;UAAA,OAAY3Z,GAAA,CAAAmW,QAAA,EAAU;QAAA,EAAC;QACzBvd,4DAAA,aAAqB;QAEMA,oDAAA,YAAK;QAAAA,0DAAA,EAAQ;QAChCA,4DAAA,eACwC;QAD2BA,wDAAA,2BAAAghB,8DAAA5gB,MAAA;UAAA,OAAAgH,GAAA,CAAAsZ,SAAA,CAAAtU,KAAA,GAAAhM,MAAA;QAAA,EAA6B;QAAhGJ,0DAAA,EACwC;QAE5CA,4DAAA,aAAqB;QACIA,oDAAA,eAAO;QAAAA,0DAAA,EAAQ;QACpCA,4DAAA,mBACiD;QADiBA,wDAAA,2BAAAihB,kEAAA7gB,MAAA;UAAA,OAAAgH,GAAA,CAAAsZ,SAAA,CAAA/M,OAAA,GAAAvT,MAAA;QAAA,EAA+B;QAChDJ,0DAAA,EAAW;QAEhEA,4DAAA,qBACyE;QADxBA,wDAAA,2BAAAkhB,oEAAA9gB,MAAA;UAAA,OAAAgH,GAAA,CAAAsZ,SAAA,CAAAC,QAAA,GAAAvgB,MAAA;QAAA,EAAgC;QACRJ,0DAAA,EAAa;QAItFA,4DAAA,cAAqB;QACjBA,uDAAA,kBAAmF;QACvFA,0DAAA,EAAM;;;QAfiEA,uDAAA,GAA6B;QAA7BA,wDAAA,YAAAoH,GAAA,CAAAsZ,SAAA,CAAAtU,KAAA,CAA6B;QAK9BpM,uDAAA,GAA+B;QAA/BA,wDAAA,YAAAoH,GAAA,CAAAsZ,SAAA,CAAA/M,OAAA,CAA+B;QAG3E3T,uDAAA,EAAsB;QAAtBA,wDAAA,YAAAoH,GAAA,CAAAyZ,UAAA,CAAsB,YAAAzZ,GAAA,CAAAsZ,SAAA,CAAAC,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRX;;;;;;;;;;;ICMrC3gB,uDAAA,cAAuG;;;;IAAnEA,wDAAA,QAAAmhB,OAAA,CAAA3N,MAAA,CAAAjP,UAAA,EAAAvE,2DAAA,CAA8B;;;;;IAF1EA,4DAAA,cAAoD;IAE5CA,wDAAA,IAAAohB,iDAAA,kBAAuG;IAC3GphB,0DAAA,EAAM;IACNA,4DAAA,cAA0B;IAEKA,oDAAA,GAA0B;IAAAA,0DAAA,EAAO;IACxDA,4DAAA,eAAwB;IAAAA,oDAAA,GAAmC;;IAAAA,0DAAA,EAAO;IAEtEA,4DAAA,SAAG;IAAAA,oDAAA,IAAkB;IAAAA,0DAAA,EAAI;;;;IAPnBA,uDAAA,GAA4B;IAA5BA,wDAAA,SAAAmhB,OAAA,CAAA3N,MAAA,CAAAjP,UAAA,CAA4B;IAIPvE,uDAAA,GAA0B;IAA1BA,+DAAA,CAAAmhB,OAAA,CAAA3N,MAAA,CAAAnP,QAAA,CAA0B;IACzBrE,uDAAA,GAAmC;IAAnCA,+DAAA,CAAAA,yDAAA,OAAAmhB,OAAA,CAAA9M,SAAA,WAAmC;IAE5DrU,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAmhB,OAAA,CAAAxN,OAAA,CAAkB;;;;;;IAnBrC3T,4DAAA,aAA6C;IAEjCA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;IAC3BA,4DAAA,WAAoB;IAAAA,oDAAA,GAAqB;IAAAA,0DAAA,EAAI;IAEjDA,4DAAA,aAA4B;IACrBA,oDAAA,GAAoB;IAAAA,0DAAA,EAAI;IAE/BA,4DAAA,aAA2B;IACnBA,oDAAA,aAAK;IAAAA,0DAAA,EAAK;IACdA,wDAAA,KAAAqhB,2CAAA,kBAWM;IACVrhB,0DAAA,EAAM;IACNA,4DAAA,cAAwB;IACdA,wDAAA,sBAAAshB,+DAAA;MAAAthB,2DAAA,CAAAuhB,GAAA;MAAA,MAAAxL,MAAA,GAAA/V,2DAAA;MAAA,OAAYA,yDAAA,CAAA+V,MAAA,CAAA5H,OAAA,EAAS;IAAA,EAAC;IACxBnO,4DAAA,cAA6B;IACAA,wDAAA,2BAAAwhB,wEAAAphB,MAAA;MAAAJ,2DAAA,CAAAuhB,GAAA;MAAA,MAAA9N,MAAA,GAAAzT,2DAAA;MAAA,OAAaA,yDAAA,CAAAyT,MAAA,CAAAgO,OAAA,CAAA9N,OAAA,GAAAvT,MAAA,CAAuB;IAAA,EAAP;IACpBJ,0DAAA,EAAW;IAC7CA,uDAAA,kBAAmG;IACvGA,0DAAA,EAAM;;;;IA3BNA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAa,MAAA,CAAA0N,MAAA,CAAAnC,KAAA,CAAkB;IACFpM,uDAAA,GAAqB;IAArBA,+DAAA,CAAAa,MAAA,CAAA0N,MAAA,CAAAoS,QAAA,CAAqB;IAGtC3gB,uDAAA,GAAoB;IAApBA,+DAAA,CAAAa,MAAA,CAAA0N,MAAA,CAAAoF,OAAA,CAAoB;IAID3T,uDAAA,GAAe;IAAfA,wDAAA,YAAAa,MAAA,CAAA0N,MAAA,CAAAqS,KAAA,CAAe;IAgBJ5gB,uDAAA,GAA6B;IAA7BA,wDAAA,YAAAa,MAAA,CAAA4gB,OAAA,CAAA9N,OAAA,CAA6B;;;ADZhE,MAAOvL,qBAAqB;EAMhCsE,QAAQA,CAAA;IACN,MAAMgV,WAAW,GAAG,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACrD,IAAIH,WAAW,EAAE;MACf,IAAI,CAACvd,EAAE,GAAGud,WAAW;MACrBlW,YAAY,CAACmR,OAAO,CAAC,UAAU,EAAE,IAAI,CAACxY,EAAE,CAAC;KAC1C,MAAM;MACL,MAAM2d,QAAQ,GAAGtW,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACjD,IAAIqW,QAAQ,EAAE;QACZ,IAAI,CAAC3d,EAAE,GAAG2d,QAAQ;;;IAGtB,IAAI,CAACC,SAAS,EAAE;EAClB;EACAne,YAAoB6c,YAA0B,EAAU3c,WAAwB,EAAU6d,MAAsB,EAAUpY,MAAc;IAApH,KAAAkX,YAAY,GAAZA,YAAY;IAAwB,KAAA3c,WAAW,GAAXA,WAAW;IAAuB,KAAA6d,MAAM,GAANA,MAAM;IAA0B,KAAApY,MAAM,GAANA,MAAM;IAlBhI,KAAAnF,IAAI,GAAW,EAAY;IAC3B,KAAAmK,MAAM,GAAW,EAAY;IAC7B,KAAAkT,OAAO,GAAS,EAAU;IAC1B,KAAAtd,EAAE,GAAW,IAAI,CAACsc,YAAY,CAACvS,eAAe;IAC9C,KAAA8T,gBAAgB,GAAW,EAAE;EAgB7B;EACMzS,OAAOA,CAAA;IAAA,IAAA5K,KAAA;IAAA,OAAAC,oKAAA;MACX,IAAI;QACF,MAAMC,QAAQ,SAAS9E,oDAAc,CAAC4E,KAAI,CAACb,WAAW,CAACyL,OAAO,EAAE,CAAC;QACjE5K,KAAI,CAACP,IAAI,CAACD,EAAE,GAAGU,QAAQ,CAACE,IAAI,CAACZ,EAAE;QAC/BQ,KAAI,CAACP,IAAI,CAACC,QAAQ,GAAGQ,QAAQ,CAACE,IAAI,CAACV,QAAQ;QAC3CM,KAAI,CAACP,IAAI,CAACE,SAAS,GAAGO,QAAQ,CAACE,IAAI,CAACT,SAAS;QAC7CK,KAAI,CAACP,IAAI,CAACG,UAAU,GAAGM,QAAQ,CAACE,IAAI,CAACR,UAAU;OAChD,CAAC,OAAOiB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;;IAC3C;EACH;EAEMuc,SAASA,CAAA;IAAA,IAAAtc,MAAA;IAAA,OAAAb,oKAAA;MACb,IAAI;QACF,MAAMC,QAAQ,SAAS9E,oDAAc,CAAC0F,MAAI,CAACgb,YAAY,CAAC9R,aAAa,CAAClJ,MAAI,CAACtB,EAAE,CAAC,CAAC;QAC/EsB,MAAI,CAAC8I,MAAM,CAACpK,EAAE,GAAGU,QAAQ,CAACE,IAAI,CAACZ,EAAE;QACjCsB,MAAI,CAAC8I,MAAM,CAACnC,KAAK,GAAGvH,QAAQ,CAACE,IAAI,CAACqH,KAAK;QACvC3G,MAAI,CAAC8I,MAAM,CAACoS,QAAQ,GAAG9b,QAAQ,CAACE,IAAI,CAAC4b,QAAQ;QAC7Clb,MAAI,CAAC8I,MAAM,CAACqS,KAAK,GAAG/b,QAAQ,CAACE,IAAI,CAAC6b,KAAK;QACvCnb,MAAI,CAAC8I,MAAM,CAAC8F,SAAS,GAAGxP,QAAQ,CAACE,IAAI,CAACsP,SAAS;QAC/C5O,MAAI,CAAC8I,MAAM,CAACoF,OAAO,GAAG9O,QAAQ,CAACE,IAAI,CAAC4O,OAAO;QAC3ClO,MAAI,CAAC8I,MAAM,CAACiF,MAAM,GAAG,EAAY;QACjC/N,MAAI,CAAC8I,MAAM,CAACiF,MAAM,CAACrP,EAAE,GAAGU,QAAQ,CAACE,IAAI,CAACyO,MAAM,CAACrP,EAAE;QAC/CsB,MAAI,CAAC8I,MAAM,CAACiF,MAAM,CAACnP,QAAQ,GAAGQ,QAAQ,CAACE,IAAI,CAACyO,MAAM,CAACnP,QAAQ;QAC3DoB,MAAI,CAAC8I,MAAM,CAACiF,MAAM,CAACjP,UAAU,GAAGM,QAAQ,CAACE,IAAI,CAACyO,MAAM,CAACjP,UAAU;QAC/DkB,MAAI,CAAC8I,MAAM,CAACiF,MAAM,CAAClP,SAAS,GAAGO,QAAQ,CAACE,IAAI,CAACyO,MAAM,CAAClP,SAAS;QAC7D,MAAMmB,MAAI,CAACwc,QAAQ,EAAE;OACtB,CACD,OAAOzc,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EACM2I,OAAOA,CAAA;IAAA,IAAAxI,MAAA;IAAA,OAAAf,oKAAA;MACX,MAAMe,MAAI,CAAC4J,OAAO,EAAE;MACpB5J,MAAI,CAAC8b,OAAO,CAACjO,MAAM,GAAG,EAAY,CAAC,CAAC;MACpC7N,MAAI,CAAC8b,OAAO,CAACjO,MAAM,CAACrP,EAAE,GAAGwB,MAAI,CAACvB,IAAI,CAACD,EAAE;MACrCwB,MAAI,CAAC8b,OAAO,CAACjO,MAAM,CAACnP,QAAQ,GAAGsB,MAAI,CAACvB,IAAI,CAACC,QAAQ;MACjDsB,MAAI,CAAC8b,OAAO,CAACjO,MAAM,CAACjP,UAAU,GAAGoB,MAAI,CAACvB,IAAI,CAACG,UAAU;MACrDoB,MAAI,CAAC8b,OAAO,CAACjO,MAAM,CAAClP,SAAS,GAAGqB,MAAI,CAACvB,IAAI,CAACE,SAAS;MACnDqB,MAAI,CAAC8b,OAAO,CAACpN,SAAS,GAAG,IAAI6G,IAAI,EAAE;MACnCvV,MAAI,CAAC8b,OAAO,CAAClT,MAAM,GAAG,EAAY;MAClC5I,MAAI,CAAC8b,OAAO,CAAClT,MAAM,CAACpK,EAAE,GAAGwB,MAAI,CAACgc,MAAM,CAACC,QAAQ,CAACM,QAAQ,CAAC1U,GAAG,CAAC,IAAI,CAAE;MACjE,MAAMzN,oDAAc,CAAC4F,MAAI,CAAC8a,YAAY,CAACtS,OAAO,CAACxI,MAAI,CAAC8b,OAAO,CAAC,CAAC;MAC7D,MAAM9b,MAAI,CAACsc,QAAQ,EAAE;IAAC;EACxB;EACMA,QAAQA,CAAA;IAAA,IAAArc,MAAA;IAAA,OAAAhB,oKAAA;MACZ,MAAMT,EAAE,GAAGyB,MAAI,CAACzB,EAAG;MACnB,IAAI;QACF,MAAMU,QAAQ,SAAS9E,oDAAc,CAAC6F,MAAI,CAAC6a,YAAY,CAACzR,kBAAkB,CAAC7K,EAAE,CAAC,CAAC;QAC/EyB,MAAI,CAAC2I,MAAM,CAACqS,KAAK,GAAG/b,QAAQ,CAACE,IAAK;OACnC,CAAC,OAAOS,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAAC,QAAAc,CAAA;qBA3EU8B,qBAAqB,EAAApI,+DAAA,CAAAwG,uEAAA,GAAAxG,+DAAA,CAAA0G,oEAAA,GAAA1G,+DAAA,CAAAmb,2DAAA,GAAAnb,+DAAA,CAAAmb,mDAAA;EAAA;EAAA,QAAAvU,EAAA;UAArBwB,qBAAqB;IAAAvB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAmb,+BAAAjb,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdlCnH,wDAAA,IAAAqiB,oCAAA,kBAgCM;;;QAhCAriB,wDAAA,SAAAoH,GAAA,CAAAmH,MAAA,CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACImC;;;;;;;;ICQzCvO,4DAAA,SAAI;IACIA,oDAAA,YAAK;IAAAA,0DAAA,EAAK;IACdA,4DAAA,SAAI;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;IACjBA,4DAAA,SAAI;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;IAChBA,4DAAA,SAAI;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;;;;;;IAIpBA,4DAAA,SAAI;IAE8BA,oDAAA,GAAkB;IAAAA,0DAAA,EAAM;IAEtDA,4DAAA,SAAI;IAC6BA,oDAAA,GAAqB;IAAAA,0DAAA,EAAM;IAE5DA,4DAAA,SAAI;IAC4BA,oDAAA,GAA4B;IAAAA,0DAAA,EAAM;IAElEA,4DAAA,UAAI;IACmCA,wDAAA,mBAAAsiB,qEAAA;MAAA,MAAAxO,WAAA,GAAA9T,2DAAA,CAAAuiB,GAAA;MAAA,MAAAC,SAAA,GAAA1O,WAAA,CAAAE,SAAA;MAAA,MAAAtQ,MAAA,GAAA1D,2DAAA;MAAA,OAASA,yDAAA,CAAA0D,MAAA,CAAA+e,UAAA,CAAAD,SAAA,CAAAre,EAAA,CAAqB;IAAA,EAAC;IAC9DnE,uDAAA,aAAyB;IAACA,oDAAA,cAC9B;IAAAA,0DAAA,EAAS;;;;IAXiBA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAwiB,SAAA,CAAApW,KAAA,CAAkB;IAGfpM,uDAAA,GAAqB;IAArBA,+DAAA,CAAAwiB,SAAA,CAAA7B,QAAA,CAAqB;IAGtB3gB,uDAAA,GAA4B;IAA5BA,+DAAA,CAAAwiB,SAAA,CAAAhP,MAAA,CAAAnP,QAAA,CAA4B;;;ADjBtE,MAAO6D,mBAAmB;EAG9BtE,YAAoB2F,MAAc,EAAUkX,YAA0B;IAAlD,KAAAlX,MAAM,GAANA,MAAM;IAAkB,KAAAkX,YAAY,GAAZA,YAAY;IAFxD,KAAAiC,OAAO,GAAa,EAAE;EAEoD,CAAC,CAAC;EAEtEhW,QAAQA,CAAA;IAAA,IAAA/H,KAAA;IAAA,OAAAC,oKAAA;MACZ,MAAMD,KAAI,CAACge,UAAU,EAAE;IAAC;EAC1B;EAEMA,UAAUA,CAAA;IAAA,IAAAld,MAAA;IAAA,OAAAb,oKAAA;MACd,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC0F,MAAI,CAACgb,YAAY,CAACjS,gBAAgB,EAAE,CAAC;MAChFxJ,OAAO,CAACC,GAAG,CAACJ,QAAS,CAAC;IAAC;EAEzB;EAEAyJ,SAASA,CAAA;IACP,IAAI,CAAC/E,MAAM,CAACqT,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EAC1C;EAEA6F,UAAUA,CAACte,EAAU;IACnB,IAAI,CAACsc,YAAY,CAACvS,eAAe,GAAG/J,EAAE;IACtC,IAAI,CAACoF,MAAM,CAACqT,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC6D,YAAY,CAACvS,eAAe,CAAC,CAAC;EACtE;EAAC,QAAA5H,CAAA;qBAtBU4B,mBAAmB,EAAAlI,+DAAA,CAAAwG,mDAAA,GAAAxG,+DAAA,CAAA0G,uEAAA;EAAA;EAAA,QAAAE,EAAA;UAAnBsB,mBAAmB;IAAArB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2b,6BAAAzb,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXhCnH,4DAAA,UAAK;QACDA,uDAAA,cAAyG;QAEzGA,4DAAA,aAA0B;QAClBA,oDAAA,YAAK;QAAAA,0DAAA,EAAK;QACdA,4DAAA,gBAAwD;QAAtBA,wDAAA,mBAAA6iB,qDAAA;UAAA,OAASzb,GAAA,CAAAkH,SAAA,EAAW;QAAA,EAAC;QACnDtO,uDAAA,WAA0B;QAACA,oDAAA,mBAC/B;QAAAA,0DAAA,EAAS;QAGbA,4DAAA,iBAAoD;QAChDA,wDAAA,IAAA8iB,0CAAA,yBAOc,KAAAC,2CAAA;QAmBlB/iB,0DAAA,EAAU;;;QA3BDA,uDAAA,GAAiB;QAAjBA,wDAAA,UAAAoH,GAAA,CAAAsb,OAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLQ;;;;;;;;;AAOhC,MAAO1a,aAAa;EACxBpE,YAAoBE,WAAwB,EAAUmJ,WAAwB;IAA1D,KAAAnJ,WAAW,GAAXA,WAAW;IAAuB,KAAAmJ,WAAW,GAAXA,WAAW;IACjE,KAAA7I,IAAI,GAAW;MAAED,EAAE,EAAE,EAAE;MAAEE,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE;IACtE,KAAAye,WAAW,GAAW;MAAE7e,EAAE,EAAE,EAAE;MAAEE,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE;IAC7E,KAAAL,UAAU,GAAW,CAAC;IACtB,KAAAH,cAAc,GAAW,EAAE;IAC3B,KAAArD,QAAQ,GAAc,EAAE;EAL0D;EAMlFgM,QAAQA,CAAA,GAER;EACM6C,OAAOA,CAAA;IAAA,IAAA5K,KAAA;IAAA,OAAAC,oKAAA;MACX,IAAI;QACF,MAAMC,QAAQ,SAAc9E,oDAAc,CAAC4E,KAAI,CAACb,WAAW,CAACyL,OAAO,EAAE,CAAC;QACtE5K,KAAI,CAACT,UAAU,GAAGW,QAAQ,CAACC,MAAO;QAClC,IAAIH,KAAI,CAACT,UAAU,KAAK,GAAG,EAAE;UAC3BS,KAAI,CAACP,IAAI,GAAGS,QAAQ,CAACE,IAAK;UAC1BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,KAAI,CAACP,IAAK,CAAC;SAClC,MACI;UACH,IAAIO,KAAI,CAACjE,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BP,KAAI,CAACjE,QAAQ,CAACyE,GAAG,EAAE;UACrBR,KAAI,CAACZ,cAAc,GAAG,sCAAsC,GAAGY,KAAI,CAACT,UAAU;UAC9ES,KAAI,CAACjE,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEZ,KAAI,CAACZ;UAAc,CAAE,CAAC;;OAE3F,CAAC,OAAOyB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEMO,UAAUA,CAAA;IAAA,IAAAN,MAAA;IAAA,OAAAb,oKAAA;MACd,IAAI;QACF,MAAMa,MAAI,CAAC8J,OAAO,EAAE;QACpB,IAAI9J,MAAI,CAACrB,IAAI,KAAK,IAAI,EAAE;UACtBqB,MAAI,CAACud,WAAW,CAAC3e,QAAQ,GAAGoB,MAAI,CAACrB,IAAI,CAACC,QAAQ;UAC9CoB,MAAI,CAACud,WAAW,CAAC7e,EAAE,GAAGsB,MAAI,CAACrB,IAAI,CAACD,EAAE;;QAEpC,MAAMU,QAAQ,SAAc9E,oDAAc,CAAC0F,MAAI,CAAC3B,WAAW,CAAC0L,QAAQ,CAAC/J,MAAI,CAACud,WAAY,CAAC,CAAC;QACxFvd,MAAI,CAACvB,UAAU,GAAGW,QAAQ,CAACC,MAAM;QACjC,IAAIW,MAAI,CAACvB,UAAU,KAAK,GAAG,EAAE;UAC3BuB,MAAI,CAACud,WAAW,GAAGne,QAAQ,CAACE,IAAK;UACjCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEQ,MAAI,CAACud,WAAW,CAAC;SACxC,MACI;UACH,IAAIvd,MAAI,CAAC/E,QAAQ,CAACwE,MAAM,GAAG,CAAC,EAC1BO,MAAI,CAAC/E,QAAQ,CAACyE,GAAG,EAAE;UACrBM,MAAI,CAAC1B,cAAc,GAAG,+BAA+B,GAAG0B,MAAI,CAACud,WAAW,CAAC7e,EAAE,GAAG,oBAAoB,GAAGsB,MAAI,CAACvB,UAAU;UACpHuB,MAAI,CAAC/E,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEE,MAAI,CAAC1B;UAAc,CAAE,CAAC;;OAE3F,CAAC,OAAOyB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EACM0J,WAAWA,CAAA;IAAA,IAAAvJ,MAAA;IAAA,OAAAf,oKAAA;MACfe,MAAI,CAAC7B,WAAW,CAACoL,WAAW,CAACvJ,MAAI,CAACqd,WAAW,CAAC,CAAClR,SAAS,CAAC;QACvDK,IAAI,EAAGtN,QAA2C,IAAI;UACpDc,MAAI,CAACzB,UAAU,GAAGW,QAAQ,CAACC,MAAM;UACjCa,MAAI,CAACqd,WAAW,GAAGne,QAAQ,CAACE,IAAI;UAChCC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGgN,IAAI,CAACe,SAAS,CAACrN,MAAI,CAACqd,WAAW,CAAC,CAAC;UACxDhe,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGU,MAAI,CAACzB,UAAU,CAAC;QAChD,CAAC;QAAEsB,KAAK,EAAGA,KAA0B,IAAI;UACvCG,MAAI,CAACzB,UAAU,GAAGsB,KAAK,CAACV,MAAM;UAC9BE,OAAO,CAACQ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1CR,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGU,MAAI,CAACzB,UAAU,CAAC;UAC9CyB,MAAI,CAAC5B,cAAc,GAAG,+BAA+B,GAAG4B,MAAI,CAACqd,WAAW,CAAC7e,EAAE,GAAG,oBAAoB,GAAGwB,MAAI,CAACzB,UAAU;UACpHyB,MAAI,CAACjF,QAAQ,CAACyE,GAAG,EAAE;UACnBQ,MAAI,CAACjF,QAAQ,CAAC0E,IAAI,CAAC;YAAEC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAEI,MAAI,CAAC5B;UAAc,CAAE,CAAC;QAC1F;OACD,CAAC;IAAC;EACL;EAAC,QAAAuC,CAAA;qBApEU0B,aAAa,EAAAhI,+DAAA,CAAAwG,oEAAA,GAAAxG,+DAAA,CAAA0G,qEAAA;EAAA;EAAA,QAAAE,EAAA;UAAboB,aAAa;IAAAnB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgc,uBAAA9b,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ1BnH,4DAAA,gBAAmC;QAEnBA,wDAAA,yBAAAkjB,yDAAA9iB,MAAA;UAAA,OAAAgH,GAAA,CAAA1G,QAAA,GAAAN,MAAA;QAAA,EAAoB;QAACJ,0DAAA,EAAa;QAE9CA,4DAAA,aAAuC;QAGRA,oDAAA,qBAAc;QAAAA,0DAAA,EAAQ;QAC7CA,4DAAA,eAC4C;QADVA,wDAAA,2BAAAmjB,sDAAA/iB,MAAA;UAAA,OAAAgH,GAAA,CAAA4b,WAAA,CAAA1e,SAAA,GAAAlE,MAAA;QAAA,EAAmC;QAArEJ,0DAAA,EAC4C;QAIhDA,4DAAA,aAA8B;QACFA,oDAAA,wBAAiB;QAAAA,0DAAA,EAAQ;QACjDA,4DAAA,gBACmD;QADhBA,wDAAA,2BAAAojB,uDAAAhjB,MAAA;UAAA,OAAAgH,GAAA,CAAA4b,WAAA,CAAAze,UAAA,GAAAnE,MAAA;QAAA,EAAoC;QAAvEJ,0DAAA,EACmD;QAIvDA,4DAAA,cAA8B;QAC6CA,wDAAA,mBAAAqjB,gDAAA;UAAA,OAASjc,GAAA,CAAArB,UAAA,EAAY;QAAA,EAAC;QAAC/F,0DAAA,EAAS;;;QAnBnGA,uDAAA,EAAoB;QAApBA,wDAAA,UAAAoH,GAAA,CAAA1G,QAAA,CAAoB;QAMUV,uDAAA,GAAmC;QAAnCA,wDAAA,YAAAoH,GAAA,CAAA4b,WAAA,CAAA1e,SAAA,CAAmC;QAOlCtE,uDAAA,GAAoC;QAApCA,wDAAA,YAAAoH,GAAA,CAAA4b,WAAA,CAAAze,UAAA,CAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb/C;AACE;;;;;;;AAQhC,MAAO0D,kBAAkB;EAQ7BrE,YAAoBuJ,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPxB,KAAAqM,GAAG,GAAG,EAAE;IAER,KAAA+J,KAAK,GAAmB,CACtB;MAAEC,IAAI,EAAE,OAAO;MAAE/e,KAAK,EAAE;IAAO,CAAE,EACjC;MAAE+e,IAAI,EAAE,OAAO;MAAE/e,KAAK,EAAE;IAAO,CAAE,CAClC;EAEuC;EAElCgf,QAAQA,CAAA;IAAA,IAAA9e,KAAA;IAAA,OAAAC,oKAAA;MACZ,IAAID,KAAI,CAAC6U,GAAG,IAAI7U,KAAI,CAAC+e,YAAY,EAAE;QACjC,MAAM3e,IAAI,GAAG;UAAEyU,GAAG,EAAE7U,KAAI,CAAC6U,GAAG;UAAEmK,IAAI,EAAEhf,KAAI,CAAC+e;QAAY,CAAE;QACvD,IAAI;UACF,MAAM7e,QAAQ,SAAoC9E,oDAAc,CAC9D4E,KAAI,CAACwI,IAAI,CAACiB,IAAI,CAAC,UAAU,GAAGX,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,+BAA+B,EAAE5I,IAAI,EAAE;YAAEsJ,OAAO,EAAE,UAAU;YAAE8B,YAAY,EAAE;UAAa,CAAE,CAAC,CACpJ;UACD,IAAI0I,QAAQ,GAAGhU,QAAQ,CAACuI,OAAO,CAACI,GAAG,CAAC,qBAAqB,CAAC,EAAEqN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACzE,IAAIhW,QAAQ,CAACE,IAAI,IAAI8T,QAAQ,EAAE;YAC7B,IAAI+K,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAChf,QAAQ,CAACE,IAAI,CAAC,EAAE;cAAE4e,IAAI,EAAEhf,KAAI,CAAC+e,YAAY,KAAK,OAAO,GAAG,YAAY,GAAG;YAAW,CAAE,CAAC;YAC1G/e,KAAI,CAACmf,yBAAyB,CAACF,IAAI,EAAE/K,QAAQ,CAAC;;SAEjD,CAAC,OAAOrT,KAAK,EAAE;UACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;;OAEvB,MAAM;QACLue,KAAK,CAAC,uCAAuC,CAAC;;IAC/C;EACH;EAEQD,yBAAyBA,CAACF,IAAU,EAAE/K,QAAgB;IAC5DyK,kDAAM,CAACM,IAAI,EAAE/K,QAAQ,CAAC;EACxB;EAAC,QAAAvS,CAAA;qBAhCU2B,kBAAkB,EAAAjI,+DAAA,CAAAwG,4DAAA;EAAA;EAAA,QAAAI,EAAA;UAAlBqB,kBAAkB;IAAApB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA+c,4BAAA7c,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/BnH,4DAAA,aAA4B;QAGiBA,uDAAA,WAA2B;QAAAA,0DAAA,EAAO;QACnEA,4DAAA,eAC8B;QADdA,wDAAA,2BAAAikB,2DAAA7jB,MAAA;UAAA,OAAAgH,GAAA,CAAAoS,GAAA,GAAApZ,MAAA;QAAA,EAAiB;QAAjCJ,0DAAA,EAC8B;QAGtCA,4DAAA,aAAsB;QAEmBA,uDAAA,WAA0B;QAAAA,0DAAA,EAAO;QAClEA,4DAAA,qBAAgG;QAAlEA,wDAAA,2BAAAkkB,iEAAA9jB,MAAA;UAAA,OAAAgH,GAAA,CAAAsc,YAAA,GAAAtjB,MAAA;QAAA,EAA0B;QACxDJ,0DAAA,EAAa;QAGrBA,4DAAA,cAAsB;QACmDA,wDAAA,mBAAAmkB,qDAAA;UAAA,OAAS/c,GAAA,CAAAqc,QAAA,EAAU;QAAA,EAAC;QACtCzjB,0DAAA,EAAS;;;QAbxCA,uDAAA,GAAiB;QAAjBA,wDAAA,YAAAoH,GAAA,CAAAoS,GAAA,CAAiB;QAOrBxZ,uDAAA,GAAiB;QAAjBA,wDAAA,YAAAoH,GAAA,CAAAmc,KAAA,CAAiB,YAAAnc,GAAA,CAAAsc,YAAA;;;;;;;;;;;;;;;;;;;;ACTI;AAG7CU,sEAAA,EAAwB,CAACE,eAAe,CAAC5Y,sDAAS,CAAC,CAChD6Y,KAAK,CAAClK,GAAG,IAAIrV,OAAO,CAACQ,KAAK,CAAC6U,GAAG,CAAC,CAAC","sources":["./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/art/art.component.ts","./src/app/art/art.component.html","./src/app/auth.guard.ts","./src/app/common/service/auth.service.ts","./src/app/common/service/forum.service.ts","./src/app/common/service/userservice.ts","./src/app/common/util/util.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/chat.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shop/product/product.service.ts","./src/app/shop/shop.component.ts","./src/app/shop/shop.component.html","./src/app/thread-create/thread-create.component.ts","./src/app/thread-create/thread-create.component.html","./src/app/thread-detail/thread-detail.component.ts","./src/app/thread-detail/thread-detail.component.html","./src/app/thread-list/thread-list.component.ts","./src/app/thread-list/thread-list.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/youtube-dl/youtube-dl.component.ts","./src/app/youtube-dl/youtube-dl.component.html","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ProductService } from '../shop/product/product.service';\r\nimport { Message } from 'primeng/api';\r\nimport { UserService } from '../common/service/userservice';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent {\r\n  errorMsgDetail: string = \"\";\r\n  bFindClicked: boolean = false;\r\n  bCreateClicked: boolean = false;\r\n  errorMsg: Message[] = [];\r\n  statusCode: number = 0;\r\n  product: any = { id: \"\", productname: \"\", price: 0, image: \"\", inventorystatus: \"\", shoplink: \"\" };\r\n  user: any = { id: \"\", username: \"\", statusmsg: \"\", profileimg: \"\" };\r\n\r\n  inventoryStatusOptions = [\r\n    { label: 'In Stock', value: 'INSTOCK' },\r\n    { label: 'Low Stock', value: 'LOWSTOCK' },\r\n    { label: 'Out of Stock', value: 'OUTOFSTOCK' }\r\n  ];\r\n  constructor(private productService: ProductService, private userService: UserService) { }\r\n\r\n  get buttonLabel(): string {\r\n    return `Update: ${this.product.productname}`;\r\n  }\r\n\r\n  async getProductByName() {\r\n    this.bFindClicked = true;\r\n    this.bCreateClicked = false;\r\n    try {\r\n      const response = await firstValueFrom(this.productService.getProductByName(this.product.productname));\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.product = response.body!;\r\n        console.log(\"product: \", this.product);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error getting product with name: \" + this.product.productname + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n      console.log(\"status: \", this.statusCode);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  onCreateButtonPressed() {\r\n    this.bCreateClicked = true;\r\n    this.bFindClicked = false;\r\n  }\r\n  async createProduct() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.productService.addProduct(this.product!));\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.product = response.body!;\r\n        console.log(\"product: \", this.product!);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error adding product with name: \" + this.product.productname + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n\r\n      }\r\n      console.log(\"status code:\", this.statusCode);\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async updateProduct() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.productService.updateProduct(this.product!));\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.product = response.body!;\r\n        console.log(\"product: \", this.product!);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error updating product with id: \" + this.product.id + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async addProduct() {\r\n    try {\r\n      const response: any = firstValueFrom(this.productService.addProduct(this.product!));\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.product = response.body!;\r\n        console.log(\"product: \", this.product!);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error adding product with name: \" + this.product.productname + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async deleteUser() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.userService.deleteUser(this.user.id!));\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  updateUser() {\r\n    try {\r\n      const response: any = firstValueFrom(this.userService.updateUser(this.user!));\r\n      this.statusCode = response.status;\r\n      if (this.statusCode === 200) {\r\n        this.user = response.body!;\r\n        console.log(\"user: \", this.user!);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error updating user with id: \" + this.user.id + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n      console.log(\"status: \", this.statusCode!);\r\n    } catch (error) {\r\n      console.error(error);\r\n\r\n    }\r\n  }\r\n\r\n  async banUser() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.userService.banUser(this.user!));\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.user = response.body!;\r\n        console.log(\"user: \", this.user!);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error banning user with id: \" + this.user.id + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      } console.log(\"status: \", this.statusCode!);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async unbanUser() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.userService.unbanUser(this.user!));\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.user = response.body!;\r\n        console.log(\"user: \", this.user!);\r\n      } else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error adding product with name: \" + this.product.productname + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n      console.log(\"status: \", this.statusCode!);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async deleteProduct() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.productService.deleteProduct(this.product.id!));\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n\r\n","<p-messages *ngIf=\"statusCode > 0 && statusCode !== 200\" [(value)]=\"errorMsg\" [enableService]=\"false\"\r\n  [closable]=\"false\"></p-messages>\r\n\r\n<div class=\"p-fluid\">\r\n  <div class=\"p-field\">\r\n    <form (ngSubmit)=\"getProductByName()\">\r\n      <div class=\"p-inputgroup\">\r\n        <input [(ngModel)]=\"product.productname\" name=\"productname\" pInputText placeholder=\"Enter product name\" />\r\n        <button pButton label=\"Find Product\" type=\"submit\" icon=\"pi pi-search\" styleClass=\"p-button-primary\"></button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div *ngIf=\"product.id && bFindClicked && bCreateClicked===false\">\r\n    <form (ngSubmit)=\"updateProduct()\">\r\n      <div class=\"p-field\">\r\n        <label for=\"productname\" class=\"p-label\">Name:</label>\r\n        <input id=\"productname\" [(ngModel)]=\"product.productname\" name=\"productname\" pInputText />\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"price\" class=\"p-label\">Price:</label>\r\n        <p-inputNumber id=\"price\" [(ngModel)]=\"product.price\" name=\"price\" mode=\"currency\" currency=\"USD\"\r\n          locale=\"en-US\"></p-inputNumber>\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"image\" class=\"p-label\">Image URL:</label>\r\n        <input id=\"image\" [(ngModel)]=\"product.image\" name=\"image\" pInputText />\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"inventorystatus\" class=\"p-label\">Inventory Status:</label>\r\n        <p-dropdown id=\"inventorystatus\" [(ngModel)]=\"product.inventorystatus\" name=\"inventorystatus\"\r\n          [options]=\"inventoryStatusOptions\" optionLabel=\"label\" optionValue=\"value\"></p-dropdown>\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"shoplink\" class=\"p-label\">Shop Link:</label>\r\n        <input id=\"shoplink\" [(ngModel)]=\"product.shoplink\" name=\"shoplink\" pInputText />\r\n      </div>\r\n      <button pButton [label]=\"buttonLabel\" type=\"submit\" icon=\"pi pi-save\" styleClass=\"p-button-success\"></button>\r\n    </form>\r\n  </div>\r\n\r\n  <div *ngIf=\"bCreateClicked === false && bFindClicked === false\" class=\"p-field\">\r\n    <button pButton label=\"Create Product\" (click)=\"onCreateButtonPressed()\" icon=\"pi pi-plus\"\r\n      styleClass=\"p-button-secondary\"></button>\r\n  </div>\r\n\r\n  <div *ngIf=\"bCreateClicked && bFindClicked === false\">\r\n    <form (ngSubmit)=\"createProduct()\">\r\n      <div class=\"p-field\">\r\n        <label for=\"productname\" class=\"p-label\">Name:</label>\r\n        <input id=\"productname\" [(ngModel)]=\"product.productname\" name=\"productname\" pInputText />\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"price\" class=\"p-label\">Price:</label>\r\n        <p-inputNumber id=\"price\" [(ngModel)]=\"product.price\" name=\"price\" mode=\"currency\" currency=\"USD\"\r\n          locale=\"en-US\"></p-inputNumber>\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"image\" class=\"p-label\">Image URL:</label>\r\n        <input id=\"image\" [(ngModel)]=\"product.image\" name=\"image\" pInputText />\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"inventorystatus\" class=\"p-label\">Inventory Status:</label>\r\n        <p-dropdown id=\"inventorystatus\" [(ngModel)]=\"product.inventorystatus\" name=\"inventorystatus\"\r\n          [options]=\"inventoryStatusOptions\" optionLabel=\"label\" optionValue=\"value\"></p-dropdown>\r\n      </div>\r\n      <div class=\"p-field\">\r\n        <label for=\"shoplink\" class=\"p-label\">Shop Link:</label>\r\n        <input id=\"shoplink\" [(ngModel)]=\"product.shoplink\" name=\"shoplink\" pInputText />\r\n      </div>\r\n      <button pButton label=\"Create Product\" type=\"submit\" icon=\"pi pi-plus\" styleClass=\"p-button-success\"></button>\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ArtComponent } from './art/art.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { YoutubeDLComponent } from './youtube-dl/youtube-dl.component';\r\nimport { ThreadListComponent } from './thread-list/thread-list.component';\r\nimport { ThreadCreateComponent } from './thread-create/thread-create.component';\r\nimport { ThreadDetailComponent } from './thread-detail/thread-detail.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { authGuard } from './auth.guard';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'home', component: HomeComponent, canActivate: [authGuard] },\r\n  { path: 'art', component: ArtComponent, canActivate: [authGuard] },\r\n  { path: 'shop', component: ShopComponent, canActivate: [authGuard] },\r\n  { path: 'user', component: UserComponent, canActivate: [authGuard] },\r\n  { path: 'admin', component: AdminComponent, canActivate: [authGuard] },\r\n  { path: 'youtube-dl', component: YoutubeDLComponent, canActivate: [authGuard] },\r\n  { path: 'threads', component: ThreadListComponent, canActivate: [authGuard] },\r\n  { path: 'create-thread', component: ThreadCreateComponent, canActivate: [authGuard] },\r\n  { path: 'thread/:id', component: ThreadDetailComponent, canActivate: [authGuard] },\r\n  { path: 'header', component: HeaderComponent, canActivate: [authGuard] },\r\n  { path: \"**\", redirectTo: \"login\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { AuthService } from './common/service/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(public auth: AuthService, private router: Router) { }\r\n  userAuthenticated(): boolean {\r\n    return this.auth.loggedIn();\r\n  }\r\n}\r\n","@if(this.userAuthenticated()){\r\n<app-header></app-header>\r\n}\r\n<div class=\"main-content\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ArtComponent } from './art/art.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { ImageModule } from 'primeng/image';\r\nimport { GalleriaModule } from 'primeng/galleria';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CarouselModule } from 'primeng/carousel';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { UserComponent } from './user/user.component';\r\nimport { CardModule } from 'primeng/card';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { YoutubeDLComponent } from './youtube-dl/youtube-dl.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ThreadListComponent } from './thread-list/thread-list.component';\r\nimport { ThreadDetailComponent } from './thread-detail/thread-detail.component';\r\nimport { ThreadCreateComponent } from './thread-create/thread-create.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { RatingModule } from 'primeng/rating';\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ArtComponent,\r\n    HomeComponent,\r\n    ShopComponent,\r\n    AdminComponent,\r\n    UserComponent,\r\n    YoutubeDLComponent,\r\n    ThreadListComponent,\r\n    ThreadDetailComponent,\r\n    ThreadCreateComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ToastModule,\r\n    ImageModule,\r\n    MenuModule, RatingModule,\r\n    GalleriaModule,\r\n    DialogModule,\r\n    ButtonModule,\r\n    CarouselModule,\r\n    TagModule, MessageModule,\r\n    InputTextModule,\r\n    InputTextareaModule,\r\n    MessagesModule,\r\n    CardModule,\r\n    FormsModule,\r\n    DropdownModule,\r\n    BrowserAnimationsModule,\r\n    FileUploadModule,\r\n    TableModule,\r\n    ToolbarModule,\r\n    HttpClientModule, ReactiveFormsModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['https://localhost:8443'],  // replace with your API domain\r\n      }\r\n    })\r\n  ],\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-art',\r\n  templateUrl: './art.component.html',\r\n  styleUrls: ['./art.component.css']\r\n})\r\nexport class ArtComponent {\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  images: any[] = [{\r\n    previewImageSrc:\r\n      '../../assets/1.jpg',\r\n    thumbnailImageSrc:\r\n      '../../assets/1.jpg',\r\n    alt: 'Description for Image 1',\r\n    title: '1'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/2.jpg',\r\n    thumbnailImageSrc: '../../assets/2.jpg',\r\n    alt: 'Description for Image 2',\r\n    title: '2'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/3.jpg',\r\n    thumbnailImageSrc: '../../assets/3.jpg',\r\n    alt: 'Description for Image 3',\r\n    title: '3'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/4.jpg',\r\n    thumbnailImageSrc: '../../assets/4.jpg',\r\n    alt: 'Description for Image 4',\r\n    title: '4'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/5.jpg',\r\n    thumbnailImageSrc: '../../assets/5.jpg',\r\n    alt: 'Description for Image 5',\r\n    title: '5'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/6.jpg',\r\n    thumbnailImageSrc: '../../assets/6.jpg',\r\n    alt: 'Description for Image 6',\r\n    title: '6'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/7.jpg',\r\n    thumbnailImageSrc: '../../assets/7.jpg',\r\n    alt: 'Description for Image 7',\r\n    title: '7'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/8.jpg',\r\n    thumbnailImageSrc: '../../assets/8.jpg',\r\n    alt: 'Description for Image 8',\r\n    title: '8'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/9.jpg',\r\n    thumbnailImageSrc: '../../assets/9.jpg',\r\n    alt: 'Description for Image 9',\r\n    title: '9'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/10.jpg',\r\n    thumbnailImageSrc: '../../assets/10.jpg',\r\n    alt: 'Description for Image 10',\r\n    title: '10'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/11.jpg',\r\n    thumbnailImageSrc: '../../assets/11.jpg',\r\n    alt: 'Description for Image 11',\r\n    title: '11'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/12.jpg',\r\n    thumbnailImageSrc: '../../assets/12.jpg',\r\n    alt: 'Description for Image 12',\r\n    title: '12'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/13.jpg',\r\n    thumbnailImageSrc: '../../assets/13.jpg',\r\n    alt: 'Description for Image 13',\r\n    title: '13'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/14.jpg',\r\n    thumbnailImageSrc: '../../assets/14.jpg',\r\n    alt: 'Description for Image 14',\r\n    title: '14'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/15.jpg',\r\n    thumbnailImageSrc: '../../assets/15.jpg',\r\n    alt: 'Description for Image 15',\r\n    title: '15'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/16.jpg',\r\n    thumbnailImageSrc: '../../assets/16.jpg',\r\n    alt: 'Description for Image 16',\r\n    title: '16'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/17.jpg',\r\n    thumbnailImageSrc: '../../assets/17.jpg',\r\n    alt: 'Description for Image 17',\r\n    title: '17'\r\n  },\r\n  {\r\n    previewImageSrc: '../../assets/18.jpg',\r\n    thumbnailImageSrc: '../../assets/18.jpg',\r\n    alt: 'Description for Image 18',\r\n    title: '18'\r\n  },\r\n  ]\r\n};\r\n\r\n","<div class=\"artPage\">\r\n    <h2 class=\"pageTitle\">Art Gallery</h2>\r\n\r\n    <p-galleria [value]=\"images\" [numVisible]=\"1\" [showThumbnails]=\"true\" [showItemNavigators]=\"false\"\r\n        [showItemNavigatorsOnHover]=\"false\" [autoPlay]=\"false\" [transitionInterval]=\"3000\">\r\n        <ng-template pTemplate=\"item\" let-item>\r\n            <div class=\"artItem\">\r\n                <img class=\"artImg\" [src]=\"item.itemImageSrc\" class=\"artImgs\" [alt]=\"item.alt\" />\r\n                <div class=\"artCaption\">\r\n                    <h3>{{ item.title }}</h3>\r\n                    <p>{{ item.description }}</p>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"thumbnail\" let-item>\r\n            <div class=\"grid grid-nogutter justify-content-center\">\r\n                <img [src]=\"item.thumbnailImageSrc\" [alt]=\"item.alt\" />\r\n            </div>\r\n        </ng-template>\r\n    </p-galleria>\r\n</div>","import { inject } from '@angular/core';\nimport { CanActivateFn } from '@angular/router';\n\nimport { AuthService } from './common/service/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const authService = inject(AuthService);\n\n  if (authService.loggedIn()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  router: any\r\n  headers = new HttpHeaders({ /* other headers if needed */ });\r\n  options = { headers: this.headers, withCredentials: true };\r\n  constructor(private http: HttpClient, private route: Router) {\r\n    this.router = route;\r\n  }\r\n  getUserRole(): Observable<any> {\r\n    return this.http.get<number>(`https://${window.location.hostname}:8443/api/user/getUserRole`, { withCredentials: true });\r\n  }\r\n  loggedIn() {\r\n    return (localStorage.getItem('token') ?? '').length > 0;\r\n  }\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Post, Thread } from 'src/app/home/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForumService {\n\n  constructor(private http: HttpClient) { }\n  currentThreadId: string = \"\";\n  addPost(post: Post): Observable<any> {\n    return this.http.post<Post>(`https://${window.location.hostname}:8443/api/forum/addPost`, post, { observe: 'response', withCredentials: true });\n  }\n  addThread(thread: Thread): Observable<any> {\n    return this.http.post<Thread>(`https://${window.location.hostname}:8443/api/forum/addThread`, thread, { observe: 'response', withCredentials: true });\n  }\n\n  fetchThreadsList(): Observable<any> {\n    return this.http.get<any>(`https://${window.location.hostname}:8443/api/forum/getThreads`, { observe: 'response', withCredentials: true });\n  }\n  isOwnerOrModerator(senderId: string): Observable<any> {\n    return this.http.get<boolean>(`https://${window.location.hostname}:8443/api/forum/isOwnerOrModerator/${senderId}`, { observe: 'response', withCredentials: true });\n  }\n\n  getThreadById(id: string): Observable<any> {\n    return this.http.get<any>(`https://${window.location.hostname}:8443/api/forum/getThreadById/${id}`, { observe: 'response', withCredentials: true });\n  }\n  addProfileComment(comment: any): Observable<any> {\n    return this.http.post<any>(`https://${window.location.hostname}:8443/api/forum/addProfileComment`, comment, { observe: 'response', withCredentials: true });\n  }\n  addCredits(credits: any): Observable<any> {\n    return this.http.post<any>(`https://${window.location.hostname}:8443/api/forum/addCredits`, credits, { observe: 'response', withCredentials: true });\n  }\n  getPostsByThreadId(id: string): Observable<any> {\n    return this.http.get<any>(`https://${window.location.hostname}:8443/api/forum/getPostsByThreadId/${id}`, { observe: 'response', withCredentials: true });\n  }\n}\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HLUser } from 'src/app/home/hluser';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    headers = new HttpHeaders({ /* other headers if needed */ });\r\n    options = { headers: this.headers, withCredentials: true };\r\n    constructor(private http: HttpClient) { }\r\n\r\n    isAuthenticated(): Observable<any> {\r\n        return this.http.get<boolean>(\"https://\" + window.location.hostname + \":8443/\" + \"api/user/isAuthenticated\", { observe: 'response', withCredentials: true });\r\n    }\r\n\r\n    changeEmail(hlUser: HLUser): Observable<any> {\r\n        return this.http.put(`https://${window.location.hostname}:8443/api/user/changeEmail`, hlUser, this.options);\r\n    }\r\n    getUserById(userId: string): Observable<any> {\r\n        return this.http.get<HLUser>(`https://${window.location.hostname}:8443/api/user/getUserById/${userId}`, this.options);\r\n    }\r\n    getUser(): Observable<any> {\r\n        return this.http.get<HLUser>(\"https://\" + window.location.hostname + \":8443/\" + \"api/user/getUserByUsername\", { observe: 'response', withCredentials: true }\r\n        );\r\n    }\r\n    editUser(user: HLUser): Observable<any> {\r\n        return this.http.post<HLUser>(\"https://\" + window.location.hostname + \":8443/\" + \"api/user/editUser\", user, { observe: 'response', withCredentials: true }\r\n        );\r\n    }\r\n    addArt(art: any): Observable<any> {\r\n        return this.http.post<any>(\"https://\" + window.location.hostname + \":8443/\" + \"api/art/addArt\", art, { observe: 'response', withCredentials: true }\r\n        );\r\n    }\r\n    uploadArt(file: File, artName: string, artAuthor: string): Observable<HttpResponse<string>> {\r\n        const apiUrl = `https://${window.location.hostname}:8443/api/art/uploadArt`;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('artName', artName);\r\n        formData.append('artAuthor', artAuthor);\r\n\r\n        return this.http.post<string>(apiUrl, formData, {\r\n            observe: 'response',\r\n            responseType: 'text' as 'json',\r\n            withCredentials: true,\r\n        });\r\n    }\r\n    deleteUser(userId: number): Observable<any> {\r\n        return this.http.delete(`https://${window.location.hostname}:8443/api/user/deleteUser/${userId}`, this.options);\r\n    }\r\n\r\n    updateUser(user: HLUser): Observable<any> {\r\n        return this.http.put(`https://${window.location.hostname}:8443/api/user/updateUser`, user, this.options);\r\n    }\r\n\r\n    banUser(userId: number): Observable<any> {\r\n        return this.http.put(`https://${window.location.hostname}:8443/api/user/banUser/${userId}`, null, this.options);\r\n    }\r\n\r\n    unbanUser(userId: number): Observable<any> {\r\n        return this.http.put(`https://${window.location.hostname}:8443/api/user/unbanUser/${userId}`, null, this.options);\r\n    }\r\n\r\n    changeRole(userId: number, newRole: number): Observable<any> {\r\n        return this.http.put(`https://${window.location.hostname}:8443/api/user/changeRole/${userId}/${newRole}`, null, this.options);\r\n    }\r\n\r\n}","export class Util {\r\n    public static setDelay(i: number) {\r\n        setTimeout(function () {\r\n            console.log(i);\r\n        }, i * 1000);\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/api';\nimport { AuthService } from '../common/service/auth.service';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  title = 'HAPPYLONELY';\n  items: MenuItem[] = [\n    { icon: 'pi pi-home', routerLink: 'home' },\n    { icon: 'pi pi-comments', routerLink: 'threads' },\n    { icon: 'pi pi-shopping-bag', routerLink: 'shop' },\n    { icon: 'pi pi-pencil', routerLink: 'art' },\n    { icon: 'pi pi-user', routerLink: 'user' },\n    { icon: 'pi pi-youtube', routerLink: 'youtube-dl' }\n  ];\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  async ngOnInit() {\n    await this.getUserRole();\n  }\n\n  async getUserRole() {\n    try {\n      const response: any = await firstValueFrom(this.authService.getUserRole());\n      console.log(response);\n      if (response >= 5) {\n        this.items = [\n          { icon: 'pi pi-home', routerLink: 'home' },\n          { icon: 'pi pi-comments', routerLink: 'threads' },\n          { icon: 'pi pi-shopping-bag', routerLink: 'shop' },\n          { icon: 'pi pi-pencil', routerLink: 'art' },\n          { icon: 'pi pi-user', routerLink: 'user' },\n          { icon: 'pi pi-youtube', routerLink: 'youtube-dl' },\n          { icon: 'pi pi-lock', routerLink: 'admin' }\n        ];\n      }\n    }\n    catch (error) {\n      console.error(error);\n    }\n\n  }\n}","<div class=\"header-container\">\n    <p-menu [model]=\"items\" [style]=\"{'width':'100%', 'background-color': 'transparent', 'border': 'none'}\"></p-menu>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Message } from './message';\r\nimport { HLUser } from './hluser';\r\nimport * as SockJS from 'sockjs-client';\r\nimport { Client, Stomp } from '@stomp/stompjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n    private stompClient: Client | undefined;\r\n    private messageSubject = new Subject<Message>();\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.initializeWebSocketConnection();\r\n    }\r\n\r\n    initializeWebSocketConnection(): void {\r\n        const token = localStorage.getItem('token'); // get the JWT token from local storage\r\n        if (token != null) {\r\n            this.stompClient = new Client({\r\n                webSocketFactory: () => new SockJS(`https://${window.location.hostname}:8443/websocket?token=${token}`),\r\n                reconnectDelay: 5000,\r\n                onConnect: (receipt) => {\r\n                    console.log('Connected:', receipt);\r\n                    this.stompClient?.subscribe('/topic/messages', (messageOutput: { body: string; }) => {\r\n                        const message: Message = JSON.parse(messageOutput.body);\r\n                        if (message) {\r\n                            this.messageSubject.next(message);\r\n                        }\r\n                    });\r\n                },\r\n                onStompError: (error) => {\r\n                    console.error('STOMP Error:', error);\r\n                }\r\n            });\r\n\r\n            this.stompClient.activate();\r\n        }\r\n    }\r\n\r\n    userHasChatGptApiKey(): Observable<boolean> {\r\n        return this.http.get<boolean>(`https://${window.location.hostname}:8443/api/chat/userHasChatGptApiKey`, { withCredentials: true });\r\n    }\r\n\r\n    useChatGPT(request: { [key: string]: string }): Observable<string> {\r\n        return this.http.post<string>(`https://${window.location.hostname}:8443/api/chat/useChatGPT`, request, { withCredentials: true });\r\n    }\r\n    getNewMessageObservable(): Observable<Message> {\r\n        return this.messageSubject.asObservable();\r\n    }\r\n\r\n    // Fetch all Messages\r\n    getMessages(): Observable<Message[]> {\r\n        return this.http.get<Message[]>(`https://${window.location.hostname}:8443/api/chat/messages`, { withCredentials: true });\r\n    }\r\n\r\n    // Send a new Message\r\n    sendMessage(message: Message): void {\r\n        if (this.stompClient && this.stompClient.connected) {\r\n            this.stompClient.publish({\r\n                destination: \"/app/chat/send\",\r\n                body: JSON.stringify(message)\r\n            });\r\n        }\r\n    }\r\n\r\n    getUserDetails(): Observable<HLUser> {\r\n        return this.http.get<HLUser>(`https://${window.location.hostname}:8443/api/user/getUserByUsername`, { withCredentials: true });\r\n    }\r\n}","import { Component, OnInit, ElementRef, ViewChild, AfterViewChecked, ChangeDetectorRef, APP_ID } from '@angular/core';\r\nimport { ChatService } from './chat.service';\r\nimport { Message } from './message';\r\nimport { HLUser } from './hluser';\r\nimport { UserService } from '../common/service/userservice';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport hljs from 'highlight.js';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      state('in', style({ opacity: 1 })),\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate(600)\r\n      ]),\r\n      transition(':leave', [\r\n        animate(600, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewChecked {\r\n  Messages: Message[] = [];\r\n  newMessageContent: string = '';\r\n  @ViewChild('messagesContainer') private messagesContainer!: ElementRef;\r\n  selectedUser: HLUser | null = null;\r\n  showUserProfileDialog: boolean = false;\r\n  backendBaseUrl: string;\r\n  isUserHaveChatGptApiKey: boolean = false;\r\n\r\n  showUserProfile(user: HLUser): void {\r\n    this.selectedUser = user;\r\n    this.showUserProfileDialog = true;\r\n  }\r\n  closeUserProfile(): void {\r\n    this.selectedUser = null;\r\n    this.showUserProfileDialog = false;\r\n  }\r\n  hluser: HLUser = {\r\n    id: \"\",\r\n    username: \"\",\r\n    statusmsg: \"\",\r\n    profileimg: \"\",\r\n    gptapikey: \"\"\r\n  };\r\n\r\n  constructor(private chatService: ChatService, private user: UserService, private primengConfig: PrimeNGConfig, private cdr: ChangeDetectorRef // Inject ChangeDetectorRef\r\n  ) {\r\n    const protocol = window.location.protocol;\r\n    const host = window.location.hostname;\r\n    const port = '8443'; // Assuming your Spring Boot backend runs on port 8080. Adjust if different.\r\n    this.backendBaseUrl = `${protocol}//${host}:${port}`;\r\n    this.primengConfig.ripple = true; // For ripple effect on buttons\r\n    // Subscribe to the message observable. WebSocket initialization is done in the service's constructor.\r\n    this.chatService.getNewMessageObservable().subscribe((message: Message) => {\r\n      // Ensure that you're not adding duplicate messages\r\n      if (!this.Messages.some(m => m.date_sent === message.date_sent && m.content === message.content)) {\r\n        this.Messages.push(message);\r\n      }\r\n    });\r\n  }\r\n  isDialogOpen: boolean = false; // To manage the open/close state of the dialog\r\n  isDialogMinimized: boolean = false; // To manage the minimized state of the dialog\r\n\r\n  openDialog() {\r\n    this.isDialogOpen = true;\r\n    this.isDialogMinimized = false;\r\n  }\r\n\r\n\r\n  minimizeModal(): void {\r\n    this.isDialogOpen = false;\r\n    this.isDialogMinimized = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.isDialogOpen = false;\r\n    this.isDialogMinimized = false;\r\n  }\r\n  async ngOnInit(): Promise<void> {\r\n    await this.getUsername();  // Fetch the username once on initialization\r\n    hljs.highlightAll();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.scrollToBottom();\r\n  }\r\n  artName: string = \"\";\r\n  artAuthor: string = \"\";\r\n  selectedFile: File | null = null;\r\n  selectedFileBase64: string | null = null;\r\n  showUploadDialog = false;\r\n  formatMessage(message: string): string {\r\n    const codeBlockRegex = /```(\\w+)\\n([\\s\\S]*?)```/g;\r\n    const boldRegex = /\\*\\*(.*?)\\*\\*/g;\r\n    const headingRegex = /### (.*?)(\\n|$)/g;\r\n    const lineBreakRegex = /\\n/g;\r\n    const orderedListRegex = /(\\d+\\..*?)(\\n|$)/g;\r\n    const unorderedListRegex = /(\\* .*?)(\\n|$)/g;\r\n\r\n    // Replace list items first\r\n    let formattedMessage = message\r\n      .replace(orderedListRegex, '<li>$1</li>')\r\n      .replace(unorderedListRegex, '<li>$1</li>');\r\n\r\n    // Then wrap all consecutive list items in <ol> or <ul> tags\r\n    const orderedListBlockRegex = /((<li>\\d+\\..*?<\\/li>)+)/g;\r\n    const unorderedListBlockRegex = /((<li>\\* .*?<\\/li>)+)/g;\r\n    formattedMessage = formattedMessage\r\n      .replace(orderedListBlockRegex, '<ol>$1</ol>')\r\n      .replace(unorderedListBlockRegex, '<ul>$1</ul>');\r\n\r\n    // Replace other markdown syntax\r\n    return formattedMessage\r\n      .replace(codeBlockRegex, (_match, language, code) => {\r\n        const highlightedCode = hljs.highlight(language, code).value;\r\n        return `<pre><code class=\"hljs ${language}\">${highlightedCode}</code></pre>`;\r\n      })\r\n      .replace(boldRegex, '<strong>$1</strong>')\r\n      .replace(headingRegex, '<h3>$1</h3>')\r\n      .replace(lineBreakRegex, '<br/>');\r\n  }\r\n  onFileSelected(event: any) {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n  convertPathToUrl(artName: string, artAuthor: string): string {\r\n    const filename = `${artName}_${artAuthor}.jpg`;\r\n    const encodedFilename = encodeURIComponent(filename);\r\n    const backendBaseUrl = `${window.location.protocol}//${window.location.hostname}:8443`;\r\n    return `${backendBaseUrl}/artwork/${encodedFilename}`;\r\n  }\r\n  onUploadClicked() {\r\n    if (this.artName && this.artName.trim() !== '' && this.artAuthor && this.artAuthor.trim() !== '' && this.selectedFile) {\r\n      this.user.uploadArt(this.selectedFile, this.artName, this.artAuthor).subscribe(async response => {\r\n        console.log('Received response:', response);\r\n\r\n        if (response.status === 201) {\r\n          console.log('Art added successfully');\r\n          this.isDialogOpen = false; // Close the modal dialog\r\n\r\n          this.cdr.detectChanges(); // Trigger change detection\r\n\r\n          // Rebuild the artImageFilePath into a URL\r\n          const artImageUrl = this.convertPathToUrl(this.artName, this.artAuthor);\r\n          // The newMessageContent now contains the URL of the image\r\n          this.newMessageContent = artImageUrl;\r\n          this.sendMessage();\r\n        } else {\r\n          console.error('Failed to upload art with response status:', response.status);\r\n        }\r\n      }, error => {\r\n        console.error('Error uploading art:', error);\r\n      });\r\n    } else {\r\n      console.warn('Please ensure all fields are filled.');\r\n    }\r\n  }\r\n  isValidImageURL(url: string): boolean {\r\n    const backendBaseUrl = `${window.location.protocol}//${window.location.hostname}:8443`;\r\n    const isArtworkUrl = url.startsWith(`${backendBaseUrl}/artwork/`);\r\n    const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg'];\r\n    const urlExtension = url.slice(url.lastIndexOf('.'));\r\n    const isImageExtension = imageExtensions.includes(urlExtension);\r\n    return isArtworkUrl && isImageExtension;\r\n  }\r\n  private scrollToBottom(): void {\r\n    try {\r\n      this.messagesContainer.nativeElement.scrollTop = this.messagesContainer.nativeElement.scrollHeight;\r\n    } catch (err) { }\r\n  }\r\n\r\n  private getUsername(): Promise<HLUser> {\r\n    return new Promise((resolve, reject) => {\r\n      this.chatService.getUserDetails().subscribe((data: HLUser) => {\r\n        if (data !== null) {\r\n          this.hluser = {\r\n            id: data.id,\r\n            username: data.username,\r\n            statusmsg: data.statusmsg,\r\n            profileimg: data.profileimg,\r\n            gptapikey: data.gptapikey\r\n          };\r\n          console.log(\"final\");\r\n          console.log(\"data: \" + JSON.stringify(data));\r\n          resolve(this.hluser);\r\n        } else {\r\n          reject(\"error\");\r\n        }\r\n      });\r\n    });\r\n  }\r\n  async sendMessage(): Promise<void> {\r\n    if (this.newMessageContent.trim()) {\r\n      if (this.hluser && this.hluser.username) {\r\n        if (this.newMessageContent.replace(\"\\n\", \"\").startsWith('/chatgpt')) {\r\n          let messageMap = new Map<string, string>();\r\n          let toParts = [];\r\n          if (this.newMessageContent.includes('sk-')) {\r\n            toParts = this.newMessageContent.split(' ', 3);\r\n          }\r\n          else {\r\n            toParts = this.newMessageContent.split(' ', 2);\r\n          }\r\n          const parts = toParts;\r\n          if (parts.length === 3) {\r\n            messageMap.set('apiKey', parts[1]);\r\n            messageMap.set('message', this.newMessageContent.split(parts[1] + ' ')[1]);\r\n          } else if (parts.length === 2) {\r\n            messageMap.set('message', this.newMessageContent.split(parts[0] + ' ')[1]);\r\n            if (this.hluser.gptapikey) {\r\n              messageMap.set('apiKey', this.hluser.gptapikey);\r\n            } else {\r\n              throw new Error('You need to provide an API key to use ChatGPT. Use the format /chatgpt your-api-key message');\r\n            }\r\n          } else {\r\n            throw new Error('Invalid command format. Use /chatgpt your-api-key message or /chatgpt message');\r\n          }\r\n\r\n          const request = {\r\n            'message': messageMap.get('message')!,\r\n            'apiKey': messageMap.get('apiKey')!\r\n          };\r\n\r\n          this.chatService.useChatGPT(request).subscribe({\r\n            next: (response: any) => {\r\n              console.log('ChatGPT response:', response);\r\n              this.newMessageContent = response;\r\n            },\r\n            error: (error: any) => {\r\n              console.error('Error using ChatGPT:', error);\r\n            }\r\n          });\r\n\r\n        } else if (this.isValidImageURL(this.newMessageContent)) {\r\n          const newMessage: Message = {\r\n            content: this.newMessageContent,\r\n            sender: this.hluser,\r\n            date_sent: new Date()\r\n          };\r\n          this.chatService.sendMessage(newMessage);\r\n          console.log(\"newMessage:\", JSON.stringify(newMessage));\r\n        } else {\r\n          const newMessage: Message = {\r\n            content: this.newMessageContent,\r\n            sender: this.hluser,\r\n            date_sent: new Date()\r\n          };\r\n          this.chatService.sendMessage(newMessage);\r\n          console.log(\"newMessage:\", JSON.stringify(newMessage));\r\n        }\r\n        this.newMessageContent = '';\r\n        this.cdr.detectChanges();\r\n      } else {\r\n        console.error(\"User details are not available\");\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n//         this.chatService.useChatGPT(request).subscribe(response => {\r\n//           console.log('ChatGPT response:', response);\r\n//         }, error => {\r\n//           console.error('Error using ChatGPT:', error);\r\n//         });\r\n//       } else {\r\n//         const newMessage: Message = {\r\n//           content: this.newMessageContent,\r\n//           sender: this.hluser,\r\n//           date_sent: new Date()\r\n//         };\r\n//         this.chatService.sendMessage(newMessage);\r\n//         console.log(\"newMessage:\", JSON.stringify(newMessage));\r\n//       }\r\n//       this.newMessageContent = '';  // Reset the newMessageContent\r\n//       this.cdr.detectChanges(); // Trigger change detection\r\n//     } else {\r\n//       console.error(\"User details are not available\");\r\n//     }\r\n//   }\r\n// }\r\n// async sendMessage(): Promise<void> {\r\n//   if (this.newMessageContent.trim()) {\r\n//     if (this.hluser && this.hluser.username) {\r\n//       const newMessage: Message = {\r\n//         content: this.newMessageContent,\r\n//         sender: this.hluser,\r\n//         date_sent: new Date()\r\n//       };\r\n//       this.chatService.sendMessage(newMessage);\r\n//       console.log(\"newMessage:\", JSON.stringify(newMessage));\r\n//       this.newMessageContent = '';  // Reset the newMessageContent\r\n\r\n//       this.cdr.detectChanges(); // Trigger change detection\r\n//     } else {\r\n//       console.error(\"User details are not available\");\r\n//     }\r\n//   }\r\n// }\r\n\r\n// }\r\n// async sendMessage(): Promise<void> \r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\">\r\n<div class=\"main-container\">\r\n    <div #messagesContainer class=\"messages-container\">\r\n        <ng-container>\r\n            <div class=\"messages-wrapper\">\r\n                <div *ngFor=\"let message of Messages\" class=\"message-item\">\r\n                    <span class=\"message-timestamp\">{{ message.date_sent | date:'MMM d, y, h:mm a' }}</span>\r\n                    <img [src]=\"message.sender.profileimg\" (click)=\"showUserProfile(message.sender)\"\r\n                        class=\"message-image\" alt=\"{{ message.sender.username }}'s profile image\">\r\n                    <div class=\"message-content\" *ngIf=\"!isValidImageURL(message.content)\">\r\n                        <strong>{{ message.sender.username }}</strong>: <span\r\n                            [innerHTML]=\"formatMessage(message.content)\"></span>\r\n                    </div>\r\n                    <div class=\"message-content\" *ngIf=\"isValidImageURL(message.content)\">\r\n                        <strong>{{ message.sender.username }}</strong>:\r\n                        <img [src]=\"(message?.content)\" alt=\"Image content\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div *ngIf=\"isDialogMinimized\" (click)=\"openDialog()\" class=\"minimized-dialog\">\r\n        <i class=\"pi pi-window-minimize\"></i>\r\n    </div>\r\n\r\n    <!-- Input Section -->\r\n    <div class=\"input-section\">\r\n        <textarea rows=\"1\" cols=\"80\" pInputTextarea [(ngModel)]=\"newMessageContent\" class=\"input-textarea\"\r\n            (keydown.enter)=\"sendMessage()\"></textarea>\r\n        <p-fileUpload #fileInput name=\"file\" url=\"https://localhost:8443/api/art/uploadArt\" accept=\"image/*\"\r\n            [style.display]=\"'none'\"></p-fileUpload>\r\n\r\n        <!-- Upload Button -->\r\n        <button pButton type=\"button\" class=\"ui-button-secondary btn-upload\" (click)=\"openDialog()\">\r\n            <i class=\"pi pi-upload\"></i>\r\n        </button>\r\n\r\n        <!-- Art Upload Dialog -->\r\n        <div *ngIf=\"isDialogOpen\" @fadeInOut>\r\n            <p-dialog [(visible)]=\"isDialogOpen\" [modal]=\"true\" [closable]=\"false\" header=\"Upload Art\"\r\n                [styleClass]=\"'custom-dialog'\">\r\n                <ng-template pTemplate=\"header\">\r\n                    <div class=\"modal-header\">\r\n                        <span class=\"modal-title\">Upload Art</span>\r\n                        <button (click)=\"minimizeModal()\" class=\"modal-control\" pRipple><i\r\n                                class=\"pi pi-minus\"></i></button>\r\n                        <button (click)=\"closeModal()\" class=\"modal-control\" pRipple><i\r\n                                class=\"pi pi-times\"></i></button>\r\n                    </div>\r\n                </ng-template>\r\n                <div class=\"ui-g\">\r\n                    <div class=\"ui-g-12\">\r\n                        <label for=\"artName\">Art Name:</label>\r\n                        <input type=\"text\" pInputText [(ngModel)]=\"artName\">\r\n                    </div>\r\n                    <div class=\"ui-g-12\">\r\n                        <label for=\"artAuthor\">Art Author:</label>\r\n                        <input type=\"text\" pInputText [(ngModel)]=\"artAuthor\">\r\n                    </div>\r\n                    <div class=\"ui-g-12\">\r\n                        <label for=\"fileInput\">Select File:</label>\r\n                        <input #fileInput type=\"file\" (change)=\"onFileSelected($event)\">\r\n                    </div>\r\n                    <div class=\"ui-g-12\">\r\n                        <button pButton type=\"button\" label=\"Upload\" (click)=\"onUploadClicked()\"></button>\r\n                    </div>\r\n                </div>\r\n            </p-dialog>\r\n        </div>\r\n\r\n        <!-- Send Button -->\r\n        <button pButton type=\"button\" class=\"ui-button-success btn-send\" (click)=\"sendMessage()\">\r\n            <i class=\"pi pi-send\"></i>\r\n        </button>\r\n    </div>\r\n\r\n    <!-- User Profile Dialog -->\r\n    <p-dialog [(visible)]=\"showUserProfileDialog\" (onHide)=\"closeUserProfile()\">\r\n        <ng-template pTemplate=\"header\">\r\n            {{ selectedUser?.username }}\r\n        </ng-template>\r\n        <div class=\"dialog-content\">\r\n            <img [src]=\"selectedUser?.profileimg\" alt=\"{{ selectedUser?.username }}'s profile image\"\r\n                class=\"profile-dialog-image\">\r\n            <p>{{ selectedUser?.statusmsg }}</p>\r\n        </div>\r\n    </p-dialog>\r\n\r\n\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Message } from 'primeng/api';\nimport { LoginRequest } from './LoginRequest';\nimport { Router } from '@angular/router';\nimport { firstValueFrom } from 'rxjs';\nimport { Util } from '../common/util/util';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username!: string;\n  password!: string;\n  failedAttempts: number = 0;\n  firstFailedAttempt!: Date;\n  msgs: Message[] = [];\n\n  constructor(private http: HttpClient, private router: Router) { }\n  async login() {\n    const url = `https://${window.location.hostname}:8443/login`;\n    const loginRequest: LoginRequest = {\n      username: this.username,\n      password: this.password,\n      token: ''\n    };\n    try {\n      const response: any = await firstValueFrom(this.http.post(url, loginRequest));\n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        this.failedAttempts = 0;\n        this.msgs = [{ severity: 'success', summary: 'Success Message', detail: 'Login successful.' }];\n        this.router.navigate(['home']);\n      }\n      else {\n        this.failedAttempts++;\n        switch (this.failedAttempts) {\n          case 1:\n            this.firstFailedAttempt = new Date();\n            this.msgs = [{ severity: 'error', summary: 'Error Message', detail: 'Login failed. Please try again.' }];\n            break;\n          case 10:\n            Util.setDelay(600);\n            this.msgs = [{ severity: 'error', summary: 'Error Message', detail: 'Timed out for 10 minutes.  Please wait for new login attempt' }];\n            break;\n          default:\n            const numFailedAttemptsLeft = 10 - this.failedAttempts;\n            const errorMsg = (\"You have \" + numFailedAttemptsLeft + \" attempts left until you are temporarily blocked from logging in.\").toString();\n            this.msgs = [{ severity: 'error', summary: 'Error Message', detail: errorMsg }];\n            break;\n\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}","<div class=\"p-grid p-justify-center login-container\">\n    <div class=\"p-col-12 p-md-6 p-lg-4\">\n        <p-messages [(value)]=\"msgs\" class=\"messages-panel\"></p-messages>\n        <p-card header=\"Login\" class=\"login-card\">\n            <form (ngSubmit)=\"login()\" class=\"login-form\">\n                <div class=\"p-field\">\n                    <label for=\"username\" class=\"input-label\">Username</label>\n                    <div class=\"input-wrapper\">\n                        <i class=\"pi pi-user\"></i>\n                        <input id=\"username\" [(ngModel)]=\"username\" name=\"username\" pInputText\n                            placeholder=\"Enter username\" class=\"uniform-input\" />\n                    </div>\n                </div>\n                <div class=\"p-field\">\n                    <label for=\"password\" class=\"input-label\">Password</label>\n                    <div class=\"input-wrapper\">\n                        <i class=\"pi pi-lock\"></i>\n                        <input id=\"password\" [(ngModel)]=\"password\" name=\"password\" type=\"password\" pInputText\n                            placeholder=\"Enter password\" class=\"uniform-input\" />\n                    </div>\n                </div>\n                <div class=\"button-group\">\n                    <p-button type=\"submit\" label=\"Login\" styleClass=\"p-button-primary\"></p-button>\n                    <p-button routerLink=\"/register\" label=\"Register\" styleClass=\"p-button-secondary\"></p-button>\n                </div>\n                <div class=\"register-link\">\n                    Not registered? <a routerLink=\"/register\">Register here</a>\n                </div>\n            </form>\n        </p-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegisterRequest } from './RegisterRequest';\nimport { Message } from 'primeng/api';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { firstValueFrom } from 'rxjs';\nimport { Util } from '../common/util/util';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n\n  email!: string;\n  username!: string;\n  password!: string;\n  failedAttempts: number = 0;\n  msgs: Message[] = [];\n  firstFailedAttempt!: Date;\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router) {\n\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  async onSubmit(): Promise<void> {\n    if (this.registerForm.valid) {\n      const url = `https://${window.location.hostname}:8443/register`;\n      const registerRequest: RegisterRequest = {\n        username: this.registerForm.get('username')?.value,\n        password: this.registerForm.get('password')?.value,\n        email: this.registerForm.get('email')?.value\n      };\n      try {\n        const response: any = await firstValueFrom(this.http.post(url, registerRequest));\n        if (response.id) {\n          this.failedAttempts = 0;\n          this.msgs = [{ severity: 'success', summary: 'Success Message', detail: 'Register successful.  You may now login' }];\n          Util.setDelay(2);\n          this.router.navigate(['login']);\n        }\n        else {\n          this.failedAttempts++;\n          switch (this.failedAttempts) {\n            case 1:\n              this.firstFailedAttempt = new Date();\n              this.msgs = [{ severity: 'error', summary: 'Error Message', detail: 'Registration failed. Please try again.' }];\n              break;\n            case 10:\n              Util.setDelay(600);\n              this.msgs = [{ severity: 'error', summary: 'Error Message', detail: 'Timed out for 10 minutes.  Please wait for new registration attempt' }];\n              break;\n            default:\n              const numFailedAttemptsLeft = 10 - this.failedAttempts;\n              const errorMsg = (\"You have \" + numFailedAttemptsLeft + \" attempts left until you are temporarily blocked from registering.\").toString();\n              this.msgs = [{ severity: 'error', summary: 'Error Message', detail: errorMsg }];\n              break;\n\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n}","<div class=\"p-grid p-justify-center register-container\">\n    <div class=\"p-col-8\">\n        <p-card header=\"Register\" class=\"register-card\">\n            <ng-template pTemplate=\"content\">\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"register-form\">\n                    <div class=\"p-field\">\n                        <label for=\"email\" class=\"input-label\">Email</label>\n                        <div class=\"input-wrapper\">\n                            <i class=\"pi pi-envelope\"></i>\n                            <input id=\"email\" type=\"email\" pInputText formControlName=\"email\" class=\"uniform-input\">\n                        </div>\n                        <p-message severity=\"error\" text=\"Email is required\"\n                            *ngIf=\"registerForm.get('email')?.errors?.['required']\" class=\"error-message\"></p-message>\n                    </div>\n                    <div class=\"p-field\">\n                        <label for=\"username\" class=\"input-label\">Username</label>\n                        <div class=\"input-wrapper\">\n                            <i class=\"pi pi-user\"></i>\n                            <input id=\"username\" type=\"text\" pInputText formControlName=\"username\"\n                                class=\"uniform-input\">\n                        </div>\n                        <p-message severity=\"error\" text=\"Username is required\"\n                            *ngIf=\"registerForm.get('username')?.errors?.['required']\"\n                            class=\"error-message\"></p-message>\n                    </div>\n                    <div class=\"p-field\">\n                        <label for=\"password\" class=\"input-label\">Password</label>\n                        <div class=\"input-wrapper\">\n                            <i class=\"pi pi-lock\"></i>\n                            <input id=\"password\" name=\"password\" type=\"password\" pInputText formControlName=\"password\"\n                                class=\"uniform-input\">\n                        </div>\n                        <p-message severity=\"error\" text=\"Password is required\"\n                            *ngIf=\"registerForm.get('password')?.errors?.['required']\"\n                            class=\"error-message\"></p-message>\n                    </div>\n                    <div class=\"button-group\">\n                        <p-button type=\"submit\" label=\"Register\" [disabled]=\"registerForm.invalid\"\n                            class=\"register-button\"></p-button>\n                    </div>\n                    <div class=\"login-link\">\n                        Already registered? <a routerLink=\"/login\">Login here</a>\n                    </div>\n                </form>\n            </ng-template>\n        </p-card>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from '../objects/product';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  deleteProduct(id: number): Observable<any> {\r\n    return this.http.delete(`https://${window.location.hostname}:8443/api/products/deleteProduct/${id}`, { observe: 'response', withCredentials: true });\r\n  }\r\n\r\n  getProductById(id: number): Observable<Product> {\r\n    return this.http.get<Product>(`https://${window.location.hostname}:8443/api/products/getProductById/${id}`);\r\n  }\r\n\r\n  getAllProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`https://${window.location.hostname}:8443/api/products/getAllProducts`);\r\n  }\r\n\r\n  updateProduct(product: Product): Observable<any> {\r\n    return this.http.put<Product>(`https://${window.location.hostname}:8443/api/products/updateProduct`, product, { observe: 'response', withCredentials: true });\r\n  }\r\n\r\n  getProductByName(productname: string): Observable<any> {\r\n    return this.http.get<Product>(`https://${window.location.hostname}:8443/api/products/getProductByName/${productname}`, { observe: 'response', withCredentials: true });\r\n  }\r\n\r\n  addProduct(product: Product): Observable<any> {\r\n    return this.http.post<Product>(`https://${window.location.hostname}:8443/api/products/addProduct`, product, { observe: 'response', withCredentials: true });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from './objects/product';\r\nimport { ProductService } from './product/product.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  products: Product[] = [];\r\n  product: any = { id: \"\", productname: \"\", price: 0, image: \"\", inventorystatus: \"\", shoplink: \"\", isFavorite: false, rating: 0 };\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  async ngOnInit() {\r\n    await this.loadAllProducts();\r\n  }\r\n\r\n  async loadAllProducts() {\r\n    try {\r\n      let product: Product;\r\n      const response: any = await firstValueFrom(this.productService.getAllProducts());\r\n      if (response && response.length > 0) {\r\n        response.forEach((curProduct: any) => {\r\n          product.id = curProduct.id!;\r\n          product.productname = curProduct.productname!;\r\n          product.price = curProduct.price!;\r\n          product.inventorystatus = curProduct.inventorystatus!;\r\n          product.image = curProduct.image!;\r\n          product.shoplink = curProduct.shoplink!;\r\n          product.isFavorite = curProduct.isFavorite!;\r\n          product.rating = curProduct.rating!;\r\n          this.products.push(product);\r\n        });\r\n        console.log(\"products: \", this.products);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n  }\r\n\r\n  async loadProduct() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.productService.getProductById(1));\r\n      if (response && response.id > 0) {\r\n        this.product.id = response.id!;\r\n        this.product.productname = response.productname!;\r\n        this.product.price = response.price;\r\n        this.product.inventorystatus = response.inventorystatus;\r\n        this.product.image = response.image;\r\n        this.product.shoplink = response.shoplink;\r\n        this.product.isFavorite = false;\r\n        this.product.rating = Math.floor(Math.random() * 5) + 1; // Simulate random rating\r\n        console.log(\"product: \", JSON.stringify(this.product!));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  responsiveOptions: any[] = [\r\n    { breakpoint: '1024px', numVisible: 3, numScroll: 3 },\r\n    { breakpoint: '768px', numVisible: 2, numScroll: 2 },\r\n    { breakpoint: '560px', numVisible: 1, numScroll: 1 }\r\n  ];\r\n\r\n  getSeverity(status: string) {\r\n    switch (status) {\r\n      case 'In Stock':\r\n        return 'success';\r\n      case 'Low Stock':\r\n        return 'warning';\r\n      case 'Out Of Stock':\r\n        return 'danger';\r\n      default:\r\n        return 'medium';\r\n    }\r\n  }\r\n\r\n  setDisabled(status: string) {\r\n    return status === \"Out Of Stock\";\r\n  }\r\n\r\n  onClick(productLink: string) {\r\n    if (productLink != '')\r\n      window.open(productLink, \"_self\");\r\n  }\r\n\r\n  toggleFavorite(product: Product) {\r\n    product.isFavorite = !product.isFavorite;\r\n  }\r\n}","<!-- https://buy.stripe.com/test_8wM5mQcoKcxhdHOcMM -->\r\n<div class=\"shoppingPage\">\r\n    <h2 class=\"pageTitle\">Featured Products</h2>\r\n\r\n    <p-carousel [value]=\"products\" [numVisible]=\"3\" [numScroll]=\"1\" [circular]=\"false\"\r\n        [responsiveOptions]=\"responsiveOptions\">\r\n        <ng-template let-product pTemplate=\"item\">\r\n            <div class=\"product-card\">\r\n                <div class=\"product-image\">\r\n                    <img src=\"{{ product.image }}\" [alt]=\"product.productname\" class=\"product-img\" />\r\n                    <button class=\"favorite-btn\" (click)=\"toggleFavorite(product)\">\r\n                        <i class=\"pi\"\r\n                            [ngClass]=\"{'pi-heart': !product.isFavorite, 'pi-heart-fill': product.isFavorite}\"></i>\r\n                    </button>\r\n                </div>\r\n                <div class=\"product-details\">\r\n                    <h4 class=\"product-name\">{{ product.productname }}</h4>\r\n                    <div class=\"product-rating\">\r\n                        <p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\r\n                    </div>\r\n                    <h6 class=\"product-price\">{{ '$' + product.price }}</h6>\r\n                    <p-tag [value]=\"product.inventorystatus\" [severity]=\"getSeverity(product.inventorystatus)\"></p-tag>\r\n                    <div class=\"product-actions\">\r\n                        <p-button [disabled]=\"setDisabled(product.inventorystatus)\" type=\"button\"\r\n                            (click)=\"onClick(product.shoplink)\" label=\"Add to Cart\" icon=\"pi pi-shopping-cart\"\r\n                            styleClass=\"p-button-rounded p-button-primary\"></p-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </p-carousel>\r\n</div>","import { Component } from '@angular/core';\nimport { ForumService } from '../common/service/forum.service';\nimport { UserService } from '../common/service/userservice';\nimport { ChatService } from '../home/chat.service';\nimport { Router } from '@angular/router';\nimport { Thread } from '../home/message';\nimport { firstValueFrom } from 'rxjs';\nimport { HLUser } from '../home/hluser';\n@Component({\n  selector: 'app-thread-create',\n  templateUrl: './thread-create.component.html',\n  styleUrls: ['./thread-create.component.css']\n})\nexport class ThreadCreateComponent {\n  newThread: Thread = { id: '', content: '', sender: { id: '', username: '', statusmsg: '', profileimg: '' }, date_sent: new Date(), title: '', category: '', posts: [] };\n  categories: string[] = ['Art', 'Music', 'Games', 'Movies', 'Books', 'Other'];\n\n  constructor(private forumService: ForumService, private userService: UserService, private router: Router) {\n\n  }\n\n  async onSubmit() {\n    try {\n      await this.getUsername() as HLUser; // Wait for getUsername to complete and typecast 'sender' to 'HLUser'\n      // Set the sender of the new thread\n      console.log(\"Submitting new thread:\", JSON.stringify(this.newThread)); // Extra logging\n      const response = await firstValueFrom(this.forumService.addThread(this.newThread));\n      console.log(response);\n      this.forumService.currentThreadId = response.body.id;\n      this.router.navigate(['/thread', this.forumService.currentThreadId]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getUsername() {\n    try {\n      const response = await firstValueFrom(this.userService.getUser());\n      this.newThread.sender = {\n        id: response.body.id,\n        username: response.body.username,\n        statusmsg: response.body.statusmsg,\n        profileimg: response.body.profileimg\n      }\n    } catch (error) { console.error(error); }\n    return this.newThread.sender!;\n  }\n}\n\n\n\n\n","<div class=\"thread-form-container\">\n    <p-card header=\"Create New Thread\" class=\"thread-form-card\">\n        <form (ngSubmit)=\"onSubmit()\" class=\"thread-form\">\n            <div class=\"p-fluid\">\n                <div class=\"p-field\">\n                    <label for=\"title\">Title</label>\n                    <input id=\"title\" type=\"text\" pInputText placeholder=\"Enter title\" [(ngModel)]=\"newThread.title\"\n                        name=\"title\" class=\"form-control\" />\n                </div>\n                <div class=\"p-field\">\n                    <label for=\"content\">Content</label>\n                    <textarea id=\"content\" pInputTextarea placeholder=\"Enter content\" [(ngModel)]=\"newThread.content\"\n                        name=\"content\" class=\"form-control\" rows=\"5\"></textarea>\n                </div>\n                <p-dropdown id=\"category\" [options]=\"categories\" [(ngModel)]=\"newThread.category\"\n                    placeholder=\"Select a Category\" name=\"category\" class=\"form-control\"></p-dropdown>\n                <!-- <p-dropdown id=\"category\" [options]=\"categories\" [(ngModel)]=\"newThread.category\"\n                    placeholder=\"Select a Category\" name=\"category\" class=\"form-control\" optionLabel=\"name\"\n                    optionValue=\"value\"></p-dropdown> -->\n                <div class=\"p-field\">\n                    <button type=\"submit\" pButton label=\"Create Thread\" class=\"submit-button\"></button>\n                </div>\n            </div>\n        </form>\n    </p-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ForumService } from '../common/service/forum.service';\nimport { Post, Thread } from '../home/message';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../common/service/userservice';\nimport { HLUser } from '../home/hluser';\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\n\n\n@Component({\n  selector: 'app-thread-detail',\n  templateUrl: './thread-detail.component.html',\n  styleUrls: ['./thread-detail.component.css']\n})\nexport class ThreadDetailComponent implements OnInit {\n  user: HLUser = {} as HLUser;\n  thread: Thread = {} as Thread;\n  newPost: Post = {} as Post;\n  id: string = this.forumService.currentThreadId;\n  posterProfileImg: string = \"\";\n  ngOnInit(): void {\n    const idFromRoute = this.aRoute.snapshot.params['id'];\n    if (idFromRoute) {\n      this.id = idFromRoute;\n      localStorage.setItem('threadId', this.id);\n    } else {\n      const storedId = localStorage.getItem('threadId');\n      if (storedId) {\n        this.id = storedId;\n      }\n    }\n    this.getThread();\n  }\n  constructor(private forumService: ForumService, private userService: UserService, private aRoute: ActivatedRoute, private router: Router) {\n\n  }\n  async getUser() {\n    try {\n      const response = await firstValueFrom(this.userService.getUser());\n      this.user.id = response.body.id;\n      this.user.username = response.body.username;\n      this.user.statusmsg = response.body.statusmsg;\n      this.user.profileimg = response.body.profileimg;\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  }\n\n  async getThread() {\n    try {\n      const response = await firstValueFrom(this.forumService.getThreadById(this.id));\n      this.thread.id = response.body.id;\n      this.thread.title = response.body.title;\n      this.thread.category = response.body.category;\n      this.thread.posts = response.body.posts;\n      this.thread.date_sent = response.body.date_sent;\n      this.thread.content = response.body.content;\n      this.thread.sender = {} as HLUser;\n      this.thread.sender.id = response.body.sender.id;\n      this.thread.sender.username = response.body.sender.username;\n      this.thread.sender.profileimg = response.body.sender.profileimg;\n      this.thread.sender.statusmsg = response.body.sender.statusmsg;\n      await this.getPosts();\n    }\n    catch (error) {\n      console.error(error);\n    }\n  }\n  async addPost() {\n    await this.getUser();\n    this.newPost.sender = {} as HLUser; // Initialize newPost.sender\n    this.newPost.sender.id = this.user.id;\n    this.newPost.sender.username = this.user.username;\n    this.newPost.sender.profileimg = this.user.profileimg;\n    this.newPost.sender.statusmsg = this.user.statusmsg;\n    this.newPost.date_sent = new Date();\n    this.newPost.thread = {} as Thread;\n    this.newPost.thread.id = this.aRoute.snapshot.paramMap.get('id')!;\n    await firstValueFrom(this.forumService.addPost(this.newPost));\n    await this.getPosts();\n  }\n  async getPosts() {\n    const id = this.id!;\n    try {\n      const response = await firstValueFrom(this.forumService.getPostsByThreadId(id));\n      this.thread.posts = response.body!;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","<div *ngIf=\"thread\" class=\"thread-container\">\n    <div class=\"thread-header\">\n        <h2>{{ thread.title }}</h2>\n        <p class=\"category\">{{ thread.category }}</p>\n    </div>\n    <div class=\"thread-content\">\n        <p>{{ thread.content }}</p>\n    </div>\n    <div class=\"posts-section\">\n        <h3>Posts</h3>\n        <div *ngFor=\"let post of thread.posts\" class=\"post\">\n            <div class=\"user-image-container\">\n                <img *ngIf=\"post.sender.profileimg\" [src]=\"post.sender.profileimg\" alt=\"User Image\" class=\"user-image\">\n            </div>\n            <div class=\"post-content\">\n                <div class=\"post-header\">\n                    <span class=\"username\">{{ post.sender.username }}</span>\n                    <span class=\"timestamp\">{{ post.date_sent | date:'short' }}</span>\n                </div>\n                <p>{{ post.content }}</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"input-area\">\n        <form (ngSubmit)=\"addPost()\">\n            <div class=\"input-container\">\n                <textarea pInputTextarea [(ngModel)]=\"newPost.content\" name=\"postContent\"\n                    placeholder=\"Write a post...\"></textarea>\n                <button type=\"submit\" pButton icon=\"pi pi-send\" label=\"Add Post\" class=\"p-button-rounded\"></button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Thread } from '../home/message';\nimport { ForumService } from '../common/service/forum.service'; // Import the service\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-thread-list',\n  templateUrl: './thread-list.component.html',\n  styleUrls: ['./thread-list.component.css']\n})\nexport class ThreadListComponent implements OnInit {\n  threads: Thread[] = [];\n\n  constructor(private router: Router, private forumService: ForumService) { } // Inject the service\n\n  async ngOnInit() {\n    await this.getThreads();\n  }\n\n  async getThreads() {\n    const response: any = await firstValueFrom(this.forumService.fetchThreadsList());\n    console.log(response!);\n\n  }\n\n  addThread(): void {\n    this.router.navigate(['/create-thread']);\n  }\n\n  viewThread(id: string): void {\n    this.forumService.currentThreadId = id;\n    this.router.navigate(['/thread', this.forumService.currentThreadId]);\n  }\n}","<div>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\">\n\n    <div class=\"forum-header\">\n        <h2>Forum</h2>\n        <button class=\"add-thread-button\" (click)=\"addThread()\">\n            <i class=\"fa fa-plus\"></i> Add Thread\n        </button>\n    </div>\n\n    <p-table [value]=\"threads\" styleClass=\"forum-table\">\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th>Title</th>\n                <th>Category</th>\n                <th>Creator</th>\n                <th>Actions</th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-thread>\n            <tr>\n                <td>\n                    <div class=\"thread-title\">{{ thread.title }}</div>\n                </td>\n                <td>\n                    <div class=\"thread-category\">{{ thread.category }}</div>\n                </td>\n                <td>\n                    <div class=\"thread-creator\">{{ thread.sender.username }}</div>\n                </td>\n                <td>\n                    <button class=\"view-thread-button\" (click)=\"viewThread(thread.id)\">\n                        <i class=\"fa fa-eye\"></i> View\n                    </button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../common/service/userservice';\r\nimport { HLUser } from '../home/hluser';\r\nimport { Message } from 'primeng/api';\r\nimport { AuthService } from '../common/service/auth.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  constructor(private userService: UserService, private authService: AuthService) { }\r\n  user: HLUser = { id: \"\", username: \"\", statusmsg: \"\", profileimg: \"\" };\r\n  updatedUser: HLUser = { id: \"\", username: \"\", statusmsg: \"\", profileimg: \"\" };\r\n  statusCode: number = 0;\r\n  errorMsgDetail: string = \"\";\r\n  errorMsg: Message[] = [];\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  async getUser() {\r\n    try {\r\n      const response: any = await firstValueFrom(this.userService.getUser());\r\n      this.statusCode = response.status!;\r\n      if (this.statusCode === 200) {\r\n        this.user = response.body!;\r\n        console.log(\"user: \", this.user!);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error getting user.  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async updateUser() {\r\n    try {\r\n      await this.getUser();\r\n      if (this.user !== null) {\r\n        this.updatedUser.username = this.user.username;\r\n        this.updatedUser.id = this.user.id;\r\n      }\r\n      const response: any = await firstValueFrom(this.userService.editUser(this.updatedUser!));\r\n      this.statusCode = response.status;\r\n      if (this.statusCode === 200) {\r\n        this.updatedUser = response.body!;\r\n        console.log(\"user: \", this.updatedUser);\r\n      }\r\n      else {\r\n        if (this.errorMsg.length > 0)\r\n          this.errorMsg.pop();\r\n        this.errorMsgDetail = \"Error updating user with id: \" + this.updatedUser.id + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  async changeEmail() {\r\n    this.userService.changeEmail(this.updatedUser).subscribe({\r\n      next: (response: { status: number; body: HLUser; }) => {\r\n        this.statusCode = response.status;\r\n        this.updatedUser = response.body;\r\n        console.log(\"user: \" + JSON.stringify(this.updatedUser));\r\n        console.log(\"status code: \" + this.statusCode);\r\n      }, error: (error: { status: number; }) => {\r\n        this.statusCode = error.status;\r\n        console.error(\"An error occurred:\", error);\r\n        console.log(\"status code: \" + this.statusCode);\r\n        this.errorMsgDetail = \"Error updating user with id: \" + this.updatedUser.id + \".  Response code: \" + this.statusCode;\r\n        this.errorMsg.pop();\r\n        this.errorMsg.push({ severity: 'error', summary: 'Error', detail: this.errorMsgDetail });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p-card header=\"Edit User Profile\">\r\n    <!-- Display error messages if any -->\r\n    <p-messages [(value)]=\"errorMsg\"></p-messages>\r\n\r\n    <div class=\"p-fluid p-formgrid p-grid\">\r\n        <!-- Edit Status Message -->\r\n        <div class=\"p-field p-col-12\">\r\n            <label for=\"statusmsg\">Status Message</label>\r\n            <input id=\"statusmsg\" type=\"text\" [(ngModel)]=\"updatedUser.statusmsg\" pInputText\r\n                placeholder=\"Enter your status message\">\r\n        </div>\r\n\r\n        <!-- Edit Profile Image URL -->\r\n        <div class=\"p-field p-col-12\">\r\n            <label for=\"profileimg\">Profile Image URL</label>\r\n            <input id=\"profileimg\" type=\"text\" [(ngModel)]=\"updatedUser.profileimg\" pInputText\r\n                placeholder=\"Enter URL for your profile image\">\r\n        </div>\r\n\r\n        <!-- Update Button -->\r\n        <div class=\"p-field p-col-12\">\r\n            <button pButton type=\"button\" label=\"Update\" class=\"ui-button-success\" (click)=\"updateUser()\"></button>\r\n        </div>\r\n    </div>\r\n</p-card>","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { saveAs } from 'file-saver';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-youtube-dl',\r\n  templateUrl: './youtube-dl.component.html',\r\n  styleUrls: ['./youtube-dl.component.css']\r\n})\r\n\r\nexport class YoutubeDLComponent {\r\n  url = '';\r\n  selectedType: string | undefined;\r\n  types: DownloadType[] = [\r\n    { name: 'Music', value: 'music' },\r\n    { name: 'Video', value: 'video' }\r\n  ];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  async download() {\r\n    if (this.url && this.selectedType) {\r\n      const body = { url: this.url, type: this.selectedType };\r\n      try {\r\n        const response: HttpResponse<ArrayBuffer> = await firstValueFrom(\r\n          this.http.post('https://' + window.location.hostname + ':8443/api/youtube-dl/download', body, { observe: 'response', responseType: 'arraybuffer' })\r\n        );\r\n        let filename = response.headers.get('Content-Disposition')?.split('=')[1];\r\n        if (response.body && filename) {\r\n          let blob = new Blob([response.body], { type: this.selectedType === 'music' ? 'audio/mpeg' : 'video/mp4' });\r\n          this.createAndDownloadBlobFile(blob, filename);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      alert('Please enter a URL and select a type.');\r\n    }\r\n  }\r\n\r\n  private createAndDownloadBlobFile(blob: Blob, filename: string) {\r\n    saveAs(blob, filename);\r\n  }\r\n}\r\n\r\ninterface DownloadType {\r\n  name: string;\r\n  value: string;\r\n}","<div class=\"p-grid p-fluid\">\r\n    <div class=\"p-col-12\">\r\n        <div class=\"p-inputgroup\">\r\n            <span class=\"p-inputgroup-addon\"><i class=\"pi pi-globe\"></i></span>\r\n            <input id=\"url\" [(ngModel)]=\"url\" class=\"p-inputtext p-component\" type=\"text\" pInputText\r\n                placeholder=\"Enter URL\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <div class=\"custom-dropdown\">\r\n            <span class=\"p-inputgroup-addon\"><i class=\"pi pi-list\"></i></span>\r\n            <p-dropdown [options]=\"types\" [(ngModel)]=\"selectedType\" optionLabel=\"name\" optionValue=\"value\">\r\n            </p-dropdown>\r\n        </div>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n        <button pButton type=\"button\" label=\"Download\" icon=\"pi pi-download\" (click)=\"download()\"\r\n            styleClass=\"p-button-success p-button-rounded\"></button>\r\n    </div>\r\n</div>","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["firstValueFrom","i0","ɵɵelementStart","ɵɵlistener","AdminComponent_p_messages_0_Template_p_messages_valueChange_0_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","errorMsg","ɵɵelementEnd","ɵɵproperty","ctx_r0","AdminComponent_div_7_Template_form_ngSubmit_1_listener","_r7","ctx_r6","updateProduct","ɵɵtext","AdminComponent_div_7_Template_input_ngModelChange_5_listener","ctx_r8","product","productname","AdminComponent_div_7_Template_p_inputNumber_ngModelChange_9_listener","ctx_r9","price","AdminComponent_div_7_Template_input_ngModelChange_13_listener","ctx_r10","image","AdminComponent_div_7_Template_p_dropdown_ngModelChange_17_listener","ctx_r11","inventorystatus","AdminComponent_div_7_Template_input_ngModelChange_21_listener","ctx_r12","shoplink","ɵɵelement","ɵɵadvance","ctx_r1","inventoryStatusOptions","buttonLabel","AdminComponent_div_8_Template_button_click_1_listener","_r14","ctx_r13","onCreateButtonPressed","AdminComponent_div_9_Template_form_ngSubmit_1_listener","_r16","ctx_r15","createProduct","AdminComponent_div_9_Template_input_ngModelChange_5_listener","ctx_r17","AdminComponent_div_9_Template_p_inputNumber_ngModelChange_9_listener","ctx_r18","AdminComponent_div_9_Template_input_ngModelChange_13_listener","ctx_r19","AdminComponent_div_9_Template_p_dropdown_ngModelChange_17_listener","ctx_r20","AdminComponent_div_9_Template_input_ngModelChange_21_listener","ctx_r21","ctx_r3","AdminComponent","constructor","productService","userService","errorMsgDetail","bFindClicked","bCreateClicked","statusCode","id","user","username","statusmsg","profileimg","label","value","getProductByName","_this","_asyncToGenerator","response","status","body","console","log","length","pop","push","severity","summary","detail","error","_this2","addProduct","_this3","_this4","deleteUser","_this5","updateUser","banUser","_this6","unbanUser","_this7","deleteProduct","_this8","_","ɵɵdirectiveInject","i1","ProductService","i2","UserService","_2","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","ɵɵtemplate","AdminComponent_p_messages_0_Template","AdminComponent_Template_form_ngSubmit_3_listener","AdminComponent_Template_input_ngModelChange_5_listener","AdminComponent_div_7_Template","AdminComponent_div_8_Template","AdminComponent_div_9_Template","RouterModule","ArtComponent","HomeComponent","ShopComponent","UserComponent","YoutubeDLComponent","ThreadListComponent","ThreadCreateComponent","ThreadDetailComponent","LoginComponent","RegisterComponent","authGuard","HeaderComponent","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","_3","forRoot","useHash","imports","exports","AppComponent","auth","router","userAuthenticated","loggedIn","AuthService","Router","AppComponent_Template","AppComponent_Conditional_0_Template","ɵɵconditional","BrowserModule","MenuModule","ImageModule","GalleriaModule","DialogModule","ButtonModule","CarouselModule","TagModule","InputTextModule","HttpClientModule","FormsModule","ReactiveFormsModule","MessagesModule","InputTextareaModule","CardModule","BrowserAnimationsModule","DropdownModule","FileUploadModule","TableModule","ToolbarModule","ToastModule","JwtModule","MessageModule","RatingModule","tokenGetter","localStorage","getItem","AppModule","bootstrap","config","allowedDomains","declarations","item_r2","itemImageSrc","ɵɵsanitizeUrl","alt","ɵɵtextInterpolate","title","description","item_r3","thumbnailImageSrc","images","previewImageSrc","ngOnInit","ArtComponent_Template","ArtComponent_ng_template_4_Template","ArtComponent_ng_template_5_Template","inject","route","state","authService","HttpHeaders","http","headers","options","withCredentials","getUserRole","get","window","location","hostname","ɵɵinject","HttpClient","factory","ɵfac","providedIn","ForumService","currentThreadId","addPost","post","observe","addThread","thread","fetchThreadsList","isOwnerOrModerator","senderId","getThreadById","addProfileComment","comment","addCredits","credits","getPostsByThreadId","isAuthenticated","changeEmail","hlUser","put","getUserById","userId","getUser","editUser","addArt","art","uploadArt","file","artName","artAuthor","apiUrl","formData","FormData","append","responseType","delete","changeRole","newRole","Util","setDelay","i","setTimeout","items","icon","routerLink","HeaderComponent_Template","ɵɵstyleMap","ɵɵpureFunction0","_c0","Subject","SockJS","Client","ChatService","messageSubject","initializeWebSocketConnection","token","stompClient","webSocketFactory","reconnectDelay","onConnect","receipt","subscribe","messageOutput","message","JSON","parse","next","onStompError","activate","userHasChatGptApiKey","useChatGPT","request","getNewMessageObservable","asObservable","getMessages","sendMessage","connected","publish","destination","stringify","getUserDetails","animate","style","transition","trigger","hljs","message_r6","sender","ctx_r7","formatMessage","content","ɵɵsanitizeHtml","HomeComponent_div_6_Template_img_click_4_listener","restoredCtx","_r12","$implicit","showUserProfile","HomeComponent_div_6_div_5_Template","HomeComponent_div_6_div_6_Template","ɵɵpipeBind2","date_sent","ɵɵpropertyInterpolate1","isValidImageURL","HomeComponent_div_7_Template_div_click_0_listener","openDialog","HomeComponent_div_14_ng_template_2_Template_button_click_3_listener","_r18","minimizeModal","HomeComponent_div_14_ng_template_2_Template_button_click_5_listener","closeModal","HomeComponent_div_14_Template_p_dialog_visibleChange_1_listener","_r21","isDialogOpen","HomeComponent_div_14_ng_template_2_Template","HomeComponent_div_14_Template_input_ngModelChange_7_listener","ctx_r22","HomeComponent_div_14_Template_input_ngModelChange_11_listener","ctx_r23","HomeComponent_div_14_Template_input_change_15_listener","ctx_r24","onFileSelected","HomeComponent_div_14_Template_button_click_18_listener","ctx_r25","onUploadClicked","undefined","ɵɵtextInterpolate1","ctx_r5","selectedUser","showUserProfileDialog","closeUserProfile","chatService","primengConfig","cdr","Messages","newMessageContent","isUserHaveChatGptApiKey","hluser","gptapikey","isDialogMinimized","selectedFile","selectedFileBase64","showUploadDialog","protocol","host","port","backendBaseUrl","ripple","some","m","getUsername","highlightAll","ngAfterViewChecked","scrollToBottom","codeBlockRegex","boldRegex","headingRegex","lineBreakRegex","orderedListRegex","unorderedListRegex","formattedMessage","replace","orderedListBlockRegex","unorderedListBlockRegex","_match","language","code","highlightedCode","highlight","event","target","files","convertPathToUrl","filename","encodedFilename","encodeURIComponent","trim","_ref","detectChanges","artImageUrl","_x","apply","arguments","warn","url","isArtworkUrl","startsWith","imageExtensions","urlExtension","slice","lastIndexOf","isImageExtension","includes","messagesContainer","nativeElement","scrollTop","scrollHeight","err","Promise","resolve","reject","data","messageMap","Map","toParts","split","parts","set","Error","newMessage","Date","i3","PrimeNGConfig","ChangeDetectorRef","viewQuery","HomeComponent_Query","ɵɵelementContainerStart","HomeComponent_div_6_Template","ɵɵelementContainerEnd","HomeComponent_div_7_Template","HomeComponent_Template_textarea_ngModelChange_9_listener","HomeComponent_Template_textarea_keydown_enter_9_listener","HomeComponent_Template_button_click_12_listener","HomeComponent_div_14_Template","HomeComponent_Template_button_click_15_listener","HomeComponent_Template_p_dialog_visibleChange_17_listener","HomeComponent_Template_p_dialog_onHide_17_listener","HomeComponent_ng_template_18_Template","ɵɵstyleProp","opacity","failedAttempts","msgs","login","loginRequest","password","setItem","navigate","firstFailedAttempt","numFailedAttemptsLeft","toString","LoginComponent_Template","LoginComponent_Template_p_messages_valueChange_2_listener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_10_listener","LoginComponent_Template_input_ngModelChange_16_listener","Validators","RegisterComponent_ng_template_3_Template_form_ngSubmit_0_listener","onSubmit","RegisterComponent_ng_template_3_p_message_7_Template","RegisterComponent_ng_template_3_p_message_14_Template","RegisterComponent_ng_template_3_p_message_21_Template","registerForm","tmp_1_0","errors","tmp_2_0","tmp_3_0","invalid","formBuilder","group","email","required","valid","registerRequest","FormBuilder","RegisterComponent_Template","RegisterComponent_ng_template_3_Template","getProductById","getAllProducts","ShopComponent_ng_template_4_Template_button_click_3_listener","_r3","product_r1","ctx_r2","toggleFavorite","ShopComponent_ng_template_4_Template_p_button_click_14_listener","onClick","ɵɵpropertyInterpolate","ɵɵpureFunction2","isFavorite","rating","getSeverity","setDisabled","products","responsiveOptions","breakpoint","numVisible","numScroll","loadAllProducts","forEach","curProduct","loadProduct","Math","floor","random","productLink","open","ShopComponent_Template","ShopComponent_ng_template_4_Template","forumService","newThread","category","posts","categories","ThreadCreateComponent_Template","ThreadCreateComponent_Template_form_ngSubmit_2_listener","ThreadCreateComponent_Template_input_ngModelChange_7_listener","ThreadCreateComponent_Template_textarea_ngModelChange_11_listener","ThreadCreateComponent_Template_p_dropdown_ngModelChange_12_listener","post_r2","ThreadDetailComponent_div_0_div_12_img_2_Template","ThreadDetailComponent_div_0_div_12_Template","ThreadDetailComponent_div_0_Template_form_ngSubmit_14_listener","_r6","ThreadDetailComponent_div_0_Template_textarea_ngModelChange_16_listener","newPost","idFromRoute","aRoute","snapshot","params","storedId","getThread","posterProfileImg","getPosts","paramMap","ActivatedRoute","ThreadDetailComponent_Template","ThreadDetailComponent_div_0_Template","ThreadListComponent_ng_template_10_Template_button_click_11_listener","_r4","thread_r2","viewThread","threads","getThreads","ThreadListComponent_Template","ThreadListComponent_Template_button_click_5_listener","ThreadListComponent_ng_template_9_Template","ThreadListComponent_ng_template_10_Template","updatedUser","UserComponent_Template","UserComponent_Template_p_messages_valueChange_1_listener","UserComponent_Template_input_ngModelChange_6_listener","UserComponent_Template_input_ngModelChange_10_listener","UserComponent_Template_button_click_12_listener","saveAs","types","name","download","selectedType","type","blob","Blob","createAndDownloadBlobFile","alert","YoutubeDLComponent_Template","YoutubeDLComponent_Template_input_ngModelChange_5_listener","YoutubeDLComponent_Template_p_dropdown_ngModelChange_10_listener","YoutubeDLComponent_Template_button_click_12_listener","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}